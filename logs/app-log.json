{"timestamp":"2025-06-12T19:27:22.262761+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 19:27:22,262","level":"INFO","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"Starting MySpringBootProjectApplication using Java 24.0.1 with PID 85558 (/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main started by mohit in /Users/mohit/Documents/Software-Development/my-spring-boot-project)","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:53)\nCaller+1\t at org.springframework.boot.SpringApplication.logStartupInfo(SpringApplication.java:625)\nCaller+2\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:388)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarting","file":"StartupInfoLogger.java","line":"53","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.269268+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 19:27:22,269","level":"DEBUG","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"Running with Spring Boot v4.0.0-SNAPSHOT, Spring v7.0.0-SNAPSHOT","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:54)\nCaller+1\t at org.springframework.boot.SpringApplication.logStartupInfo(SpringApplication.java:625)\nCaller+2\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:388)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarting","file":"StartupInfoLogger.java","line":"54","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.270542+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 19:27:22,270","level":"INFO","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652)\nCaller+1\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:389)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n","class":"org.springframework.boot.SpringApplication","method":"logStartupProfileInfo","file":"SpringApplication.java","line":"652","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.27157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","timestamp":"2025-06-12 19:27:22,271","level":"DEBUG","thread":"main","logger":"org.springframework.boot.SpringApplication","message":"Loading source class com.ms.my_spring_boot_project.MySpringBootProjectApplication","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.SpringApplication.load(SpringApplication.java:685)\nCaller+1\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:414)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n","class":"org.springframework.boot.SpringApplication","method":"load","file":"SpringApplication.java","line":"685","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.316713+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 19:27:22,316","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ad394e6","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:664)\nCaller+1\t at org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.prepareRefresh(AnnotationConfigServletWebServerApplicationContext.java:195)\nCaller+2\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\nCaller+4\t at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n","class":"org.springframework.context.support.AbstractApplicationContext","method":"prepareRefresh","file":"AbstractApplicationContext.java","line":"664","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.341024+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:22,341","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.350202+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:22,350","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.387618+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 19:27:22,387","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/config/WebClientConfig.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.400251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 19:27:22,400","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/controller/TodoController.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.40321+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 19:27:22,403","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/logging/LogGenerator.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:22.406498+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 19:27:22,406","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/service/TodoService.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.101375+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,101","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:294)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.<init>(RepositoryConfigurationDelegate.java:110)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:61)\nCaller+3\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+4\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"multipleStoresDetected","file":"RepositoryConfigurationDelegate.java","line":"294","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.103112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,103","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:145)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.109912+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,109","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages.get(AutoConfigurationPackages.java:75)\nCaller+4\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:79)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.115502+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","thread_name":"main","timestamp":"2025-06-12 19:27:23,115","level":"DEBUG","thread":"main","logger":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","message":"@EnableAutoConfiguration was declared on a class in the package 'com.ms.my_spring_boot_project'. Automatic @Repository and @Entity scanning is enabled.","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages.get(AutoConfigurationPackages.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages.get(AutoConfigurationPackages.java:75)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:79)\nCaller+3\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport$AutoConfiguredAnnotationRepositoryConfigurationSource.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:138)\nCaller+4\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:157)\n","class":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages","method":"get","file":"AutoConfigurationPackages.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.116903+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,116","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for JPA repositories in packages com.ms.my_spring_boot_project.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:155)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"155","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.125587+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"main","timestamp":"2025-06-12 19:27:23,125","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryComponentProvider","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/repository/TodoRepository.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.data.repository.config.RepositoryComponentProvider.findCandidateComponents(RepositoryComponentProvider.java:121)\nCaller+3\t at org.springframework.data.repository.config.RepositoryConfigurationSourceSupport.lambda$getCandidates$1(RepositoryConfigurationSourceSupport.java:76)\nCaller+4\t at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.222907+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,222","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 104 ms. Found 1 JPA repository interface.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.238823+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,238","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:294)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.<init>(RepositoryConfigurationDelegate.java:110)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:61)\nCaller+3\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+4\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"multipleStoresDetected","file":"RepositoryConfigurationDelegate.java","line":"294","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.240164+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,240","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:145)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.247776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,247","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for Redis repositories in packages com.ms.my_spring_boot_project.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:155)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"155","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.251894+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"main","timestamp":"2025-06-12 19:27:23,251","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryComponentProvider","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/repository/TodoRepository.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.data.repository.config.RepositoryComponentProvider.findCandidateComponents(RepositoryComponentProvider.java:121)\nCaller+3\t at org.springframework.data.repository.config.RepositoryConfigurationSourceSupport.lambda$getCandidates$1(RepositoryConfigurationSourceSupport.java:76)\nCaller+4\t at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.254094+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","timestamp":"2025-06-12 19:27:23,254","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ms.my_spring_boot_project.repository.TodoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:327)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96)\nCaller+2\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:170)\nCaller+3\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","method":"isStrictRepositoryCandidate","file":"RepositoryConfigurationExtensionSupport.java","line":"327","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.25466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 19:27:23,254","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.376229+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,376","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.381955+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,381","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.382838+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,382","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.417153+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,417","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.41856+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,418","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'bootstrapExecutorAliasPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.419495+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,419","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.4207+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,420","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.context.event.EventListenerMethodProcessor.postProcessBeanFactory(EventListenerMethodProcessor.java:100)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.421228+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,421","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.context.event.EventListenerMethodProcessor.postProcessBeanFactory(EventListenerMethodProcessor.java:100)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.424126+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,424","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.425383+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,425","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.427484+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,427","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.428115+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,428","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.428578+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,428","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.get(ConfigurationPropertiesBinder.java:219)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.430687+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,430","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.432928+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,432","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.433605+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,433","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.440057+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,440","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.451937+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,451","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.453292+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,453","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.456195+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,456","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.463516+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,463","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.464194+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,464","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.46485+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,464","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'meterRegistryPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.466042+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,466","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:90)\nCaller+4\t at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:118)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.46676+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,466","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.48742+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,487","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.490613+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,490","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.491238+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,491","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.49551+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.495891+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.49903+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,499","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ad394e6'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.513815+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,513","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.515272+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,515","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsRepositoryMethodInvocationListenerBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.518499+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,518","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRegistryPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.521107+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,521","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.534898+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,534","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getWebServerFactory(ServletWebServerApplicationContext.java:228)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:191)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.535417+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,535","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.556149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,556","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.556674+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,556","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.557867+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,557","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.558282+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,558","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.559481+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,559","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.564407+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,564","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:76)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.573321+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,573","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.575814+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,575","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslBundleRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.576227+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,576","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.577188+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,577","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.578402+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,578","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ad394e6'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.578757+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,578","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.580942+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,580","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.581423+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,581","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'fileWatcher'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.582535+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,582","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.588338+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,588","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.589545+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,589","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.590794+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,590","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'nettyWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.591125+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,591","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.592104+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,592","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'nettyWebServerFactoryCustomizer' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.592401+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,592","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'nettyWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.595594+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,595","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.596174+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,596","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.597474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,597","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.597801+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,597","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.617914+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,617","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'errorPageCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor.getRegistrars(ErrorPageRegistrarBeanPostProcessor.java:75)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.618493+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,618","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.619298+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,619","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.620477+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,620","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dispatcherServletRegistration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.620799+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,620","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.621583+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,621","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dispatcherServlet'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.621912+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,621","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.62287+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,622","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.62536+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,625","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.637718+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,637","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.638157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,638","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.640244+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,640","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'multipartConfigElement'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.640662+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,640","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.641316+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,641","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.643668+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,643","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.648791+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,648","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.712092+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,712","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","message":"Code archive: /Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/4.0.0-SNAPSHOT/ec66f47d35fe6a7ffec7aa21b235fbe2ffbc2688/spring-boot-4.0.0-SNAPSHOT.jar","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.server.DocumentRoot.getArchiveFileDocumentRoot(DocumentRoot.java:81)\nCaller+1\t at org.springframework.boot.web.servlet.server.DocumentRoot.getWarFileDocumentRoot(DocumentRoot.java:75)\nCaller+2\t at org.springframework.boot.web.servlet.server.DocumentRoot.getValidDirectory(DocumentRoot.java:62)\nCaller+3\t at org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(AbstractServletWebServerFactory.java:300)\nCaller+4\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(TomcatServletWebServerFactory.java:236)\n","class":"org.springframework.boot.web.servlet.server.DocumentRoot","method":"getArchiveFileDocumentRoot","file":"DocumentRoot.java","line":"81","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.71364+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,713","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","message":"Code archive: /Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/4.0.0-SNAPSHOT/ec66f47d35fe6a7ffec7aa21b235fbe2ffbc2688/spring-boot-4.0.0-SNAPSHOT.jar","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.server.DocumentRoot.getExplodedWarFileDocumentRoot(DocumentRoot.java:125)\nCaller+1\t at org.springframework.boot.web.servlet.server.DocumentRoot.getExplodedWarFileDocumentRoot(DocumentRoot.java:91)\nCaller+2\t at org.springframework.boot.web.servlet.server.DocumentRoot.getValidDirectory(DocumentRoot.java:63)\nCaller+3\t at org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(AbstractServletWebServerFactory.java:300)\nCaller+4\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(TomcatServletWebServerFactory.java:236)\n","class":"org.springframework.boot.web.servlet.server.DocumentRoot","method":"getExplodedWarFileDocumentRoot","file":"DocumentRoot.java","line":"125","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.714496+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,714","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","message":"None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.server.DocumentRoot.logNoDocumentRoots(DocumentRoot.java:149)\nCaller+1\t at org.springframework.boot.web.servlet.server.DocumentRoot.getValidDirectory(DocumentRoot.java:66)\nCaller+2\t at org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(AbstractServletWebServerFactory.java:300)\nCaller+3\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(TomcatServletWebServerFactory.java:236)\nCaller+4\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)\n","class":"org.springframework.boot.web.servlet.server.DocumentRoot","method":"logNoDocumentRoots","file":"DocumentRoot.java","line":"149","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.734181+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","timestamp":"2025-06-12 19:27:23,734","level":"INFO","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:111)\nCaller+1\t at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)\nCaller+3\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)\n","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","method":"initialize","file":"TomcatWebServer.java","line":"111","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.744672+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","timestamp":"2025-06-12 19:27:23,744","level":"INFO","thread":"main","logger":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:611)\nCaller+3\t at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:83)\nCaller+4\t at org.apache.catalina.connector.Connector.initInternal(Connector.java:1052)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.746178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","timestamp":"2025-06-12 19:27:23,746","level":"INFO","thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.StandardService.startInternal(StandardService.java:406)\nCaller+3\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\nCaller+4\t at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:866)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.746497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","timestamp":"2025-06-12 19:27:23,746","level":"INFO","thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/11.0.7]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:199)\nCaller+3\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\nCaller+4\t at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.786154+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","timestamp":"2025-06-12 19:27:23,786","level":"INFO","thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.ApplicationContext.log(ApplicationContext.java:542)\nCaller+3\t at org.apache.catalina.core.ApplicationContextFacade.log(ApplicationContextFacade.java:133)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:291)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.786613+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 19:27:23,786","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:295)\nCaller+1\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:242)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)\nCaller+3\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4428)\nCaller+4\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\n","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","method":"prepareWebApplicationContext","file":"ServletWebServerApplicationContext.java","line":"295","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.786861+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 19:27:23,786","level":"INFO","thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1470 ms","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:301)\nCaller+1\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:242)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)\nCaller+3\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4428)\nCaller+4\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\n","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","method":"prepareWebApplicationContext","file":"ServletWebServerApplicationContext.java","line":"301","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.789285+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,789","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webMvcObservationFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:221)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.789743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,789","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.791129+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,791","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.79168+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,791","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.795139+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,795","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertiesObservationFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.795921+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,795","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.797804+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,797","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propertiesObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.800601+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,800","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsAndTracingObservationHandlerGrouping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.801141+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,801","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.80292+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,802","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'defaultTracingObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.803303+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,803","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.804559+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,804","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.80521+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,805","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.806022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,806","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.tracing-org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.807997+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,807","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration' via constructor to bean named 'management.tracing-org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.809188+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,809","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveTracer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.810002+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,810","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.811239+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,811","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'compositeSpanHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.816233+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,816","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveCurrentTraceContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.817192+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,817","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'correlationScopeDecorator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.818069+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,818","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$PropagationWithBaggage'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.819029+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,819","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$PropagationWithBaggage' via constructor to bean named 'management.tracing-org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.820271+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,820","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mdcCorrelationScopeDecoratorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.824527+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,824","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'correlationFieldsCorrelationScopeCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.826042+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,826","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'correlationScopeDecorator' via factory method to bean named 'mdcCorrelationScopeDecoratorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.827782+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,827","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveCurrentTraceContext' via factory method to bean named 'correlationScopeDecorator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.830724+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,830","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagationFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.831607+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,831","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagationFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.832896+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,832","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'remoteFieldsBaggagePropagationCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.835947+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.micrometer.common.util.internal.logging.InternalLoggerFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,835","level":"DEBUG","thread":"main","logger":"io.micrometer.common.util.internal.logging.InternalLoggerFactory","message":"Using SLF4J as the default logging framework","context":"","exception":"","caller":"Caller+0\t at io.micrometer.common.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:59)\nCaller+1\t at io.micrometer.common.util.internal.logging.InternalLoggerFactory.getDefaultFactory(InternalLoggerFactory.java:74)\nCaller+2\t at io.micrometer.common.util.internal.logging.InternalLoggerFactory.getInstance(InternalLoggerFactory.java:103)\nCaller+3\t at io.micrometer.tracing.brave.bridge.W3CPropagation.<clinit>(W3CPropagation.java:51)\nCaller+4\t at org.springframework.boot.actuate.autoconfigure.tracing.CompositePropagationFactory$PropagationFactoryMapper.w3c(CompositePropagationFactory.java:165)\n","class":"io.micrometer.common.util.internal.logging.InternalLoggerFactory","method":"newDefaultFactory","file":"InternalLoggerFactory.java","line":"59","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.840118+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,840","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagationFactory' via factory method to bean named 'propagationFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.841606+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,841","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveSampler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.842866+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,842","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.843157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,843","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'compositeSpanHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.843383+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,843","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'braveCurrentTraceContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.843666+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,843","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'propagationFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.843905+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,843","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'braveSampler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.856409+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,856","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracer' via factory method to bean named 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.858057+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,858","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracerBridge' via factory method to bean named 'braveTracer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.858314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,858","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracerBridge' via factory method to bean named 'braveCurrentTraceContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.860969+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,860","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'defaultTracingObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.862838+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,862","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagatingSenderTracingObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.863755+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,863","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'bravePropagator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.864308+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,864","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'bravePropagator' via factory method to bean named 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.865328+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,865","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingSenderTracingObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.865595+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,865","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingSenderTracingObservationHandler' via factory method to bean named 'bravePropagator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.867728+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,867","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagatingReceiverTracingObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.868599+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,868","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingReceiverTracingObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.868866+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,868","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingReceiverTracingObservationHandler' via factory method to bean named 'bravePropagator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.871426+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,871","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tracingAwareMeterObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.87187+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,871","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.872874+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,872","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.873206+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,873","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.874328+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,874","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleConfig'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.874958+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,874","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.876229+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,876","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.879422+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,879","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'micrometerClock'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.879822+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,879","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.880901+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,880","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.881233+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,881","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.896516+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,896","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertiesMeterFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.897271+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,897","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.899287+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,899","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.901787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,901","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.902245+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,902","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.903849+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,903","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.904355+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,904","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.906049+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,906","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.90639+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,906","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.9076+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,907","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.908022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,908","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.913523+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,913","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tracingAwareMeterObservationHandler' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.913939+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,913","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tracingAwareMeterObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.914288+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,914","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tracingAwareMeterObservationHandler' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.918833+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,918","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.919188+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,919","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.929041+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,929","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletEndpointRegistrar'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:221)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.929543+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,929","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.930625+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,930","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.932112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,932","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.932476+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,932","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.93342+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,933","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ad394e6'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.935629+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,935","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webEndpointPathMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.936255+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,936","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.937473+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,937","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ad394e6'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.937832+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,937","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.940867+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,940","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.941371+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,941","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.942448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,942","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.947809+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,947","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertiesEndpointAccessResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.948206+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,948","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.948975+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,948","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propertiesEndpointAccessResolver' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.949807+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,949","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.950167+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,950","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.950506+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,950","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'dispatcherServletRegistration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.950758+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,950","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'propertiesEndpointAccessResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.962726+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,962","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'requestContextFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.96508+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,965","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'formContentFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.965407+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,965","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.968883+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,968","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'characterEncodingFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.969303+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,969","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.970343+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,970","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.servlet.encoding-org.springframework.boot.autoconfigure.web.servlet.ServletEncodingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.971474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:23,971","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'characterEncodingFilter' via factory method to bean named 'spring.servlet.encoding-org.springframework.boot.autoconfigure.web.servlet.ServletEncodingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.977149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","timestamp":"2025-06-12 19:27:23,977","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:254)\nCaller+1\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:243)\nCaller+2\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:101)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)\n","class":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","method":"logMappings","file":"ServletContextInitializerBeans.java","line":"254","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.977494+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","timestamp":"2025-06-12 19:27:23,977","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","message":"Mapping servlets: dispatcherServlet urls=[/]","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:254)\nCaller+1\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:244)\nCaller+2\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:101)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)\n","class":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","method":"logMappings","file":"ServletContextInitializerBeans.java","line":"254","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.996221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter","thread_name":"main","timestamp":"2025-06-12 19:27:23,996","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter","message":"Filter 'requestContextFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.997503+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","timestamp":"2025-06-12 19:27:23,997","level":"DEBUG","thread":"main","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.997892+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter","thread_name":"main","timestamp":"2025-06-12 19:27:23,997","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter","message":"Filter 'characterEncodingFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:23.998157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter","thread_name":"main","timestamp":"2025-06-12 19:27:23,998","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter","message":"Filter 'formContentFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.003787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,003","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:933)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.004301+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,004","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.006046+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,006","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.006427+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,006","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.007642+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,007","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.008947+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,008","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.011644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,011","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'threadPoolTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.014754+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","timestamp":"2025-06-12 19:27:24,014","level":"DEBUG","thread":"main","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","message":"Initializing ExecutorService 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:300)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.afterPropertiesSet(ExecutorConfigurationSupport.java:292)\nCaller+2\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"initialize","file":"ExecutorConfigurationSupport.java","line":"300","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.019895+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,019","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:309)\nCaller+4\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.020321+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,020","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.021108+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,021","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.021394+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,021","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.022191+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,022","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.029489+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,029","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.029814+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,029","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.030658+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,030","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.031393+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,031","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.031601+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,031","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.031789+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,031","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.036267+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,036","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"Class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.attemptFromContextLoader(HikariConfig.java:1026)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.setDriverClassName(HikariConfig.java:503)\nCaller+2\t at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperty.set(DataSourceBuilder.java:478)\nCaller+3\t at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.set(DataSourceBuilder.java:370)\nCaller+4\t at org.springframework.boot.jdbc.DataSourceBuilder.build(DataSourceBuilder.java:185)\n","class":"com.zaxxer.hikari.HikariConfig","method":"attemptFromContextLoader","file":"HikariConfig.java","line":"1026","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.051253+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,051","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.052733+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,052","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.052936+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,052","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.055889+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,055","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'entityManagerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.056389+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,056","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.057853+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,057","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.059804+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,059","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.06072+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,060","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.061067+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.061292+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@732bb66d'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.061519+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.064535+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,064","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.064906+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,064","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.068597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,068","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'entityManagerFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.069273+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,069","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpaVendorAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.087055+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.jboss.logging","thread_name":"main","timestamp":"2025-06-12 19:27:24,087","level":"DEBUG","thread":"main","logger":"org.jboss.logging","message":"Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:164)\nCaller+1\t at org.jboss.logging.LoggerProviders.trySlf4j(LoggerProviders.java:113)\nCaller+2\t at org.jboss.logging.LoggerProviders.findProvider(LoggerProviders.java:53)\nCaller+3\t at org.jboss.logging.LoggerProviders.find(LoggerProviders.java:32)\nCaller+4\t at org.jboss.logging.LoggerProviders.<clinit>(LoggerProviders.java:29)\n","class":"org.jboss.logging.LoggerProviders","method":"logProvider","file":"LoggerProviders.java","line":"164","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.090301+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,090","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.092292+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,092","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'persistenceManagedTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.093209+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,093","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@732bb66d'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.093433+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,093","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ad394e6'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.097848+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,097","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.098157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 19:27:24,098","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'persistenceManagedTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.11012+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","timestamp":"2025-06-12 19:27:24,110","level":"DEBUG","thread":"main","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Building JPA container EntityManagerFactory for persistence unit 'default'","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:384)\nCaller+1\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\nCaller+2\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\nCaller+3\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n","class":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","method":"createNativeEntityManagerFactory","file":"LocalContainerEntityManagerFactoryBean.java","line":"384","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.115528+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","timestamp":"2025-06-12 19:27:24,115","level":"DEBUG","thread":"main","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"PersistenceUnitInfo [\n\tname: default\n\tpersistence provider classname: null\n\tclassloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299\n\texcludeUnlistedClasses: true\n\tJTA datasource: null\n\tNon JTA datasource: HikariDataSource (null)\n\tTransaction type: RESOURCE_LOCAL\n\tPU root URL: file:/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/resources/main/\n\tShared Cache Mode: UNSPECIFIED\n\tValidation Mode: AUTO\n\tJar files URLs []\n\tManaged classes names [\n\t\tcom.ms.my_spring_boot_project.model.Todo]\n\tMapping files names []\n\tProperties []","context":"","exception":"","caller":"Caller+0\t at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:101)\nCaller+1\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:211)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.jpa.internal.util.LogHelper","method":"logPersistenceUnitInformation","file":"LogHelper.java","line":"101","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.121149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.integrator.internal.IntegratorServiceImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,121","level":"DEBUG","thread":"main","logger":"org.hibernate.integrator.internal.IntegratorServiceImpl","message":"Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].","context":"","exception":"","caller":"Caller+0\t at org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:49)\nCaller+1\t at org.hibernate.integrator.internal.IntegratorServiceImpl.create(IntegratorServiceImpl.java:33)\nCaller+2\t at org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build(BootstrapServiceRegistryBuilder.java:188)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.buildBootstrapServiceRegistry(EntityManagerFactoryBuilderImpl.java:502)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:217)\n","class":"org.hibernate.integrator.internal.IntegratorServiceImpl","method":"addIntegrator","file":"IntegratorServiceImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.122858+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.integrator.internal.IntegratorServiceImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,122","level":"DEBUG","thread":"main","logger":"org.hibernate.integrator.internal.IntegratorServiceImpl","message":"Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].","context":"","exception":"","caller":"Caller+0\t at org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:49)\nCaller+1\t at org.hibernate.integrator.internal.IntegratorServiceImpl.create(IntegratorServiceImpl.java:34)\nCaller+2\t at org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build(BootstrapServiceRegistryBuilder.java:188)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.buildBootstrapServiceRegistry(EntityManagerFactoryBuilderImpl.java:502)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:217)\n","class":"org.hibernate.integrator.internal.IntegratorServiceImpl","method":"addIntegrator","file":"IntegratorServiceImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.185419+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.hibernate.Version","thread_name":"main","timestamp":"2025-06-12 19:27:24,185","level":"INFO","thread":"main","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 7.0.0.CR1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.Version.logVersion(Version.java:45)\nCaller+1\t at org.hibernate.cfg.Environment.<clinit>(Environment.java:139)\nCaller+2\t at org.hibernate.jpa.boot.internal.MergedSettings.<init>(MergedSettings.java:32)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.mergeSettings(EntityManagerFactoryBuilderImpl.java:580)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:224)\n","class":"org.hibernate.Version","method":"logVersion","file":"Version.java","line":"45","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.186379+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cfg.Environment","thread_name":"main","timestamp":"2025-06-12 19:27:24,186","level":"DEBUG","thread":"main","logger":"org.hibernate.cfg.Environment","message":"HHH000206: 'hibernate.properties' not found","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cfg.Environment.<clinit>(Environment.java:162)\nCaller+1\t at org.hibernate.jpa.boot.internal.MergedSettings.<init>(MergedSettings.java:32)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.mergeSettings(EntityManagerFactoryBuilderImpl.java:580)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:224)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.cfg.Environment","method":"<clinit>","file":"Environment.java","line":"162","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.203806+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.hibernate5.SpringBeanContainer","thread_name":"main","timestamp":"2025-06-12 19:27:24,203","level":"DEBUG","thread":"main","logger":"org.springframework.orm.hibernate5.SpringBeanContainer","message":"Falling back to Hibernate's default producer after bean creation failure for interface org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider': Failed to instantiate [org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]: Specified class is an interface","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.hibernate5.SpringBeanContainer.createBean(SpringBeanContainer.java:157)\nCaller+1\t at org.springframework.orm.hibernate5.SpringBeanContainer.getBean(SpringBeanContainer.java:106)\nCaller+2\t at org.hibernate.resource.beans.internal.Helper.containedBean(Helper.java:66)\nCaller+3\t at org.hibernate.resource.beans.internal.Helper.getBean(Helper.java:56)\nCaller+4\t at org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator.initiateService(MultiTenantConnectionProviderInitiator.java:43)\n","class":"org.springframework.orm.hibernate5.SpringBeanContainer","method":"createBean","file":"SpringBeanContainer.java","line":"157","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.20485+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","timestamp":"2025-06-12 19:27:24,204","level":"DEBUG","thread":"main","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:117)\nCaller+1\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:45)\nCaller+2\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:30)\nCaller+3\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n","class":"org.hibernate.cache.internal.RegionFactoryInitiator","method":"resolveRegionFactory","file":"RegionFactoryInitiator.java","line":"117","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.205405+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","timestamp":"2025-06-12 19:27:24,205","level":"DEBUG","thread":"main","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:47)\nCaller+1\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:30)\nCaller+2\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","class":"org.hibernate.cache.internal.RegionFactoryInitiator","method":"initiateService","file":"RegionFactoryInitiator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.255644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,255","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a6fc1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.256017+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,256","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration boolean -> org.hibernate.type.BasicTypeReference@a6fc1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.256242+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,256","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@a6fc1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.256469+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,256","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5018b56b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:787)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.256654+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,256","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5018b56b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:787)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.256828+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,256","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration true_false -> org.hibernate.type.BasicTypeReference@360a3106","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:794)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.256978+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,256","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@360a3106","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:794)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.257143+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,257","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@737ff5c4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:801)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.257305+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,257","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@737ff5c4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:801)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.257458+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,257","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e9a836","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.257614+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,257","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte -> org.hibernate.type.BasicTypeReference@7e9a836","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.257749+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,257","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7e9a836","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.257884+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,257","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration binary -> org.hibernate.type.BasicTypeReference@124ff64d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.25802+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@124ff64d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.25816+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration [B -> org.hibernate.type.BasicTypeReference@124ff64d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.258307+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@75aa7703","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:826)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.258442+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@75aa7703","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:826)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.258579+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration image -> org.hibernate.type.BasicTypeReference@79777da7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:833)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.258731+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration blob -> org.hibernate.type.BasicTypeReference@3395c2a7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:840)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.25891+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,258","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3395c2a7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:840)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259046+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5e05a706","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:848)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259197+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7831d1aa","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:855)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259334+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration short -> org.hibernate.type.BasicTypeReference@3a69014e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259486+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration short -> org.hibernate.type.BasicTypeReference@3a69014e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259631+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3a69014e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259759+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration integer -> org.hibernate.type.BasicTypeReference@27746c5e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.259885+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,259","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration int -> org.hibernate.type.BasicTypeReference@27746c5e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.260058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,260","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@27746c5e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.260222+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,260","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration long -> org.hibernate.type.BasicTypeReference@543ac221","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.260358+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,260","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration long -> org.hibernate.type.BasicTypeReference@543ac221","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.260484+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,260","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@543ac221","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.260642+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,260","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float -> org.hibernate.type.BasicTypeReference@2270f58d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.260778+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,260","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float -> org.hibernate.type.BasicTypeReference@2270f58d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.261698+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,261","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2270f58d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.261863+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,261","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double -> org.hibernate.type.BasicTypeReference@50e1f3fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.262748+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,262","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double -> org.hibernate.type.BasicTypeReference@50e1f3fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.262896+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,262","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@50e1f3fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.263066+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,263","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@54737322","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:901)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.263276+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,263","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@54737322","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:901)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.263748+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,263","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@56da8847","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:908)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.263882+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,263","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@56da8847","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:908)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264038+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration character -> org.hibernate.type.BasicTypeReference@7323c38c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264174+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration char -> org.hibernate.type.BasicTypeReference@7323c38c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264302+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7323c38c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264434+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2c02a007","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:926)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264614+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration string -> org.hibernate.type.BasicTypeReference@63a72cc6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:933)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264766+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@63a72cc6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:933)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.264897+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,264","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration nstring -> org.hibernate.type.BasicTypeReference@61bd0845","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:940)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.265065+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,265","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration characters -> org.hibernate.type.BasicTypeReference@cef885d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.265265+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,265","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration char[] -> org.hibernate.type.BasicTypeReference@cef885d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.265515+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,265","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration [C -> org.hibernate.type.BasicTypeReference@cef885d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.265718+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,265","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@35d4035f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:954)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.265865+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,265","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration text -> org.hibernate.type.BasicTypeReference@6f4fc83f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:961)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.266676+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,266","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ntext -> org.hibernate.type.BasicTypeReference@66b90ab3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:968)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.26764+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,267","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration clob -> org.hibernate.type.BasicTypeReference@16e4db59","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:975)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.268184+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,268","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@16e4db59","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:975)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.268456+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,268","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration nclob -> org.hibernate.type.BasicTypeReference@33fec21","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:982)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.268887+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,268","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@33fec21","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:982)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.269198+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,269","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@12a0d249","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:989)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.269481+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,269","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c62be3c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:996)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.269668+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,269","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@c6c84fa","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1003)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.269834+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,269","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@70ce2fb2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1010)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.269989+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,269","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@64688978","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1017)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.270127+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,270","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4d525897","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1024)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.270283+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,270","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25f14e93","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1035)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.270411+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,270","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25f14e93","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1035)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.270562+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,270","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24435620","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1042)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.27073+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,270","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24435620","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1042)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.270881+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,270","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4c02899","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1049)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.27131+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,271","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4c02899","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1049)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.271453+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,271","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5b895e76","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1056)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.271574+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,271","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5b895e76","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1056)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.271698+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,271","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@74231642","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1063)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.271813+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,271","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@74231642","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1063)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.272352+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,272","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a6facb0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1070)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.272524+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,272","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4feec184","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1077)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.272698+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,272","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5e055ce1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1084)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.27283+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,272","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5e055ce1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1084)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.272958+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,272","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3278d065","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1091)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273082+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@545f0b6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1098)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273213+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c9ef37b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1105)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273342+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4888425d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1112)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4888425d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1112)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273587+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c8758d1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1119)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273709+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@166ddfb7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1126)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273831+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration date -> org.hibernate.type.BasicTypeReference@5da3f32a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1133)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.273951+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,273","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5da3f32a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1133)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.274071+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration time -> org.hibernate.type.BasicTypeReference@57b3d869","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1140)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.27419+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@57b3d869","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1140)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.274326+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51f4439e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.274449+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51f4439e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.274569+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51f4439e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.2747+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar -> org.hibernate.type.BasicTypeReference@291cbe70","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.274814+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@291cbe70","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.27493+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,274","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@291cbe70","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6be422da","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1161)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275216+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@225ddf5f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1168)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275351+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration instant -> org.hibernate.type.BasicTypeReference@51468039","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1175)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275472+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@51468039","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1175)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1d654b5f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275724+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1d654b5f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.275863+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,275","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1d654b5f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.277023+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,277","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@575d48db","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1193)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.277717+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,277","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1b36d248","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1200)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.277898+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,277","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration class -> org.hibernate.type.BasicTypeReference@7e94de5f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1211)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.278448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,278","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7e94de5f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1211)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.278624+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,278","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration currency -> org.hibernate.type.BasicTypeReference@499c4d61","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.27883+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,278","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Currency -> org.hibernate.type.BasicTypeReference@499c4d61","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.279047+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,279","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@499c4d61","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.279212+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,279","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration locale -> org.hibernate.type.BasicTypeReference@74badf19","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1225)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.279373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,279","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@74badf19","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1225)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.279598+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,279","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration serializable -> org.hibernate.type.BasicTypeReference@59b3f754","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1233)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.279863+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,279","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@59b3f754","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1233)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.280054+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,280","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration timezone -> org.hibernate.type.BasicTypeReference@18dbc1b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1240)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.28022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,280","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@18dbc1b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1240)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.280376+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,280","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2a510e0e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1247)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.280492+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,280","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2a510e0e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1247)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.280649+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,280","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration url -> org.hibernate.type.BasicTypeReference@8315e4a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1254)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.280777+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,280","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@8315e4a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1254)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.282168+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,282","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration vector -> org.hibernate.type.BasicTypeReference@4efe014f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1261)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.282366+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,282","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@7c5ac0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1268)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.282814+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,282","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@23d978b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1275)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.283057+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,283","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@3cf70afa","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1282)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.283406+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,283","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration row_version -> org.hibernate.type.BasicTypeReference@66dd04e2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1292)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.286991+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,286","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration object -> org.hibernate.type.JavaObjectType@34f48d1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1299)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.287186+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,287","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@34f48d1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1299)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.288183+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,288","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration null -> org.hibernate.type.NullType@5ffd35dd","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1306)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.28843+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,288","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@311a09b2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1314)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.288559+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,288","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4cacccbf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1317)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.288711+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,288","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@301d84f6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1320)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.288833+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,288","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6f80cf5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1323)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.288955+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,288","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@674ed201","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1326)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.289074+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,289","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4dad2363","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1329)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.289204+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,289","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@114b2414","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1332)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.289319+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 19:27:24,289","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57920d6c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1335)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.387497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,387","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37b80ec7] into BootstrapContext; was [null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:311)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1350)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectJpaTempClassLoader","file":"BootstrapContextImpl.java","line":"311","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.387898+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,387","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37b80ec7) [was null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:43)\nCaller+1\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:312)\nCaller+2\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1350)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"injectTempClassLoader","file":"ClassLoaderAccessImpl.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.388203+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,388","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@441016d6] into BootstrapContext; was [null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:321)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyScanEnvironment(MetadataBuilderImpl.java:225)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1353)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectScanEnvironment","file":"BootstrapContextImpl.java","line":"321","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.388416+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,388","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@522f0bb8] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@468f2a6f]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:316)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyScanOptions(MetadataBuilderImpl.java:219)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1354)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectScanOptions","file":"BootstrapContextImpl.java","line":"316","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.403683+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","thread_name":"main","timestamp":"2025-06-12 19:27:24,403","level":"DEBUG","thread":"main","logger":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","message":"Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299","context":"","exception":"","caller":"Caller+0\t at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:136)\nCaller+1\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider$1.pushClassTransformer(SpringHibernateJpaPersistenceProvider.java:63)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.setupEnhancement(EntityManagerFactoryBuilderImpl.java:333)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:242)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","method":"pushClassTransformer","file":"PersistenceUnitInfoDescriptor.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.523016+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","timestamp":"2025-06-12 19:27:24,523","level":"INFO","thread":"main","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo.addTransformer(SpringPersistenceUnitInfo.java:84)\nCaller+1\t at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:141)\nCaller+2\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider$1.pushClassTransformer(SpringHibernateJpaPersistenceProvider.java:63)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.setupEnhancement(EntityManagerFactoryBuilderImpl.java:333)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:242)\n","class":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","method":"addTransformer","file":"SpringPersistenceUnitInfo.java","line":"84","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.523424+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,523","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37b80ec7]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:311)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:244)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\nCaller+4\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectJpaTempClassLoader","file":"BootstrapContextImpl.java","line":"311","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.523604+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 19:27:24,523","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@37b80ec7]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:43)\nCaller+1\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:312)\nCaller+2\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:244)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"injectTempClassLoader","file":"ClassLoaderAccessImpl.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.545156+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,545","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"HikariPool-1 - configuration:","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1154)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1154","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.546583+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,546","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"allowPoolSuspension.............false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.546825+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,546","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"autoCommit......................true","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.546995+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,546","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"catalog.........................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.547151+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,547","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionInitSql...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.547302+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,547","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionTestQuery.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.548051+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,548","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionTimeout...............30000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.548224+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,548","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"credentials.....................com.zaxxer.hikari.util.Credentials@5f8d4b51","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.548364+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,548","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSource......................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.548504+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,548","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceClassName.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.548635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,548","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceJNDI..................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.548897+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,548","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceProperties............{password=<masked>}","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.549057+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"driverClassName.................\"com.mysql.cj.jdbc.Driver\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.549192+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"exceptionOverride...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.54931+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"exceptionOverrideClassName......none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.549428+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"healthCheckProperties...........{}","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.549548+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"healthCheckRegistry.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.54967+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"idleTimeout.....................600000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.549794+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,549","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"initializationFailTimeout.......1","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.5504+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,550","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"isolateInternalQueries..........false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.550661+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,550","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"jdbcUrl.........................jdbc:mysql://mysql:3306/MySpringBootProject","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.551072+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,551","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"keepaliveTime...................120000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.551448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,551","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"leakDetectionThreshold..........0","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.551604+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,551","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"maxLifetime.....................1800000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.551755+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,551","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"maximumPoolSize.................10","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.551887+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,551","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"metricRegistry..................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.552303+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,552","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"metricsTrackerFactory...........none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.55264+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,552","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"minimumIdle.....................10","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.552803+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,552","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"password........................<masked>","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553012+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"poolName........................\"HikariPool-1\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553189+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"readOnly........................false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553337+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"registerMbeans..................false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"scheduledExecutor...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553637+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"schema..........................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553833+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"threadFactory...................internal","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.553989+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,553","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"transactionIsolation............default","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.554137+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,554","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"username........................\"springbootuser\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.554277+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 19:27:24,554","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"validationTimeout...............5000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.554389+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","timestamp":"2025-06-12 19:27:24,554","level":"INFO","thread":"main","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting...","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:109)\nCaller+1\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"com.zaxxer.hikari.HikariDataSource","method":"getConnection","file":"HikariDataSource.java","line":"109","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.569109+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"main","timestamp":"2025-06-12 19:27:24,569","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (f9714566-80a7-456c-9fb9-626caf300588)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.621951+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"main","timestamp":"2025-06-12 19:27:24,621","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Failed to create/setup connection (f9714566-80a7-456c-9fb9-626caf300588): Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:382)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"382","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:24.622254+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","timestamp":"2025-06-12 19:27:24,622","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Cannot acquire connection from data source","context":"","exception":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 50 common frames omitted\nCaused by: java.net.UnknownHostException: mysql: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1128)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1697)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1056)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1687)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1568)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 53 common frames omitted\n","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:510)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\nCaller+3\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\nCaller+4\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"createPoolEntry","file":"HikariPool.java","line":"510","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 50 common frames omitted\nCaused by: java.net.UnknownHostException: mysql: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1128)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1697)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1056)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1687)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1568)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 53 common frames omitted\n"}
{"timestamp":"2025-06-12T19:27:25.629331+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"main","timestamp":"2025-06-12 19:27:25,629","level":"DEBUG","thread":"main","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"unable to obtain isolated JDBC connection [n/a]","context":"","exception":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 50 common frames omitted\nCaused by: java.net.UnknownHostException: mysql: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1128)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1697)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1056)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1687)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1568)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 53 common frames omitted\n","caller":"Caller+0\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:134)\nCaller+1\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:107)\nCaller+2\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","method":"logExceptions","file":"SqlExceptionHelper.java","line":"134","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 50 common frames omitted\nCaused by: java.net.UnknownHostException: mysql: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1128)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1697)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1056)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1687)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1568)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 53 common frames omitted\n"}
{"timestamp":"2025-06-12T19:27:25.634222+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"main","timestamp":"2025-06-12 19:27:25,634","level":"WARN","thread":"main","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Error: 0, SQLState: 08S01","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:145)\nCaller+1\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:107)\nCaller+2\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","method":"logExceptions","file":"SqlExceptionHelper.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.634927+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"main","timestamp":"2025-06-12 19:27:25,634","level":"ERROR","thread":"main","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:150)\nCaller+1\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:107)\nCaller+2\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","method":"logExceptions","file":"SqlExceptionHelper.java","line":"150","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.636692+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"main","timestamp":"2025-06-12 19:27:25,636","level":"WARN","thread":"main","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"HHH000342: Could not obtain connection to query JDBC database metadata","context":"","exception":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:80)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:34)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\t... 37 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 50 common frames omitted\nCaused by: java.net.UnknownHostException: mysql: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1128)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1697)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1056)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1687)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1568)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 53 common frames omitted\n","caller":"Caller+0\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:424)\nCaller+1\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\nCaller+3\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\nCaller+4\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n","class":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","method":"getJdbcEnvironmentUsingJdbcMetadata","file":"JdbcEnvironmentInitiator.java","line":"424","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:80)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:34)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:165)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:55)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\t... 37 common frames omitted\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\n\nThe last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:52)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:95)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:140)\n\tat com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:156)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:79)\n\tat com.mysql.cj.NativeSession.connect(NativeSession.java:142)\n\tat com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:961)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)\n\t... 50 common frames omitted\nCaused by: java.net.UnknownHostException: mysql: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)\n\tat java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1128)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1697)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1056)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1687)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1568)\n\tat com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:121)\n\tat com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:53)\n\t... 53 common frames omitted\n"}
{"timestamp":"2025-06-12T19:27:25.640959+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.service.spi.ServiceBinding","thread_name":"main","timestamp":"2025-06-12 19:27:25,640","level":"DEBUG","thread":"main","logger":"org.hibernate.service.spi.ServiceBinding","message":"Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)\nCaller+1\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.cleanup(EntityManagerFactoryBuilderImpl.java:1448)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1487)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.service.spi.ServiceBinding","method":"setService","file":"ServiceBinding.java","line":"68","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.641337+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","timestamp":"2025-06-12 19:27:25,641","level":"ERROR","thread":"main","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:417)\nCaller+1\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\nCaller+2\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n","class":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean","method":"buildNativeEntityManagerFactory","file":"AbstractEntityManagerFactoryBean.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.642437+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 19:27:25,642","level":"WARN","thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)\nCaller+1\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\nCaller+2\t at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\nCaller+3\t at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n","class":"org.springframework.context.support.AbstractApplicationContext","method":"refresh","file":"AbstractApplicationContext.java","line":"625","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.643015+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","timestamp":"2025-06-12 19:27:25,643","level":"DEBUG","thread":"main","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","message":"Shutting down ExecutorService 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:366)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.destroy(ExecutorConfigurationSupport.java:329)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"shutdown","file":"ExecutorConfigurationSupport.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.644597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"main","timestamp":"2025-06-12 19:27:25,644","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Custom destroy method 'close' on bean with name 'simpleMeterRegistry' completed","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DisposableBeanAdapter.logDestroyMethodCompletion(DisposableBeanAdapter.java:356)\nCaller+1\t at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:315)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.beans.factory.support.DisposableBeanAdapter","method":"logDestroyMethodCompletion","file":"DisposableBeanAdapter.java","line":"356","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.64781+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","timestamp":"2025-06-12 19:27:25,647","level":"INFO","thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.StandardService.stopInternal(StandardService.java:462)\nCaller+3\t at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:235)\nCaller+4\t at org.apache.catalina.core.StandardServer.stopInternal(StandardServer.java:911)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.678226+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","timestamp":"2025-06-12 19:27:25,678","level":"DEBUG","thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\n\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:\n-----------------\n\n   AopAutoConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.auto=true) matched (OnPropertyCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:\n      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'brave.Tracer', 'io.micrometer.tracing.brave.bridge.BraveTracer' (OnClassCondition)\n\n   BraveAutoConfiguration#braveCurrentTraceContext matched:\n      - @ConditionalOnMissingBean (types: brave.propagation.CurrentTraceContext; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#bravePropagator matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.brave.bridge.BravePropagator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveSampler matched:\n      - @ConditionalOnMissingBean (types: brave.sampler.Sampler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveSpanCustomizer matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.SpanCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracer matched:\n      - @ConditionalOnMissingBean (types: brave.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracerBridge matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracing matched:\n      - @ConditionalOnMissingBean (types: brave.Tracing; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#compositeSpanHandler matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.brave.bridge.CompositeSpanHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#currentSpanCustomizer matched:\n      - @ConditionalOnMissingBean (types: brave.SpanCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage matched:\n      - @ConditionalOnBooleanProperty (management.tracing.baggage.enabled=true) matched (OnPropertyCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#correlationFieldsCorrelationScopeCustomizer matched:\n      - @ConditionalOnBooleanProperty (management.tracing.baggage.correlation.enabled=true) matched (OnPropertyCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#correlationScopeDecorator matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.CorrelationScopeDecorator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#mdcCorrelationScopeDecoratorBuilder matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.CorrelationScopeDecorator$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#propagationFactory matched:\n      - @ConditionalOnMissingBean (types: brave.propagation.Propagation$Factory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnEnabledTracing tracing is enabled by default (OnEnabledTracingCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#propagationFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.BaggagePropagation$FactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   CacheMeterBinderProvidersConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.client.reactive.ClientHttpConnector', 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnector matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnectorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnectorSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration$ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration$ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n\n   CodecsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   CompositeMeterRegistryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)\n\n   DataSourceAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (DataSourceAutoConfiguration.PooledDataSourceCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceConfiguration.Hikari matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)\n\n   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:\n      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceInitializationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourcePoolMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)\n\n   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)\n\n   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:\n      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n\n   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#endpointOperationParameterMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#propertiesEndpointAccessResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.EndpointAccessResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ErrorMvcAutoConfiguration#basicErrorController matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:\n      - @ConditionalOnBooleanProperty (server.error.whitelabel.enabled=true) matched (OnPropertyCondition)\n      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:\n      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GenericCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)\n\n   HealthContributorAutoConfiguration#pingHealthContributor matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   HealthEndpointAutoConfiguration matched:\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n\n   HealthEndpointConfiguration#healthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpoint matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:\n      - @ConditionalOnBooleanProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroups matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthStatusAggregator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   HibernateJpaAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)\n\n   HibernateJpaConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   HttpClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientObservationsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   HttpEncodingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.servlet.encoding.enabled=true) matched (OnPropertyCondition)\n\n   HttpEncodingAutoConfiguration#characterEncodingFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)\n\n   HttpMessageConvertersAutoConfiguration#messageConverters matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:\n      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (management.endpoints.jackson.isolated-object-mapper=true) matched (OnPropertyCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n      - @ConditionalOnPreferredJsonMapper JACKSON no property was configured and Jackson is the default (OnPreferredJsonMapperCondition)\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcClientAutoConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   JdbcTemplateConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#jpaVendorAdapter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#transactionManager matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.JpaWebConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JtaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.jta.enabled=true) matched (OnPropertyCondition)\n\n   JvmMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#classLoaderMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmGcMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAnnotationDrivenConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory matched:\n      - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration matched:\n      - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)\n\n   KafkaAutoConfiguration#kafkaAdmin matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaConsumerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaProducerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaProducerListener matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)\n\n   LettuceConnectionConfiguration matched:\n      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.redis.client-type=lettuce) matched (OnPropertyCondition)\n\n   LettuceConnectionConfiguration#lettuceClientResources matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   LettuceMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.lettuce.core.RedisClient', 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LettuceMetricsAutoConfiguration#micrometerOptions matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.metrics.MicrometerOptions; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:\n      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)\n      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration#logbackMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:\n      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)\n\n   MetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MetricsAutoConfiguration#micrometerClock matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found bean 'braveTracerBridge' (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#defaultTracingObservationHandler matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.DefaultTracingObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#propagatingReceiverTracingObservationHandler matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.propagation.Propagator; SearchStrategy: all) found bean 'bravePropagator'; @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#propagatingSenderTracingObservationHandler matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.propagation.Propagator; SearchStrategy: all) found bean 'bravePropagator'; @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.servlet.multipart.enabled=true) matched (OnPropertyCondition)\n\n   MultipartAutoConfiguration#multipartConfigElement matched:\n      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration#multipartResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NamedParameterJdbcTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NettyAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)\n\n   NoOpCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)\n\n   ObservationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)\n\n   ObservationAutoConfiguration#observationRegistry matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found bean 'braveTracerBridge' (OnBeanCondition)\n\n   ObservationAutoConfiguration.MetricsWithTracingConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:\n      - @ConditionalOnBooleanProperty (spring.dao.exceptiontranslation.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ReactorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)\n\n   ReactorNettyConfigurations.ReactorResourceFactoryConfiguration#reactorResourceFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.ReactorResourceFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)\n\n   RedisAutoConfiguration#redisConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#redisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#stringRedisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisCacheConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)\n\n   RedisHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisReactiveHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)\n\n   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:\n      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.VirtualThreadsExecutorEnabled found non-matching nested conditions @ConditionalOnThreading did not find VIRTUAL; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.NotReactiveWebApplication NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition)\n\n   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)\n\n   RestTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   RestTemplateAutoConfiguration#restTemplateBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestTemplateObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)\n\n   ScheduledTasksObservabilityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   ServletEndpointManagementContextConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n\n   ServletManagementContextAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:\n      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   SimpleCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)\n\n   SimpleMetricsExportAutoConfiguration matched:\n      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SimpleMetricsExportAutoConfiguration#simpleConfig matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#pageableCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#sortCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#springDataWebSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SqlInitializationAutoConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.sql.init.enabled=true) matched (OnPropertyCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'spring.sql.init.mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)\n\n   SslAutoConfiguration#sslBundleRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   SslHealthContributorAutoConfiguration#sslHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: sslHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslHealthContributorAutoConfiguration#sslInfo matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslObservabilityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found beans 'sslBundleRegistry', 'simpleMeterRegistry' (OnBeanCondition)\n\n   StartupTimeMetricsListenerAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#processorMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#uptimeMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)\n\n   TaskExecutorConfigurations.AsyncConfigurerConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.AsyncConfigurerConfiguration#applicationTaskExecutorAsyncConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ModelCondition @ConditionalOnProperty (spring.task.execution.mode=force) did not find property 'spring.task.execution.mode'; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ExecutorBeanCondition @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (TaskExecutorConfigurations.OnExecutorCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)\n      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry', 'taskScheduler' (OnBeanCondition)\n\n   TaskSchedulingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n\n   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:\n      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration matched:\n      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskScheduler matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TomcatMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionManagerCustomizationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebClientAutoConfiguration#webClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration#webClientHttpConnectorCustomizer matched:\n      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'clientHttpConnector' (OnBeanCondition)\n\n   WebClientAutoConfiguration#webClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration.WebClientCodecsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.web.codec.CodecCustomizer; SearchStrategy: all) found beans 'jacksonCodecCustomizer', 'defaultCodecCustomizer' (OnBeanCondition)\n\n   WebClientAutoConfiguration.WebClientCodecsConfiguration#exchangeStrategiesCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebEndpointAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#endpointMediaTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#pathMappedEndpoints matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration#formContentFilter matched:\n      - @ConditionalOnBooleanProperty (spring.mvc.formcontent.filter.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:\n      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:\n      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:\n      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   WebSocketServletAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:\n      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n\nNegative matches:\n-----------------\n\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)\n\n   AopAutoConfiguration.ClassProxyingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AppOpticsMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)\n\n   ArtemisAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AtlasMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)\n\n   AuditAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)\n      Matched:\n         - @ConditionalOnBooleanProperty (management.auditevents.enabled=true) matched (OnPropertyCondition)\n\n   AuditEventsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.health.livenessstate.enabled=true) did not find property 'management.health.livenessstate.enabled' (OnPropertyCondition)\n\n   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.health.readinessstate.enabled=true) did not find property 'management.health.readinessstate.enabled' (OnPropertyCondition)\n\n   AvailabilityProbesAutoConfiguration:\n      Did not match:\n         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)\n\n   BatchAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)\n\n   BatchObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)\n\n   BeansEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   BravePropagationConfigurations.NoPropagation#noopPropagationFactory:\n      Did not match:\n         - @ConditionalOnMissingBean (types: brave.propagation.Propagation$Factory; SearchStrategy: all) found beans of type 'brave.propagation.Propagation$Factory' propagationFactory (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithoutBaggage:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.tracing.baggage.enabled=false) did not find property 'management.tracing.baggage.enabled' (OnPropertyCondition)\n\n   Cache2kCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)\n\n   CacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:\n      Did not match:\n         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)\n\n   CacheMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)\n\n   CachesEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CaffeineCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)\n\n   CassandraAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)\n\n   CassandraRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CloudFoundryActuatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n         - found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnBooleanProperty (management.cloudfoundry.enabled=true) matched (OnPropertyCondition)\n\n   CompositeMeterRegistryConfiguration:\n      Did not match:\n         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)\n\n   ConditionsReportEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ConfigurationPropertiesReportEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ConnectionFactoryHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   ConnectionPoolMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)\n\n   CouchbaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   CouchbaseHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:\n      Did not match:\n         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)\n\n   DataSourceCheckpointRestoreConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)\n\n   DataSourceConfiguration.Dbcp2:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourceConfiguration.Generic:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)\n\n   DataSourceConfiguration.OracleUcp:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourceConfiguration.Tomcat:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceJmxConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)\n\n   DatadogMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)\n\n   DynatraceMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)\n\n   ElasticMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)\n\n   ElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)\n\n   ElasticsearchReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)\n\n   ElasticsearchRestClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)\n\n   ElasticsearchRestHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)\n\n   EmbeddedLdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   EnvironmentEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ErrorWebFluxAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   FlywayAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FlywayEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FreeMarkerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)\n\n   GangliaMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)\n\n   GraphQlAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlRSocketAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlWebFluxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebFluxSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphiteMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)\n\n   GroovyTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)\n\n   GsonAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   GsonHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   H2ConsoleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)\n\n   HazelcastAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastJpaDependencyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HealthEndpointReactiveWebExtensionConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n\n   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   HeapDumpWebEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint the configured access for endpoint 'heapdump' is NONE (OnAvailableEndpointCondition)\n\n   HibernateMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)\n\n   HttpExchangesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)\n      Matched:\n         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnBooleanProperty (management.httpexchanges.recording.enabled=true) matched (OnPropertyCondition)\n\n   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n\n   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:\n      Did not match:\n         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n\n   HttpExchangesEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   HttpHandlerAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n\n   HttpServiceClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.service.registry.HttpServiceProxyRegistry; SearchStrategy: all) did not find any beans of type org.springframework.web.service.registry.HttpServiceProxyRegistry (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.client.support.RestClientAdapter' (OnClassCondition)\n         - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   HumioMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)\n\n   HypermediaAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)\n\n   InfinispanCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)\n\n   InfluxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)\n\n   InfoContributorAutoConfiguration#buildInfoContributor:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      Matched:\n         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#envInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#gitInfoContributor:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      Matched:\n         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#javaInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#osInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#processInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.process.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#sslInfo:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.ssl.enabled is not true (OnEnabledInfoContributorCondition)\n      Matched:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   InfoContributorAutoConfiguration#sslInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.ssl.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   IntegrationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)\n\n   IntegrationGraphEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)\n\n   JCacheCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)\n\n   JdbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)\n\n   JedisConnectionConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)\n\n   JerseyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)\n\n   JerseySameManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   JerseyServerMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener' (OnClassCondition)\n\n   JerseyWebEndpointManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   JettyMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)\n\n   JmsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)\n\n   JmsHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   JmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)\n\n   JmxEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)\n\n   JmxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)\n\n   JndiConnectionFactoryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)\n\n   JndiDataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'spring.datasource.jndi-name' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   JndiJtaConfiguration:\n      Did not match:\n         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)\n\n   JooqAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)\n\n   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:\n      Did not match:\n         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'spring.data.jpa.repositories.bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'spring.data.jpa.repositories.bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)\n\n   JsonbAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JsonbHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JvmMetricsAutoConfiguration#virtualThreadMetrics:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.java21.instrument.binder.jdk.VirtualThreadMetrics' (OnClassCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurerVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) found beans of type 'org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer' kafkaListenerContainerFactoryConfigurer (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaJaasInitializer:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.kafka.jaas.enabled=true) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)\n\n   KafkaAutoConfiguration#kafkaRetryTopicConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.kafka.retry.topic.enabled=true) did not find property 'spring.kafka.retry.topic.enabled' (OnPropertyCondition)\n\n   KafkaAutoConfiguration#kafkaTransactionManager:\n      Did not match:\n         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)\n\n   KafkaStreamsAnnotationDrivenConfiguration:\n      Did not match:\n         - @ConditionalOnBean (names: defaultKafkaStreamsBuilder; SearchStrategy: all) did not find any beans named defaultKafkaStreamsBuilder (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)\n\n   KairosMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)\n\n   LdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)\n\n   LdapHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)\n\n   LdapRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactoryVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' redisConnectionFactory (OnBeanCondition)\n\n   LiquibaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)\n\n   LiquibaseEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)\n\n   Log4J2MetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)\n\n   LogFileWebEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   LoggersEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   MailHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)\n         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   MailSenderAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)\n\n   MailSenderValidatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mail.test-connection=true) did not find property 'spring.mail.test-connection' (OnPropertyCondition)\n\n   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:\n      Did not match:\n         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)\n\n   ManagementWebSecurityAutoConfiguration:\n      Did not match:\n         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n\n   MappingsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   MessageSourceAutoConfiguration:\n      Did not match:\n         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)\n\n   MetricsAspectsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   MetricsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MicrometerTracingAutoConfiguration.SpanAspectConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   MongoAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)\n\n   MongoMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)\n\n   MongoReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)\n\n   MongoReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MustacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)\n\n   Neo4jAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   NewRelicMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)\n\n   NoOpMeterRegistryConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)\n\n   NoopTracerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found beans of type 'io.micrometer.tracing.Tracer' braveTracerBridge (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   OAuth2AuthorizationServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)\n\n   OAuth2AuthorizationServerJwtAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.nimbusds.jose.jwk.source.JWKSource' (OnClassCondition)\n\n   OAuth2ClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   OAuth2ClientWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)\n\n   OAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found beans of type 'io.micrometer.tracing.Tracer' braveTracerBridge (OnBeanCondition)\n\n   ObservationAutoConfiguration.ObservedAspectConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   ObservationAutoConfiguration.OnlyMetricsConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   ObservationAutoConfiguration.OnlyTracingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n\n   OpenTelemetryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)\n\n   OpenTelemetryLoggingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.api.OpenTelemetry' (OnClassCondition)\n\n   OpenTelemetryTracingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)\n\n   OtlpLoggingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.api.OpenTelemetry' (OnClassCondition)\n\n   OtlpMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)\n\n   OtlpTracingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)\n\n   ProjectInfoAutoConfiguration#buildProperties:\n      Did not match:\n         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)\n\n   ProjectInfoAutoConfiguration#gitProperties:\n      Did not match:\n         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)\n\n   PrometheusExemplarsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.prometheus.metrics.tracer.common.SpanContext' (OnClassCondition)\n\n   PrometheusMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.prometheusmetrics.PrometheusMeterRegistry' (OnClassCondition)\n\n   PulsarAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   PulsarReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   QuartzAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   QuartzEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   R2dbcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)\n\n   R2dbcInitializationConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)\n\n   R2dbcObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcProxyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcTransactionManagerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)\n\n   RSocketGraphQlClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   RSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketRequesterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)\n\n   RSocketServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)\n\n   RSocketStrategiesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RabbitAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)\n\n   RabbitHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)\n\n   RabbitMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)\n\n   ReactiveCloudFoundryActuatorAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n\n   ReactiveElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)\n\n   ReactiveElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ReactiveHttpServiceClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.service.registry.HttpServiceProxyRegistry; SearchStrategy: all) did not find any beans of type org.springframework.web.service.registry.HttpServiceProxyRegistry (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.support.WebClientAdapter' (OnClassCondition)\n\n   ReactiveManagementContextAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   ReactiveManagementWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveMultipartAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.http.codec.multipart.DefaultPartHttpMessageReader', 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   ReactiveOAuth2ClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   ReactiveOAuth2ClientWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveOAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveUserDetailsServiceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)\n\n   ReactiveWebServerFactoryAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage' (OnClassCondition)\n\n   RedisHealthContributorAutoConfiguration#redisHealthContributor:\n      Did not match:\n         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)\n\n   RepositoryRestMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)\n\n   Saml2RelyingPartyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)\n\n   SbomEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ScheduledTasksEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   SecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)\n\n   SecurityFilterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)\n\n   SecurityRequestMatchersManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)\n\n   SendGridAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)\n\n   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.server.add-application-context-header=true) did not find property 'management.server.add-application-context-header' (OnPropertyCondition)\n\n   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedJetty:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedUndertow:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   SessionAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   SessionsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   ShutdownEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint the configured access for endpoint 'shutdown' is NONE (OnAvailableEndpointCondition)\n\n   SignalFxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)\n\n   SpringApplicationAdminJmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.application.admin.enabled=true) did not find property 'spring.application.admin.enabled' (OnPropertyCondition)\n\n   SslObservabilityAutoConfiguration#sslInfoProvider:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) found beans of type 'org.springframework.boot.info.SslInfo' sslInfo (OnBeanCondition)\n\n   StackdriverMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)\n\n   StartupEndpointAutoConfiguration:\n      Did not match:\n         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)\n\n   StatsdMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskSchedulerVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   ThreadDumpEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ThymeleafAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)\n\n   TransactionAutoConfiguration#transactionalOperator:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)\n\n   UserDetailsServiceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)\n\n   ValidationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)\n\n   WebFluxAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   WebFluxEndpointManagementContextConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n\n   WebFluxObservationAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.observation.Observation', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n\n   WebMvcAutoConfiguration#hiddenHttpMethodFilter:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mvc.hiddenmethod.filter.enabled=true) did not find property 'spring.mvc.hiddenmethod.filter.enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mvc.problemdetails.enabled=true) did not find property 'spring.mvc.problemdetails.enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:\n      Did not match:\n         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)\n\n   WebServiceTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)\n\n   WebServicesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)\n\n   WebSessionIdResolverAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   WebSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)\n\n   WebSocketReactiveAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)\n\n   XADataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   ZipkinAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Encoding' (OnClassCondition)\n\n\nExclusions:\n-----------\n\n    None\n\n\nUnconditional classes:\n----------------------\n\n    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration\n\n    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration\n\n    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration\n\n    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration\n\n\n","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logReport(ConditionEvaluationReportLogger.java:72)\nCaller+1\t at org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener$ConditionEvaluationReportListener.onApplicationEvent(ConditionEvaluationReportLoggingListener.java:140)\nCaller+2\t at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:180)\nCaller+3\t at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)\nCaller+4\t at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:151)\n","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","method":"logReport","file":"ConditionEvaluationReportLogger.java","line":"72","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T19:27:25.706402+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","timestamp":"2025-06-12 19:27:25,706","level":"ERROR","thread":"main","logger":"org.springframework.boot.SpringApplication","message":"Application run failed","context":"","exception":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1813)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\t... 15 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:190)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:86)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:205)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:427)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\t... 31 common frames omitted\n","caller":"Caller+0\t at org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:858)\nCaller+1\t at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:813)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:328)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n","class":"org.springframework.boot.SpringApplication","method":"reportFailure","file":"SpringApplication.java","line":"858","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1813)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\t... 15 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:190)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:86)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:205)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:427)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\t... 31 common frames omitted\n"}
