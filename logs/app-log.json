{"timestamp":"2025-06-12T18:00:56.420254+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 18:00:56,420","level":"INFO","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"Starting MySpringBootProjectApplication using Java 24.0.1 with PID 71210 (/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main started by mohit in /Users/mohit/Documents/Software-Development/my-spring-boot-project)","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:53)\nCaller+1\t at org.springframework.boot.SpringApplication.logStartupInfo(SpringApplication.java:625)\nCaller+2\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:388)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarting","file":"StartupInfoLogger.java","line":"53","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.424816+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 18:00:56,424","level":"DEBUG","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"Running with Spring Boot v4.0.0-SNAPSHOT, Spring v7.0.0-SNAPSHOT","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:54)\nCaller+1\t at org.springframework.boot.SpringApplication.logStartupInfo(SpringApplication.java:625)\nCaller+2\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:388)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarting","file":"StartupInfoLogger.java","line":"54","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.42552+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 18:00:56,425","level":"INFO","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652)\nCaller+1\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:389)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n","class":"org.springframework.boot.SpringApplication","method":"logStartupProfileInfo","file":"SpringApplication.java","line":"652","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.426116+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","timestamp":"2025-06-12 18:00:56,426","level":"DEBUG","thread":"main","logger":"org.springframework.boot.SpringApplication","message":"Loading source class com.ms.my_spring_boot_project.MySpringBootProjectApplication","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.SpringApplication.load(SpringApplication.java:685)\nCaller+1\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:414)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n","class":"org.springframework.boot.SpringApplication","method":"load","file":"SpringApplication.java","line":"685","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.454675+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 18:00:56,454","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:664)\nCaller+1\t at org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.prepareRefresh(AnnotationConfigServletWebServerApplicationContext.java:195)\nCaller+2\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\nCaller+4\t at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n","class":"org.springframework.context.support.AbstractApplicationContext","method":"prepareRefresh","file":"AbstractApplicationContext.java","line":"664","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.465454+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:56,465","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.473345+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:56,473","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.506677+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 18:00:56,506","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/config/WebClientConfig.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.519149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 18:00:56,519","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/controller/TodoController.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.520816+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 18:00:56,520","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/logging/LogGenerator.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:56.523089+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"main","timestamp":"2025-06-12 18:00:56,523","level":"DEBUG","thread":"main","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/service/TodoService.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.109211+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,109","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:294)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.<init>(RepositoryConfigurationDelegate.java:110)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:61)\nCaller+3\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+4\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"multipleStoresDetected","file":"RepositoryConfigurationDelegate.java","line":"294","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.110629+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,110","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:145)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.11577+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,115","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages.get(AutoConfigurationPackages.java:75)\nCaller+4\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:79)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.120211+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","thread_name":"main","timestamp":"2025-06-12 18:00:57,120","level":"DEBUG","thread":"main","logger":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","message":"@EnableAutoConfiguration was declared on a class in the package 'com.ms.my_spring_boot_project'. Automatic @Repository and @Entity scanning is enabled.","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages.get(AutoConfigurationPackages.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages.get(AutoConfigurationPackages.java:75)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:79)\nCaller+3\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport$AutoConfiguredAnnotationRepositoryConfigurationSource.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:138)\nCaller+4\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:157)\n","class":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages","method":"get","file":"AutoConfigurationPackages.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.120929+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,120","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for JPA repositories in packages com.ms.my_spring_boot_project.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:155)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"155","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.127099+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"main","timestamp":"2025-06-12 18:00:57,127","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryComponentProvider","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/repository/TodoRepository.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.data.repository.config.RepositoryComponentProvider.findCandidateComponents(RepositoryComponentProvider.java:121)\nCaller+3\t at org.springframework.data.repository.config.RepositoryConfigurationSourceSupport.lambda$getCandidates$1(RepositoryConfigurationSourceSupport.java:76)\nCaller+4\t at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.207987+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,207","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 86 ms. Found 1 JPA repository interface.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.218395+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,218","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:294)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.<init>(RepositoryConfigurationDelegate.java:110)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:61)\nCaller+3\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+4\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"multipleStoresDetected","file":"RepositoryConfigurationDelegate.java","line":"294","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.219415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,219","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:145)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.225313+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,225","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for Redis repositories in packages com.ms.my_spring_boot_project.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:155)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"155","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.22776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"main","timestamp":"2025-06-12 18:00:57,227","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.config.RepositoryComponentProvider","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/repository/TodoRepository.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.data.repository.config.RepositoryComponentProvider.findCandidateComponents(RepositoryComponentProvider.java:121)\nCaller+3\t at org.springframework.data.repository.config.RepositoryConfigurationSourceSupport.lambda$getCandidates$1(RepositoryConfigurationSourceSupport.java:76)\nCaller+4\t at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.229208+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"main","timestamp":"2025-06-12 18:00:57,229","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ms.my_spring_boot_project.repository.TodoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:327)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96)\nCaller+2\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:170)\nCaller+3\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","method":"isStrictRepositoryCandidate","file":"RepositoryConfigurationExtensionSupport.java","line":"327","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.229521+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","timestamp":"2025-06-12 18:00:57,229","level":"INFO","thread":"main","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.325961+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,325","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.330535+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,330","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.330959+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,330","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.355346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,355","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.356247+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,356","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'bootstrapExecutorAliasPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.356794+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,356","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.357495+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,357","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.context.event.EventListenerMethodProcessor.postProcessBeanFactory(EventListenerMethodProcessor.java:100)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.357816+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,357","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.context.event.EventListenerMethodProcessor.postProcessBeanFactory(EventListenerMethodProcessor.java:100)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.359684+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,359","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.360542+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,360","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.362403+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,362","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.362843+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,362","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.363093+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,363","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.get(ConfigurationPropertiesBinder.java:219)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.364415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,364","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.366251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,366","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.366539+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,366","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.376979+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,376","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.387737+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,387","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.388618+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,388","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.390393+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,390","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.396187+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,396","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.39662+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,396","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.396949+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,396","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'meterRegistryPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.397898+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,397","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:90)\nCaller+4\t at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:118)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.398196+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,398","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.413928+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,413","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.416465+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,416","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.416812+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,416","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.419789+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,419","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.420005+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,420","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.42223+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,422","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.426021+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,426","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.426717+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,426","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsRepositoryMethodInvocationListenerBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.427578+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,427","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRegistryPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.42897+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,428","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.438079+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,438","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getWebServerFactory(ServletWebServerApplicationContext.java:228)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:191)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.438304+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,438","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.453015+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,453","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.453258+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,453","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.454012+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,454","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.454247+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,454","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.455072+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,455","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.459157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,459","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:76)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.465016+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,465","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.466917+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,466","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslBundleRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.467173+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,467","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.467916+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,467","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.468653+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,468","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.468856+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,468","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration' via constructor to bean named 'spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.470271+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,470","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslPropertiesSslBundleRegistrar'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.47057+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,470","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'fileWatcher'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.471357+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,471","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslPropertiesSslBundleRegistrar' via factory method to bean named 'fileWatcher'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.474923+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,474","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.475465+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,475","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.476004+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,476","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'nettyWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.476217+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,476","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.476901+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,476","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'nettyWebServerFactoryCustomizer' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.477049+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,477","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'nettyWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.479311+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,479","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.getWebServerFactoryCustomizerBeans(WebServerFactoryCustomizerBeanPostProcessor.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.479522+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,479","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.480258+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,480","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.480427+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,480","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.494135+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,494","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'errorPageCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor.getRegistrars(ErrorPageRegistrarBeanPostProcessor.java:75)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.494423+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,494","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.494938+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,494","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.495727+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dispatcherServletRegistration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.495939+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.496395+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,496","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dispatcherServlet'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.496606+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,496","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.497354+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,497","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.498847+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,498","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.507997+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,507","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.508225+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.509593+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,509","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'multipartConfigElement'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.509835+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,509","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.510323+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,510","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.511907+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,511","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.515423+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,515","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.560683+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,560","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","message":"Code archive: /Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/4.0.0-SNAPSHOT/ec66f47d35fe6a7ffec7aa21b235fbe2ffbc2688/spring-boot-4.0.0-SNAPSHOT.jar","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.server.DocumentRoot.getArchiveFileDocumentRoot(DocumentRoot.java:81)\nCaller+1\t at org.springframework.boot.web.servlet.server.DocumentRoot.getWarFileDocumentRoot(DocumentRoot.java:75)\nCaller+2\t at org.springframework.boot.web.servlet.server.DocumentRoot.getValidDirectory(DocumentRoot.java:62)\nCaller+3\t at org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(AbstractServletWebServerFactory.java:300)\nCaller+4\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(TomcatServletWebServerFactory.java:236)\n","class":"org.springframework.boot.web.servlet.server.DocumentRoot","method":"getArchiveFileDocumentRoot","file":"DocumentRoot.java","line":"81","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.560969+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,560","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","message":"Code archive: /Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/4.0.0-SNAPSHOT/ec66f47d35fe6a7ffec7aa21b235fbe2ffbc2688/spring-boot-4.0.0-SNAPSHOT.jar","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.server.DocumentRoot.getExplodedWarFileDocumentRoot(DocumentRoot.java:125)\nCaller+1\t at org.springframework.boot.web.servlet.server.DocumentRoot.getExplodedWarFileDocumentRoot(DocumentRoot.java:91)\nCaller+2\t at org.springframework.boot.web.servlet.server.DocumentRoot.getValidDirectory(DocumentRoot.java:63)\nCaller+3\t at org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(AbstractServletWebServerFactory.java:300)\nCaller+4\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(TomcatServletWebServerFactory.java:236)\n","class":"org.springframework.boot.web.servlet.server.DocumentRoot","method":"getExplodedWarFileDocumentRoot","file":"DocumentRoot.java","line":"125","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.561346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,561","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory","message":"None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.server.DocumentRoot.logNoDocumentRoots(DocumentRoot.java:149)\nCaller+1\t at org.springframework.boot.web.servlet.server.DocumentRoot.getValidDirectory(DocumentRoot.java:66)\nCaller+2\t at org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.getValidDocumentRoot(AbstractServletWebServerFactory.java:300)\nCaller+3\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.prepareContext(TomcatServletWebServerFactory.java:236)\nCaller+4\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)\n","class":"org.springframework.boot.web.servlet.server.DocumentRoot","method":"logNoDocumentRoots","file":"DocumentRoot.java","line":"149","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.577112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","timestamp":"2025-06-12 18:00:57,577","level":"INFO","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:111)\nCaller+1\t at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:517)\nCaller+3\t at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:219)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)\n","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","method":"initialize","file":"TomcatWebServer.java","line":"111","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.58635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","timestamp":"2025-06-12 18:00:57,586","level":"INFO","thread":"main","logger":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8080\"]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:611)\nCaller+3\t at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:83)\nCaller+4\t at org.apache.catalina.connector.Connector.initInternal(Connector.java:1052)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.587506+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","timestamp":"2025-06-12 18:00:57,587","level":"INFO","thread":"main","logger":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.StandardService.startInternal(StandardService.java:406)\nCaller+3\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\nCaller+4\t at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:866)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.587705+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","timestamp":"2025-06-12 18:00:57,587","level":"INFO","thread":"main","logger":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/11.0.7]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:199)\nCaller+3\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\nCaller+4\t at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.641085+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","timestamp":"2025-06-12 18:00:57,641","level":"INFO","thread":"main","logger":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.catalina.core.ApplicationContext.log(ApplicationContext.java:542)\nCaller+3\t at org.apache.catalina.core.ApplicationContextFacade.log(ApplicationContextFacade.java:133)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:291)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.641806+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 18:00:57,641","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:295)\nCaller+1\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:242)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)\nCaller+3\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4428)\nCaller+4\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\n","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","method":"prepareWebApplicationContext","file":"ServletWebServerApplicationContext.java","line":"295","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.642433+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","timestamp":"2025-06-12 18:00:57,642","level":"INFO","thread":"main","logger":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1188 ms","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:301)\nCaller+1\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:242)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)\nCaller+3\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4428)\nCaller+4\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\n","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","method":"prepareWebApplicationContext","file":"ServletWebServerApplicationContext.java","line":"301","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.645603+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,645","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webMvcObservationFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:221)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.646105+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,646","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.647504+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,647","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.647765+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,647","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.653591+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,653","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertiesObservationFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.655097+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,655","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.657219+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,657","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propertiesObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.660232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,660","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsAndTracingObservationHandlerGrouping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.660476+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,660","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MetricsWithTracingConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.662062+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,662","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'defaultTracingObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.662469+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,662","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.670132+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,670","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.67045+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,670","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.670996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,670","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.tracing-org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.672402+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,672","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration' via constructor to bean named 'management.tracing-org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.673396+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,673","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveTracer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.673924+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,673","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.674652+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,674","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'compositeSpanHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.679028+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,679","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveCurrentTraceContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.679684+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,679","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'correlationScopeDecorator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.679907+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,679","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$PropagationWithBaggage'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.680489+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,680","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$PropagationWithBaggage' via constructor to bean named 'management.tracing-org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.681339+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,681","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mdcCorrelationScopeDecoratorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.685339+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,685","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'correlationFieldsCorrelationScopeCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.686403+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,686","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'correlationScopeDecorator' via factory method to bean named 'mdcCorrelationScopeDecoratorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.687783+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,687","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveCurrentTraceContext' via factory method to bean named 'correlationScopeDecorator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.690102+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,690","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagationFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.690635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,690","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagationFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.691591+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,691","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'remoteFieldsBaggagePropagationCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.694448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.micrometer.common.util.internal.logging.InternalLoggerFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,694","level":"DEBUG","thread":"main","logger":"io.micrometer.common.util.internal.logging.InternalLoggerFactory","message":"Using SLF4J as the default logging framework","context":"","exception":"","caller":"Caller+0\t at io.micrometer.common.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:59)\nCaller+1\t at io.micrometer.common.util.internal.logging.InternalLoggerFactory.getDefaultFactory(InternalLoggerFactory.java:74)\nCaller+2\t at io.micrometer.common.util.internal.logging.InternalLoggerFactory.getInstance(InternalLoggerFactory.java:103)\nCaller+3\t at io.micrometer.tracing.brave.bridge.W3CPropagation.<clinit>(W3CPropagation.java:51)\nCaller+4\t at org.springframework.boot.actuate.autoconfigure.tracing.CompositePropagationFactory$PropagationFactoryMapper.w3c(CompositePropagationFactory.java:165)\n","class":"io.micrometer.common.util.internal.logging.InternalLoggerFactory","method":"newDefaultFactory","file":"InternalLoggerFactory.java","line":"59","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.697331+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,697","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagationFactory' via factory method to bean named 'propagationFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.698541+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,698","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveSampler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.699544+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,699","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.699736+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,699","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'compositeSpanHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.699894+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,699","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'braveCurrentTraceContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.700043+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,700","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'propagationFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.700206+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,700","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracing' via factory method to bean named 'braveSampler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.712316+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,712","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracer' via factory method to bean named 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.713617+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,713","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracerBridge' via factory method to bean named 'braveTracer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.713807+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,713","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveTracerBridge' via factory method to bean named 'braveCurrentTraceContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.716059+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,716","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'defaultTracingObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.717576+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,717","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagatingSenderTracingObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.718415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,718","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'bravePropagator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.718905+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,718","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'bravePropagator' via factory method to bean named 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.720983+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,720","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingSenderTracingObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.721169+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,721","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingSenderTracingObservationHandler' via factory method to bean named 'bravePropagator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.722855+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,722","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propagatingReceiverTracingObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.723682+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,723","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingReceiverTracingObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.723878+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,723","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propagatingReceiverTracingObservationHandler' via factory method to bean named 'bravePropagator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.726765+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,726","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tracingAwareMeterObservationHandler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.727456+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,727","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.729861+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,729","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.730419+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,730","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.731615+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,731","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleConfig'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.732612+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,732","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.734459+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,734","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'simpleConfig' via factory method to bean named 'management.simple.metrics.export-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.737016+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,737","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'micrometerClock'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.73726+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,737","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.73867+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,738","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'simpleConfig'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.738908+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,738","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'simpleMeterRegistry' via factory method to bean named 'micrometerClock'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.751208+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,751","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertiesMeterFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.751836+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,751","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.75324+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,753","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propertiesMeterFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.754753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,754","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsHttpClientUriTagFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.754973+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,754","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.755904+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,755","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.756077+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,756","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpClientUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.757184+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,757","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsHttpServerUriTagFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.757367+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,757","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.758196+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,758","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.75836+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,758","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsHttpServerUriTagFilter' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.761291+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,761","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tracingAwareMeterObservationHandler' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.761461+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,761","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tracingAwareMeterObservationHandler' via factory method to bean named 'braveTracerBridge'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.761588+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,761","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tracingAwareMeterObservationHandler' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.764443+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,764","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.764581+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,764","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webMvcObservationFilter' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.769878+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,769","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletEndpointRegistrar'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:221)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.770099+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,770","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.771064+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,771","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.772056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,772","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.77229+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,772","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.772971+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,772","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointDiscoverer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.774415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,774","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webEndpointPathMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.774654+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,774","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.77535+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,775","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.775516+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,775","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration' via constructor to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.776884+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,776","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletExposeExcludePropertyEndpointFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.777055+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,777","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.777619+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,777","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletExposeExcludePropertyEndpointFilter' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.781077+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,781","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertiesEndpointAccessResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.781251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,781","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.781666+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,781","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'propertiesEndpointAccessResolver' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.782105+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.782229+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'servletEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.782333+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'dispatcherServletRegistration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.782429+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'servletEndpointRegistrar' via factory method to bean named 'propertiesEndpointAccessResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.791545+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,791","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'requestContextFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.793618+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,793","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'formContentFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.793771+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,793","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.796175+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,796","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'characterEncodingFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:230)\nCaller+4\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:184)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.796316+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,796","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.796885+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,796","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.servlet.encoding-org.springframework.boot.autoconfigure.web.servlet.ServletEncodingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.797507+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,797","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'characterEncodingFilter' via factory method to bean named 'spring.servlet.encoding-org.springframework.boot.autoconfigure.web.servlet.ServletEncodingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.803003+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","timestamp":"2025-06-12 18:00:57,803","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","message":"Mapping filters: webMvcObservationFilter urls=[/*] order=-2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:254)\nCaller+1\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:243)\nCaller+2\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:101)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)\n","class":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","method":"logMappings","file":"ServletContextInitializerBeans.java","line":"254","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.8032+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","thread_name":"main","timestamp":"2025-06-12 18:00:57,803","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","message":"Mapping servlets: dispatcherServlet urls=[/]","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:254)\nCaller+1\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.logMappings(ServletContextInitializerBeans.java:244)\nCaller+2\t at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:101)\nCaller+3\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)\nCaller+4\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)\n","class":"org.springframework.boot.web.servlet.ServletContextInitializerBeans","method":"logMappings","file":"ServletContextInitializerBeans.java","line":"254","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.823078+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter","thread_name":"main","timestamp":"2025-06-12 18:00:57,823","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter","message":"Filter 'requestContextFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.824066+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","thread_name":"main","timestamp":"2025-06-12 18:00:57,824","level":"DEBUG","thread":"main","logger":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.824345+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter","thread_name":"main","timestamp":"2025-06-12 18:00:57,824","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter","message":"Filter 'characterEncodingFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.824494+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter","thread_name":"main","timestamp":"2025-06-12 18:00:57,824","level":"DEBUG","thread":"main","logger":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter","message":"Filter 'formContentFilter' configured for use","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.filter.GenericFilterBean.init(GenericFilterBean.java:236)\nCaller+1\t at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:241)\nCaller+2\t at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFilterConfig.java:101)\nCaller+3\t at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:3865)\nCaller+4\t at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)\n","class":"org.springframework.web.filter.GenericFilterBean","method":"init","file":"GenericFilterBean.java","line":"236","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.829273+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,829","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:933)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.829507+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,829","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.830117+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,830","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.83026+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,830","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.831018+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,831","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.831912+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,831","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.833731+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,833","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'threadPoolTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.836031+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","timestamp":"2025-06-12 18:00:57,836","level":"DEBUG","thread":"main","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","message":"Initializing ExecutorService 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:300)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.afterPropertiesSet(ExecutorConfigurationSupport.java:292)\nCaller+2\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"initialize","file":"ExecutorConfigurationSupport.java","line":"300","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.840252+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,840","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:309)\nCaller+4\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.840408+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,840","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.840815+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,840","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.840952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,840","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.841603+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,841","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.852522+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,852","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.852826+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,852","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.853627+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,853","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.854334+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,854","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.854466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,854","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.854612+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,854","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.859032+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:57,859","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"Class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.attemptFromContextLoader(HikariConfig.java:1026)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.setDriverClassName(HikariConfig.java:503)\nCaller+2\t at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperty.set(DataSourceBuilder.java:478)\nCaller+3\t at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.set(DataSourceBuilder.java:370)\nCaller+4\t at org.springframework.boot.jdbc.DataSourceBuilder.build(DataSourceBuilder.java:185)\n","class":"com.zaxxer.hikari.HikariConfig","method":"attemptFromContextLoader","file":"HikariConfig.java","line":"1026","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.870263+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,870","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.871232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,871","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.871387+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,871","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.874228+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,874","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'entityManagerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.874427+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,874","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.875519+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,875","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.877506+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,877","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.87831+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,878","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.878451+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,878","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.878549+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,878","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.878647+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,878","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.881097+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,881","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.881279+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,881","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.884346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,884","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'entityManagerFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.88486+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,884","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpaVendorAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.898164+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.jboss.logging","thread_name":"main","timestamp":"2025-06-12 18:00:57,898","level":"DEBUG","thread":"main","logger":"org.jboss.logging","message":"Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:164)\nCaller+1\t at org.jboss.logging.LoggerProviders.trySlf4j(LoggerProviders.java:113)\nCaller+2\t at org.jboss.logging.LoggerProviders.findProvider(LoggerProviders.java:53)\nCaller+3\t at org.jboss.logging.LoggerProviders.find(LoggerProviders.java:32)\nCaller+4\t at org.jboss.logging.LoggerProviders.<clinit>(LoggerProviders.java:29)\n","class":"org.jboss.logging.LoggerProviders","method":"logProvider","file":"LoggerProviders.java","line":"164","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.901078+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,901","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.903081+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,903","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'persistenceManagedTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.903837+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,903","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.903946+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,903","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.90774+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,907","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.907923+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:57,907","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'persistenceManagedTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.916202+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","timestamp":"2025-06-12 18:00:57,916","level":"DEBUG","thread":"main","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Building JPA container EntityManagerFactory for persistence unit 'default'","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:384)\nCaller+1\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\nCaller+2\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\nCaller+3\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n","class":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","method":"createNativeEntityManagerFactory","file":"LocalContainerEntityManagerFactoryBean.java","line":"384","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.921047+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","timestamp":"2025-06-12 18:00:57,921","level":"DEBUG","thread":"main","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"PersistenceUnitInfo [\n\tname: default\n\tpersistence provider classname: null\n\tclassloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299\n\texcludeUnlistedClasses: true\n\tJTA datasource: null\n\tNon JTA datasource: HikariDataSource (null)\n\tTransaction type: RESOURCE_LOCAL\n\tPU root URL: file:/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/\n\tShared Cache Mode: UNSPECIFIED\n\tValidation Mode: AUTO\n\tJar files URLs []\n\tManaged classes names [\n\t\tcom.ms.my_spring_boot_project.model.Todo]\n\tMapping files names []\n\tProperties []","context":"","exception":"","caller":"Caller+0\t at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:101)\nCaller+1\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:211)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.jpa.internal.util.LogHelper","method":"logPersistenceUnitInformation","file":"LogHelper.java","line":"101","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.924974+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.integrator.internal.IntegratorServiceImpl","thread_name":"main","timestamp":"2025-06-12 18:00:57,924","level":"DEBUG","thread":"main","logger":"org.hibernate.integrator.internal.IntegratorServiceImpl","message":"Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].","context":"","exception":"","caller":"Caller+0\t at org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:49)\nCaller+1\t at org.hibernate.integrator.internal.IntegratorServiceImpl.create(IntegratorServiceImpl.java:33)\nCaller+2\t at org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build(BootstrapServiceRegistryBuilder.java:188)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.buildBootstrapServiceRegistry(EntityManagerFactoryBuilderImpl.java:502)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:217)\n","class":"org.hibernate.integrator.internal.IntegratorServiceImpl","method":"addIntegrator","file":"IntegratorServiceImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.926048+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.integrator.internal.IntegratorServiceImpl","thread_name":"main","timestamp":"2025-06-12 18:00:57,926","level":"DEBUG","thread":"main","logger":"org.hibernate.integrator.internal.IntegratorServiceImpl","message":"Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].","context":"","exception":"","caller":"Caller+0\t at org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:49)\nCaller+1\t at org.hibernate.integrator.internal.IntegratorServiceImpl.create(IntegratorServiceImpl.java:34)\nCaller+2\t at org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build(BootstrapServiceRegistryBuilder.java:188)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.buildBootstrapServiceRegistry(EntityManagerFactoryBuilderImpl.java:502)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:217)\n","class":"org.hibernate.integrator.internal.IntegratorServiceImpl","method":"addIntegrator","file":"IntegratorServiceImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.956178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.hibernate.Version","thread_name":"main","timestamp":"2025-06-12 18:00:57,956","level":"INFO","thread":"main","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 7.0.0.CR1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.Version.logVersion(Version.java:45)\nCaller+1\t at org.hibernate.cfg.Environment.<clinit>(Environment.java:139)\nCaller+2\t at org.hibernate.jpa.boot.internal.MergedSettings.<init>(MergedSettings.java:32)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.mergeSettings(EntityManagerFactoryBuilderImpl.java:580)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:224)\n","class":"org.hibernate.Version","method":"logVersion","file":"Version.java","line":"45","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.956925+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cfg.Environment","thread_name":"main","timestamp":"2025-06-12 18:00:57,956","level":"DEBUG","thread":"main","logger":"org.hibernate.cfg.Environment","message":"HHH000206: 'hibernate.properties' not found","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cfg.Environment.<clinit>(Environment.java:162)\nCaller+1\t at org.hibernate.jpa.boot.internal.MergedSettings.<init>(MergedSettings.java:32)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.mergeSettings(EntityManagerFactoryBuilderImpl.java:580)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:224)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.cfg.Environment","method":"<clinit>","file":"Environment.java","line":"162","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.971384+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.hibernate5.SpringBeanContainer","thread_name":"main","timestamp":"2025-06-12 18:00:57,971","level":"DEBUG","thread":"main","logger":"org.springframework.orm.hibernate5.SpringBeanContainer","message":"Falling back to Hibernate's default producer after bean creation failure for interface org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider': Failed to instantiate [org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]: Specified class is an interface","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.hibernate5.SpringBeanContainer.createBean(SpringBeanContainer.java:157)\nCaller+1\t at org.springframework.orm.hibernate5.SpringBeanContainer.getBean(SpringBeanContainer.java:106)\nCaller+2\t at org.hibernate.resource.beans.internal.Helper.containedBean(Helper.java:66)\nCaller+3\t at org.hibernate.resource.beans.internal.Helper.getBean(Helper.java:56)\nCaller+4\t at org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator.initiateService(MultiTenantConnectionProviderInitiator.java:43)\n","class":"org.springframework.orm.hibernate5.SpringBeanContainer","method":"createBean","file":"SpringBeanContainer.java","line":"157","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.971998+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:57,971","level":"DEBUG","thread":"main","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:117)\nCaller+1\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:45)\nCaller+2\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:30)\nCaller+3\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n","class":"org.hibernate.cache.internal.RegionFactoryInitiator","method":"resolveRegionFactory","file":"RegionFactoryInitiator.java","line":"117","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:57.972373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:57,972","level":"DEBUG","thread":"main","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:47)\nCaller+1\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:30)\nCaller+2\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","class":"org.hibernate.cache.internal.RegionFactoryInitiator","method":"initiateService","file":"RegionFactoryInitiator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.016149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2fa47368","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.016411+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2fa47368","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.016586+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2fa47368","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.0167+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@35841d6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:787)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01679+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@35841d6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:787)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01688+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5e9ea380","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:794)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.016964+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,016","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5e9ea380","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:794)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01712+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e50eb3f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:801)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01722+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e50eb3f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:801)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017307+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte -> org.hibernate.type.BasicTypeReference@12e3f4ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01739+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte -> org.hibernate.type.BasicTypeReference@12e3f4ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017471+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@12e3f4ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017558+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration binary -> org.hibernate.type.BasicTypeReference@537451d5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017643+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@537451d5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017725+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration [B -> org.hibernate.type.BasicTypeReference@537451d5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017813+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@785d6a98","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:826)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017901+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@785d6a98","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:826)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.017991+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,017","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration image -> org.hibernate.type.BasicTypeReference@614d7fbf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:833)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018078+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration blob -> org.hibernate.type.BasicTypeReference@6c06b1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:840)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018166+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6c06b1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:840)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1d8dbf10","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:848)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018341+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@e171f93","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:855)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018426+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration short -> org.hibernate.type.BasicTypeReference@4ad3969","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018507+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration short -> org.hibernate.type.BasicTypeReference@4ad3969","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018588+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4ad3969","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018678+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration integer -> org.hibernate.type.BasicTypeReference@5d7ff311","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018757+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration int -> org.hibernate.type.BasicTypeReference@5d7ff311","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018839+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5d7ff311","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.018931+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,018","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration long -> org.hibernate.type.BasicTypeReference@2d7aa291","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01901+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration long -> org.hibernate.type.BasicTypeReference@2d7aa291","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019098+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2d7aa291","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019181+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float -> org.hibernate.type.BasicTypeReference@1ba7db2a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019262+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float -> org.hibernate.type.BasicTypeReference@1ba7db2a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019345+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1ba7db2a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019433+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double -> org.hibernate.type.BasicTypeReference@762cdf46","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019512+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double -> org.hibernate.type.BasicTypeReference@762cdf46","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@762cdf46","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019685+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@54e94de9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:901)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@54e94de9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:901)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.01986+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2cff03cf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:908)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.019938+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,019","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2cff03cf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:908)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020024+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration character -> org.hibernate.type.BasicTypeReference@924f3f1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020109+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration char -> org.hibernate.type.BasicTypeReference@924f3f1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02019+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@924f3f1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020272+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@19e2db7c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:926)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020367+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration string -> org.hibernate.type.BasicTypeReference@77a4bac","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:933)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020447+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@77a4bac","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:933)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020529+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration nstring -> org.hibernate.type.BasicTypeReference@534fc1f7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:940)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020637+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d5a0b14","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020717+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d5a0b14","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020798+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d5a0b14","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02088+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@72ec16f8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:954)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.020961+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,020","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration text -> org.hibernate.type.BasicTypeReference@279e1422","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:961)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021042+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ntext -> org.hibernate.type.BasicTypeReference@af3295f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:968)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021132+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration clob -> org.hibernate.type.BasicTypeReference@27dc81be","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:975)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021211+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@27dc81be","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:975)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3595086b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:982)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021392+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3595086b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:982)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02147+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@627d35ff","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:989)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02155+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7157413e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:996)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021641+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3245efdb","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1003)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021732+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2f0e7fa8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1010)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.021818+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@24d7657b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1017)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.0219+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6f428e6e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1024)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02199+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,021","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Duration -> org.hibernate.type.BasicTypeReference@72e49f6a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1035)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022065+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@72e49f6a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1035)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022159+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2e4b5da1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1042)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022244+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2e4b5da1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1042)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022323+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@312819ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1049)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022399+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@312819ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1049)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022478+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4ae2c01b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1056)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022558+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4ae2c01b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1056)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022637+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1cab19e2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1063)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02271+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1cab19e2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1063)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022788+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6879e983","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1070)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02287+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@196d684b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1077)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.022954+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,022","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@45d38165","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1084)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023032+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@45d38165","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1084)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023124+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1f3f434","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1091)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023205+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@26612078","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1098)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023284+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@54bc3bcf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1105)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023375+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d3d5094","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1112)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023452+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d3d5094","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1112)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023539+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@13714753","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1119)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023614+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c3cd7a5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1126)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023689+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration date -> org.hibernate.type.BasicTypeReference@96be1ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1133)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023759+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@96be1ae","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1133)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023834+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration time -> org.hibernate.type.BasicTypeReference@6eb5b9e7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1140)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023909+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6eb5b9e7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1140)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.023985+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,023","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77e730bd","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77e730bd","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024135+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77e730bd","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024213+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2d3c501b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024284+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2d3c501b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024357+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2d3c501b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024431+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7b8cb283","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1161)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024511+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@38b54694","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1168)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024588+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration instant -> org.hibernate.type.BasicTypeReference@7619fbe7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1175)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024659+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7619fbe7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1175)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024737+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid -> org.hibernate.type.BasicTypeReference@39ead1b7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.02481+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@39ead1b7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024889+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@39ead1b7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.024969+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,024","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@27ec74a3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1193)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025045+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@35ff072c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1200)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025161+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration class -> org.hibernate.type.BasicTypeReference@c0004b7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1211)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025234+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@c0004b7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1211)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025315+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration currency -> org.hibernate.type.BasicTypeReference@63880be9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025391+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63880be9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025462+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63880be9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025537+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration locale -> org.hibernate.type.BasicTypeReference@27053257","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1225)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025634+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@27053257","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1225)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025715+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6a0e97fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1233)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.025932+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,025","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6a0e97fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1233)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026151+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration timezone -> org.hibernate.type.BasicTypeReference@662713b6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1240)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026257+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@662713b6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1240)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026366+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@45539bd8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1247)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026445+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@45539bd8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1247)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026531+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration url -> org.hibernate.type.BasicTypeReference@4bca8eaf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1254)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026605+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4bca8eaf","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1254)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.026992+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,026","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration vector -> org.hibernate.type.BasicTypeReference@55e5415d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1261)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.027088+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,027","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@52d59507","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1268)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.027172+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,027","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@4d75c604","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1275)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.027251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,027","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@3265995e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1282)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.027326+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,027","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration row_version -> org.hibernate.type.BasicTypeReference@33f2eb04","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1292)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.029753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,029","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration object -> org.hibernate.type.JavaObjectType@a6fc1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1299)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.029847+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,029","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@a6fc1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1299)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration null -> org.hibernate.type.NullType@3a69014e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1306)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030499+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@27746c5e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1314)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030574+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@543ac221","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1317)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030646+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2270f58d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1320)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030716+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@50e1f3fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1323)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@54737322","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1326)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030854+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@56da8847","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1329)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030923+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7323c38c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1332)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.030992+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,030","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2c02a007","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1335)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.119209+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,119","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c683cf5] into BootstrapContext; was [null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:311)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1350)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectJpaTempClassLoader","file":"BootstrapContextImpl.java","line":"311","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.119437+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,119","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c683cf5) [was null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:43)\nCaller+1\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:312)\nCaller+2\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1350)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"injectTempClassLoader","file":"ClassLoaderAccessImpl.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.119685+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,119","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6a5c2d2d] into BootstrapContext; was [null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:321)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyScanEnvironment(MetadataBuilderImpl.java:225)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1353)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectScanEnvironment","file":"BootstrapContextImpl.java","line":"321","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.12008+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,120","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1dadd172] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@33c9f1ac]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:316)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyScanOptions(MetadataBuilderImpl.java:219)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1354)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectScanOptions","file":"BootstrapContextImpl.java","line":"316","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.13295+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","thread_name":"main","timestamp":"2025-06-12 18:00:58,132","level":"DEBUG","thread":"main","logger":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","message":"Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299","context":"","exception":"","caller":"Caller+0\t at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:136)\nCaller+1\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider$1.pushClassTransformer(SpringHibernateJpaPersistenceProvider.java:63)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.setupEnhancement(EntityManagerFactoryBuilderImpl.java:333)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:242)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","method":"pushClassTransformer","file":"PersistenceUnitInfoDescriptor.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.249354+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","timestamp":"2025-06-12 18:00:58,249","level":"INFO","thread":"main","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo.addTransformer(SpringPersistenceUnitInfo.java:84)\nCaller+1\t at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:141)\nCaller+2\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider$1.pushClassTransformer(SpringHibernateJpaPersistenceProvider.java:63)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.setupEnhancement(EntityManagerFactoryBuilderImpl.java:333)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:242)\n","class":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","method":"addTransformer","file":"SpringPersistenceUnitInfo.java","line":"84","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.249633+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,249","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c683cf5]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:311)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:244)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\nCaller+4\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectJpaTempClassLoader","file":"BootstrapContextImpl.java","line":"311","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.249731+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,249","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@c683cf5]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:43)\nCaller+1\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:312)\nCaller+2\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:244)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"injectTempClassLoader","file":"ClassLoaderAccessImpl.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.27037+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,270","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"HikariPool-1 - configuration:","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1154)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1154","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.271523+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,271","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"allowPoolSuspension.............false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.271671+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,271","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"autoCommit......................true","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.271781+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,271","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"catalog.........................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.271888+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,271","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionInitSql...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.271986+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,271","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionTestQuery.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.272525+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,272","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionTimeout...............30000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.272642+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,272","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"credentials.....................com.zaxxer.hikari.util.Credentials@988c126","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.272755+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,272","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSource......................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.272858+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,272","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceClassName.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.272954+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,272","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceJNDI..................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273159+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceProperties............{password=<masked>}","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273294+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"driverClassName.................\"com.mysql.cj.jdbc.Driver\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273396+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"exceptionOverride...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273489+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"exceptionOverrideClassName......none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273581+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"healthCheckProperties...........{}","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273677+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"healthCheckRegistry.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"idleTimeout.....................600000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.273874+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"initializationFailTimeout.......1","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.27398+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,273","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"isolateInternalQueries..........false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274117+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"jdbcUrl.........................jdbc:mysql://localhost:3306/MySpringBootProject","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274217+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"keepaliveTime...................120000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274307+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"leakDetectionThreshold..........0","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274395+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"maxLifetime.....................1800000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274488+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"maximumPoolSize.................10","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274576+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"metricRegistry..................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274667+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"metricsTrackerFactory...........none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.27476+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"minimumIdle.....................10","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.274851+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"password........................<masked>","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.27494+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,274","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"poolName........................\"HikariPool-1\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275036+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"readOnly........................false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275134+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"registerMbeans..................false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275224+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"scheduledExecutor...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"schema..........................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275409+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"threadFactory...................internal","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275491+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"transactionIsolation............default","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275575+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"username........................\"springbootuser\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.275663+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.HikariConfig","message":"validationTimeout...............5000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.27574+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","timestamp":"2025-06-12 18:00:58,275","level":"INFO","thread":"main","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting...","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:109)\nCaller+1\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"com.zaxxer.hikari.HikariDataSource","method":"getConnection","file":"HikariDataSource.java","line":"109","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.28912+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"main","timestamp":"2025-06-12 18:00:58,289","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (f42ce036-8c4c-4bb4-b5f5-26b3b9d61151)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.612298+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"main","timestamp":"2025-06-12 18:00:58,612","level":"DEBUG","thread":"main","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (f42ce036-8c4c-4bb4-b5f5-26b3b9d61151)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.613058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","timestamp":"2025-06-12 18:00:58,613","level":"INFO","thread":"main","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dc1597f","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:575)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"checkFailFast","file":"HikariPool.java","line":"575","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.613934+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","timestamp":"2025-06-12 18:00:58,613","level":"INFO","thread":"main","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed.","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:122)\nCaller+1\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"com.zaxxer.hikari.HikariDataSource","method":"getConnection","file":"HikariDataSource.java","line":"122","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.617317+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:58,617","level":"DEBUG","thread":"main","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"Database ->\n\t   name : MySQL\n\tversion : 9.2.0\n\t  major : 9\n\t  minor : 2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(JdbcEnvironmentInitiator.java:432)\nCaller+1\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:361)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:356)\nCaller+3\t at org.hibernate.jdbc.WorkExecutor.executeReturningWork(WorkExecutor.java:56)\nCaller+4\t at org.hibernate.jdbc.AbstractReturningWork.accept(AbstractReturningWork.java:32)\n","class":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","method":"logDatabaseAndDriver","file":"JdbcEnvironmentInitiator.java","line":"432","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.617456+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:58,617","level":"DEBUG","thread":"main","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"Driver ->\n\t   name : MySQL Connector/J\n\tversion : mysql-connector-j-9.2.0 (Revision: a3909bfeb62d5a517ab444bb88ba7ecf26100297)\n\t  major : 9\n\t  minor : 2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(JdbcEnvironmentInitiator.java:443)\nCaller+1\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:361)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:356)\nCaller+3\t at org.hibernate.jdbc.WorkExecutor.executeReturningWork(WorkExecutor.java:56)\nCaller+4\t at org.hibernate.jdbc.AbstractReturningWork.accept(AbstractReturningWork.java:32)\n","class":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","method":"logDatabaseAndDriver","file":"JdbcEnvironmentInitiator.java","line":"443","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.617554+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:58,617","level":"DEBUG","thread":"main","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"JDBC version : 4.2","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:388)\nCaller+1\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logDatabaseAndDriver(JdbcEnvironmentInitiator.java:454)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:361)\nCaller+3\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:356)\nCaller+4\t at org.hibernate.jdbc.WorkExecutor.executeReturningWork(WorkExecutor.java:56)\n","class":"org.jboss.logging.DelegatingBasicLogger","method":"debugf","file":"DelegatingBasicLogger.java","line":"388","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.657839+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.dialect","thread_name":"main","timestamp":"2025-06-12 18:00:58,657","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.dialect","message":"HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.2","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.logSelectedDialect(DialectFactoryImpl.java:93)\nCaller+1\t at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:88)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:388)\nCaller+3\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$1.execute(JdbcEnvironmentInitiator.java:356)\nCaller+4\t at org.hibernate.jdbc.WorkExecutor.executeReturningWork(WorkExecutor.java:56)\n","class":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl","method":"logSelectedDialect","file":"DialectFactoryImpl.java","line":"93","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.659543+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder","thread_name":"main","timestamp":"2025-06-12 18:00:58,659","level":"DEBUG","thread":"main","logger":"org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder","message":"IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:208)\nCaller+1\t at org.hibernate.dialect.Dialect.buildIdentifierHelper(Dialect.java:3337)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.buildIdentifierHelper(MySQLDialect.java:1304)\nCaller+3\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.identifierHelper(JdbcEnvironmentImpl.java:322)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:293)\n","class":"org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder","method":"build","file":"IdentifierHelperBuilder.java","line":"208","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.6679+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.hibernate.orm.connections.pooling","thread_name":"main","timestamp":"2025-06-12 18:00:58,667","level":"INFO","thread":"main","logger":"org.hibernate.orm.connections.pooling","message":"HHH10001005: Database info:\n\tDatabase JDBC URL [jdbc:mysql://localhost:3306/MySpringBootProject]\n\tDatabase driver: MySQL Connector/J\n\tDatabase version: 9.2\n\tAutocommit mode: undefined/unknown\n\tIsolation level: REPEATABLE_READ [default REPEATABLE_READ]\n\tPool: DatasourceConnectionProviderImpl\n\tMinimum pool size: undefined/unknown\n\tMaximum pool size: undefined/unknown","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.logConnectionInfo(JdbcEnvironmentInitiator.java:182)\nCaller+1\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:175)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\nCaller+3\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\nCaller+4\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n","class":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","method":"logConnectionInfo","file":"JdbcEnvironmentInitiator.java","line":"182","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.671644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,671","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6de4071b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7077ae9c)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:369)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.671775+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,671","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fe3ebb3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22a1d77b)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:387)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.671877+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,671","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f30d0eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22fe90df)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:403)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.671969+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,671","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2604940) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e564c78)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:405)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.672051+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,672","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@470866d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11267e87)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:407)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.672137+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,672","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@118c1faa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@da5b46f)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:409)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.672225+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,672","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@99f75e4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b6ff016)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:412)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.672312+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,672","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5aefdb9e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7a491a60)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:421)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.672396+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,672","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","message":"addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@80b6098) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c30decf)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:62)\nCaller+1\t at org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry.addDescriptor(DdlTypeRegistry.java:50)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.registerColumnTypes(MySQLDialect.java:430)\nCaller+3\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1843)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\n","class":"org.hibernate.type.descriptor.sql.spi.DdlTypeRegistry","method":"addDescriptor","file":"DdlTypeRegistry.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.673318+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,673","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","message":"addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(JdbcTypeRegistry.java:73)\nCaller+1\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1847)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\nCaller+3\t at org.hibernate.dialect.Dialect.contribute(Dialect.java:1832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:730)\n","class":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","method":"addDescriptor","file":"JdbcTypeRegistry.java","line":"73","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.673404+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,673","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","message":"addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(JdbcTypeRegistry.java:73)\nCaller+1\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1848)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\nCaller+3\t at org.hibernate.dialect.Dialect.contribute(Dialect.java:1832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:730)\n","class":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","method":"addDescriptor","file":"JdbcTypeRegistry.java","line":"73","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.673606+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,673","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","message":"addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(JdbcTypeRegistry.java:73)\nCaller+1\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1849)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\nCaller+3\t at org.hibernate.dialect.Dialect.contribute(Dialect.java:1832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:730)\n","class":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","method":"addDescriptor","file":"JdbcTypeRegistry.java","line":"73","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.674745+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,674","level":"DEBUG","thread":"main","logger":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","message":"addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry.addDescriptor(JdbcTypeRegistry.java:73)\nCaller+1\t at org.hibernate.dialect.Dialect.contributeTypes(Dialect.java:1850)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:704)\nCaller+3\t at org.hibernate.dialect.Dialect.contribute(Dialect.java:1832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:730)\n","class":"org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry","method":"addDescriptor","file":"JdbcTypeRegistry.java","line":"73","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.678478+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,678","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration null -> org.hibernate.type.NullType@7945986a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:243)\nCaller+3\t at org.hibernate.boot.model.TypeContributions.contributeType(TypeContributions.java:90)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:715)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.678598+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,678","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3a69014e`","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:402)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:243)\nCaller+3\t at org.hibernate.boot.model.TypeContributions.contributeType(TypeContributions.java:90)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.contributeTypes(MySQLDialect.java:715)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"402","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.68188+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,681","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptToPreferredSqlTypeCode(MetadataBuildingProcess.java:879)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:784)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.681974+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,681","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Duration -> basicType@1(java.time.Duration,3015)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptToPreferredSqlTypeCode(MetadataBuildingProcess.java:879)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:784)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.682052+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,682","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptToPreferredSqlTypeCode(MetadataBuildingProcess.java:879)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:784)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683095+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimestampTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:915)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:828)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683175+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimestampTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:915)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:828)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683248+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimestampTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:915)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:828)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683321+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimestampTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:921)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:828)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.68339+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimestampTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:921)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:828)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683458+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimestampTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:921)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:828)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683772+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimeTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:892)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683845+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimeTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:892)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.683912+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,683","level":"DEBUG","thread":"main","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:266)\nCaller+2\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.adaptTimeTypesToDefaultTimeZoneStorage(MetadataBuildingProcess.java:892)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:832)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:187)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.693138+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.spi.TypeConfiguration$Scope","thread_name":"main","timestamp":"2025-06-12 18:00:58,693","level":"DEBUG","thread":"main","logger":"org.hibernate.type.spi.TypeConfiguration$Scope","message":"Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74ed7111] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74691677]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:196)\nCaller+1\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:206)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n","class":"org.hibernate.type.spi.TypeConfiguration","method":"scope","file":"TypeConfiguration.java","line":"196","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.711734+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.relational.Namespace","thread_name":"main","timestamp":"2025-06-12 18:00:58,711","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.relational.Namespace","message":"Created database namespace [logicalName=Name[catalog=null, schema=null], physicalName=Name[catalog=null, schema=null]]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:62)\nCaller+1\t at org.hibernate.boot.model.relational.Database.makeNamespace(Database.java:77)\nCaller+2\t at org.hibernate.boot.model.relational.Database.locateNamespace(Database.java:138)\nCaller+3\t at org.hibernate.boot.model.relational.Database.adjustDefaultNamespace(Database.java:143)\nCaller+4\t at org.hibernate.boot.model.relational.Database.adjustDefaultNamespace(Database.java:147)\n","class":"org.hibernate.boot.model.relational.Namespace","method":"<init>","file":"Namespace.java","line":"62","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.717967+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.internal.EntityBinder","thread_name":"main","timestamp":"2025-06-12 18:00:58,717","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.internal.EntityBinder","message":"Binding entity from annotated class: com.ms.my_spring_boot_project.model.Todo","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:183)\nCaller+1\t at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:243)\nCaller+2\t at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:196)\nCaller+3\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:306)\nCaller+4\t at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.coordinateProcessors(MetadataBuildingProcess.java:340)\n","class":"org.hibernate.boot.model.internal.EntityBinder","method":"bindEntityClass","file":"EntityBinder.java","line":"183","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.719005+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:housekeeper","timestamp":"2025-06-12 18:00:58,719","level":"DEBUG","thread":"HikariPool-1:housekeeper","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Pool stats (total=1/10, idle=1/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$HouseKeeper.run(HikariPool.java:838)\nCaller+2\t at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:545)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:369)\nCaller+4\t at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:310)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.719428+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,719","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (41caf676-a02d-490c-9666-6ed08e384739)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.728178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.internal.AnnotatedColumn","thread_name":"main","timestamp":"2025-06-12 18:00:58,728","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.internal.AnnotatedColumn","message":"Binding column: DTYPE","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.internal.AnnotatedColumn.bind(AnnotatedColumn.java:278)\nCaller+1\t at org.hibernate.boot.model.internal.AnnotatedDiscriminatorColumn.buildDiscriminatorColumn(AnnotatedDiscriminatorColumn.java:91)\nCaller+2\t at org.hibernate.boot.model.internal.EntityBinder.processSingleTableDiscriminatorProperties(EntityBinder.java:947)\nCaller+3\t at org.hibernate.boot.model.internal.EntityBinder.singleTableInheritance(EntityBinder.java:810)\nCaller+4\t at org.hibernate.boot.model.internal.EntityBinder.handleInheritance(EntityBinder.java:790)\n","class":"org.hibernate.boot.model.internal.AnnotatedColumn","method":"bind","file":"AnnotatedColumn.java","line":"278","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.739162+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.internal.AnnotatedColumn","thread_name":"main","timestamp":"2025-06-12 18:00:58,739","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.internal.AnnotatedColumn","message":"Binding column: null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.internal.AnnotatedColumn.bind(AnnotatedColumn.java:278)\nCaller+1\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildImplicitColumn(AnnotatedColumn.java:1058)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsOrFormulaFromAnnotation(AnnotatedColumn.java:711)\nCaller+3\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsFromAnnotations(AnnotatedColumn.java:620)\nCaller+4\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnFromNoAnnotation(AnnotatedColumn.java:577)\n","class":"org.hibernate.boot.model.internal.AnnotatedColumn","method":"bind","file":"AnnotatedColumn.java","line":"278","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.744991+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,744","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (41caf676-a02d-490c-9666-6ed08e384739)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.74515+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,745","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@51c92e7e","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.745373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.mapping.BasicValue","thread_name":"main","timestamp":"2025-06-12 18:00:58,745","level":"DEBUG","thread":"main","logger":"org.hibernate.mapping.BasicValue","message":"Skipping column re-registration: todo.id","context":"","exception":"","caller":"Caller+0\t at org.hibernate.mapping.BasicValue.checkSelectable(BasicValue.java:292)\nCaller+1\t at org.hibernate.mapping.BasicValue.addColumn(BasicValue.java:306)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.linkWithValue(AnnotatedColumn.java:498)\nCaller+3\t at org.hibernate.boot.model.internal.BasicValueBinder.linkWithValue(BasicValueBinder.java:1261)\nCaller+4\t at org.hibernate.boot.model.internal.BasicValueBinder.make(BasicValueBinder.java:1235)\n","class":"org.hibernate.mapping.BasicValue","method":"checkSelectable","file":"BasicValue.java","line":"292","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.747914+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.internal.AnnotatedColumn","thread_name":"main","timestamp":"2025-06-12 18:00:58,747","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.internal.AnnotatedColumn","message":"Binding column: null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.internal.AnnotatedColumn.bind(AnnotatedColumn.java:278)\nCaller+1\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildImplicitColumn(AnnotatedColumn.java:1058)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsOrFormulaFromAnnotation(AnnotatedColumn.java:711)\nCaller+3\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsFromAnnotations(AnnotatedColumn.java:620)\nCaller+4\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnFromNoAnnotation(AnnotatedColumn.java:577)\n","class":"org.hibernate.boot.model.internal.AnnotatedColumn","method":"bind","file":"AnnotatedColumn.java","line":"278","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.748378+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.mapping.BasicValue","thread_name":"main","timestamp":"2025-06-12 18:00:58,748","level":"DEBUG","thread":"main","logger":"org.hibernate.mapping.BasicValue","message":"Skipping column re-registration: todo.completed","context":"","exception":"","caller":"Caller+0\t at org.hibernate.mapping.BasicValue.checkSelectable(BasicValue.java:292)\nCaller+1\t at org.hibernate.mapping.BasicValue.addColumn(BasicValue.java:306)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.linkWithValue(AnnotatedColumn.java:498)\nCaller+3\t at org.hibernate.boot.model.internal.BasicValueBinder.linkWithValue(BasicValueBinder.java:1261)\nCaller+4\t at org.hibernate.boot.model.internal.BasicValueBinder.make(BasicValueBinder.java:1235)\n","class":"org.hibernate.mapping.BasicValue","method":"checkSelectable","file":"BasicValue.java","line":"292","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.74859+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.internal.AnnotatedColumn","thread_name":"main","timestamp":"2025-06-12 18:00:58,748","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.internal.AnnotatedColumn","message":"Binding column: null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.internal.AnnotatedColumn.bind(AnnotatedColumn.java:278)\nCaller+1\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildImplicitColumn(AnnotatedColumn.java:1058)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsOrFormulaFromAnnotation(AnnotatedColumn.java:711)\nCaller+3\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsFromAnnotations(AnnotatedColumn.java:620)\nCaller+4\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnFromNoAnnotation(AnnotatedColumn.java:577)\n","class":"org.hibernate.boot.model.internal.AnnotatedColumn","method":"bind","file":"AnnotatedColumn.java","line":"278","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.748721+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.mapping.BasicValue","thread_name":"main","timestamp":"2025-06-12 18:00:58,748","level":"DEBUG","thread":"main","logger":"org.hibernate.mapping.BasicValue","message":"Skipping column re-registration: todo.title","context":"","exception":"","caller":"Caller+0\t at org.hibernate.mapping.BasicValue.checkSelectable(BasicValue.java:292)\nCaller+1\t at org.hibernate.mapping.BasicValue.addColumn(BasicValue.java:306)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.linkWithValue(AnnotatedColumn.java:498)\nCaller+3\t at org.hibernate.boot.model.internal.BasicValueBinder.linkWithValue(BasicValueBinder.java:1261)\nCaller+4\t at org.hibernate.boot.model.internal.BasicValueBinder.make(BasicValueBinder.java:1235)\n","class":"org.hibernate.mapping.BasicValue","method":"checkSelectable","file":"BasicValue.java","line":"292","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.74902+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.model.internal.AnnotatedColumn","thread_name":"main","timestamp":"2025-06-12 18:00:58,749","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.model.internal.AnnotatedColumn","message":"Binding column: null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.model.internal.AnnotatedColumn.bind(AnnotatedColumn.java:278)\nCaller+1\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildImplicitColumn(AnnotatedColumn.java:1058)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsOrFormulaFromAnnotation(AnnotatedColumn.java:711)\nCaller+3\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnsFromAnnotations(AnnotatedColumn.java:620)\nCaller+4\t at org.hibernate.boot.model.internal.AnnotatedColumn.buildColumnFromNoAnnotation(AnnotatedColumn.java:577)\n","class":"org.hibernate.boot.model.internal.AnnotatedColumn","method":"bind","file":"AnnotatedColumn.java","line":"278","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.74915+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.mapping.BasicValue","thread_name":"main","timestamp":"2025-06-12 18:00:58,749","level":"DEBUG","thread":"main","logger":"org.hibernate.mapping.BasicValue","message":"Skipping column re-registration: todo.user_id","context":"","exception":"","caller":"Caller+0\t at org.hibernate.mapping.BasicValue.checkSelectable(BasicValue.java:292)\nCaller+1\t at org.hibernate.mapping.BasicValue.addColumn(BasicValue.java:306)\nCaller+2\t at org.hibernate.boot.model.internal.AnnotatedColumn.linkWithValue(AnnotatedColumn.java:498)\nCaller+3\t at org.hibernate.boot.model.internal.BasicValueBinder.linkWithValue(BasicValueBinder.java:1261)\nCaller+4\t at org.hibernate.boot.model.internal.BasicValueBinder.make(BasicValueBinder.java:1235)\n","class":"org.hibernate.mapping.BasicValue","method":"checkSelectable","file":"BasicValue.java","line":"292","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.767753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.hibernate5.SpringBeanContainer","thread_name":"main","timestamp":"2025-06-12 18:00:58,767","level":"DEBUG","thread":"main","logger":"org.springframework.orm.hibernate5.SpringBeanContainer","message":"Falling back to Hibernate's default producer after bean creation failure for interface org.hibernate.context.spi.CurrentTenantIdentifierResolver: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.hibernate.context.spi.CurrentTenantIdentifierResolver<?>' available","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.hibernate5.SpringBeanContainer.createBean(SpringBeanContainer.java:157)\nCaller+1\t at org.springframework.orm.hibernate5.SpringBeanContainer.getBean(SpringBeanContainer.java:106)\nCaller+2\t at org.hibernate.resource.beans.internal.Helper.containedBean(Helper.java:66)\nCaller+3\t at org.hibernate.resource.beans.internal.Helper.getBean(Helper.java:56)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryOptionsBuilder.<init>(SessionFactoryOptionsBuilder.java:360)\n","class":"org.springframework.orm.hibernate5.SpringBeanContainer","method":"createBean","file":"SpringBeanContainer.java","line":"157","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.780259+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,780","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=2/10, idle=2/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.780405+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,780","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (f79ab604-7293-499b-ab80-bd68a2a054f9)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.788016+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.internal.SessionFactoryImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,788","level":"DEBUG","thread":"main","logger":"org.hibernate.internal.SessionFactoryImpl","message":"Building session factory","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:230)\nCaller+1\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1477)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.internal.SessionFactoryImpl","method":"<init>","file":"SessionFactoryImpl.java","line":"230","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.794827+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,794","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"Not known whether passed class name [com.ms.my_spring_boot_project.model.Todo] is safe","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:58)\nCaller+1\t at org.hibernate.mapping.MappingHelper.classForName(MappingHelper.java:115)\nCaller+2\t at org.hibernate.mapping.PersistentClass.getMappedClass(PersistentClass.java:168)\nCaller+3\t at org.hibernate.jpa.event.internal.CallbacksFactory.buildCallbackRegistry(CallbacksFactory.java:43)\nCaller+4\t at org.hibernate.event.spi.EventEngine.<init>(EventEngine.java:48)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"classForName","file":"ClassLoaderAccessImpl.java","line":"58","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.794958+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,794","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ms.my_spring_boot_project.model.Todo","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)\nCaller+1\t at org.hibernate.mapping.MappingHelper.classForName(MappingHelper.java:115)\nCaller+2\t at org.hibernate.mapping.PersistentClass.getMappedClass(PersistentClass.java:168)\nCaller+3\t at org.hibernate.jpa.event.internal.CallbacksFactory.buildCallbackRegistry(CallbacksFactory.java:43)\nCaller+4\t at org.hibernate.event.spi.EventEngine.<init>(EventEngine.java:48)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"classForName","file":"ClassLoaderAccessImpl.java","line":"60","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.802561+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,802","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (f79ab604-7293-499b-ab80-bd68a2a054f9)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.80269+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,802","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@10f42445","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.815265+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.service.internal.SessionFactoryServiceRegistryImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,815","level":"DEBUG","thread":"main","logger":"org.hibernate.service.internal.SessionFactoryServiceRegistryImpl","message":"EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead","context":"","exception":"","caller":"Caller+0\t at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:103)\nCaller+1\t at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:66)\nCaller+2\t at org.hibernate.boot.internal.MetadataImpl.initSessionFactory(MetadataImpl.java:496)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:238)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.service.internal.SessionFactoryServiceRegistryImpl","method":"getService","file":"SessionFactoryServiceRegistryImpl.java","line":"103","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.815804+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.internal.SessionFactoryImpl","thread_name":"main","timestamp":"2025-06-12 18:00:58,815","level":"DEBUG","thread":"main","logger":"org.hibernate.internal.SessionFactoryImpl","message":"HHH000030: Instantiating factory with settings: {java.specification.version=24, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1002c49e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main:/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/resources/main:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-tracing-bridge-brave/1.5.1/e1fe88c4567c8f9c8d18aa8d4bd82e471a2290d9/micrometer-tracing-bridge-brave-1.5.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-streams/4.0.0/36a07d764883d2f67602e6dc777272ad5942bf58/kafka-streams-4.0.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.kafka/spring-kafka/4.0.0-SNAPSHOT/2e9d6d07e26cb5ac33bccd07ab95a6aa63c21cc1/spring-kafka-4.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/dotenv-java/3.0.0/f535c5df8b98575eabb2820e548f5ba8a987fe69/dotenv-java-3.0.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-jpa/4.0.0-M3/8f7020df6a193d144a147daf3b5970d723c36f6f/spring-data-jpa-4.0.0-M3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-redis/4.0.0-M3/97cab3763be6d52d08463da1efbb6b848fedec68/spring-data-redis-4.0.0-M3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/4.0.0/883a768864948887d44f53f16ffac44dd952f003/kafka-clients-4.0.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.zaxxer/HikariCP/6.3.0/bebd113244c9d9926c6b792f28110ed6380cacc2/HikariCP-6.3.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-keyvalue/4.0.0-M3/3435c121aa2d210f595a6a64afc7b9c0999d120/spring-data-keyvalue-4.0.0-M3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.data/spring-data-commons/4.0.0-M3/735497a0c39c8153afc85909c6e79f9ea6a2b375/spring-data-commons-4.0.0-M3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.lettuce/lettuce-core/6.6.0.RELEASE/8a9bb7a3291328f4a0156643dddd3f1194bd26f3/lettuce-core-6.6.0.RELEASE.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/redis.clients.authentication/redis-authx-core/0.1.1-beta2/4037345ff29fb22c737bab2ed116a34262718ae5/redis-authx-core-0.1.1-beta2.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.5.18/fc371f3fc97a639de2d67947cffb7518ec5e3d40/logback-classic-1.5.18.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-to-slf4j/2.24.3/da1143e2a2531ee1c2d90baa98eb50a28a39d5a7/log4j-to-slf4j-2.24.3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.slf4j/jul-to-slf4j/2.0.17/524cb6ccc2b68a57604750e1ab8b13b5a786a6aa/jul-to-slf4j-2.0.17.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.17/d9e58ac9c7779ba3bf8142aff6c830617a7fe60f/slf4j-api-2.0.17.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/net.logstash.logback/logstash-logback-encoder/7.4/4573c7882277096adf58dd6485f38400b028aa93/logstash-logback-encoder-7.4.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.mysql/mysql-connector-j/9.2.0/cc7bed59ccee3c47554aeb89e37c24d95a74bec3/mysql-connector-j-9.2.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator-autoconfigure/4.0.0-SNAPSHOT/8f733c4423057f1d72b44b0485fbac47a86784b2/spring-boot-actuator-autoconfigure-4.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-jakarta9/1.15.1/767dc009dd6c41cc574013ebb006cddfe98e88e6/micrometer-jakarta9-1.15.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webmvc/7.0.0-SNAPSHOT/154b72575ab94c9e5b01aa76d5cb2b378ec02321/spring-webmvc-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-webflux/7.0.0-SNAPSHOT/3e653667ef03775461d0c5d2777be44aa6cd8fd3/spring-webflux-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-web/7.0.0-SNAPSHOT/c7c291fe9dcf3f659322008fd7b59d216ce82d94/spring-web-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-tracing/1.5.1/2744fb35f764478e06326441e33b2d436e477f65/micrometer-tracing-1.5.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-autoconfigure/4.0.0-SNAPSHOT/a5f0e5d6dcc270be3964b810bbd567bbdcfc7ced/spring-boot-autoconfigure-4.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot-actuator/4.0.0-SNAPSHOT/1a942b29a001aa17c284651b9974d3a732b1aeef/spring-boot-actuator-4.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.boot/spring-boot/4.0.0-SNAPSHOT/ec66f47d35fe6a7ffec7aa21b235fbe2ffbc2688/spring-boot-4.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context-support/7.0.0-SNAPSHOT/477b5c5f951db991ddd7c9587f104e5ec0f5686/spring-context-support-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-context/7.0.0-SNAPSHOT/32c082a7caacfc9725d3b1635323188afc103cf8/spring-context-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-core/1.15.1/52959bd15d21f9a9dd55ac59f0149b16c6d5a06e/micrometer-core-1.15.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-observation/1.15.1/3d0a62a46350707984e3600297cc8e08c4722399/micrometer-observation-1.15.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.hibernate.orm/hibernate-core/7.0.0.CR1/a731b98c2a9e6db92ad46f9e3f08add9ee9c74da/hibernate-core-7.0.0.CR1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aspects/7.0.0-SNAPSHOT/d643ec7a7e343a03ee5e29ae950f46b4a7c645a4/spring-aspects-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.zipkin.brave/brave-context-slf4j/6.1.0/eefcfa360464a1776a69e3f21719f9e0c1cfdaba/brave-context-slf4j-6.1.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.zipkin.brave/brave-instrumentation-http/6.1.0/acc098f6f21446c8f8750d942b003a8a67942b8b/brave-instrumentation-http-6.1.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.zipkin.aws/brave-propagation-aws/1.3.0/c34a1d6e21b7359aeb3f3be63b9042e2297d6598/brave-propagation-aws-1.3.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.zipkin.brave/brave/6.1.0/dee3c145aeed7e2618f32cfa76902257ec77eb31/brave-6.1.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.zipkin.contrib.brave-propagation-w3c/brave-propagation-tracecontext/0.2.0/bdc26787eb3bf99e7172b53df4e170e9a067b44/brave-propagation-tracecontext-0.2.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.19.0/69312135ff6d6646203b9681fa48505f369210a6/jackson-datatype-jdk8-2.19.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-parameter-names/2.19.0/4963234952362539ca73c85b6a423c851f04f1d/jackson-module-parameter-names-2.19.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.19.0/a90640e59ea42632a8e331ff1d6b706cf306050a/jackson-core-2.19.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.19.0/4c98a2fa8b35b5ffe102438f747f7b526619fde7/jackson-datatype-jsr310-2.19.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.19.0/b3f7506f6414fb04760561eec11a0880165c2a4a/jackson-databind-2.19.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.19.0/fd1e7c56de1e5b658563c8c66d5074cceb4e3a0b/jackson-annotations-2.19.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.rocksdb/rocksdbjni/9.7.3/6c49c721c49c64de8eb0d6db44951d2c697f522d/rocksdbjni-9.7.3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-messaging/7.0.0-SNAPSHOT/60a2f3750eb36f8de8173899a371084511f1fea/spring-messaging-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-orm/7.0.0-SNAPSHOT/8a51e2c93fcd2ec7f1fe9cf7882ed8d46ce37381/spring-orm-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-jdbc/7.0.0-SNAPSHOT/a05f8c6d24521c4ad8d01457614323e92f4a753d/spring-jdbc-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-tx/7.0.0-SNAPSHOT/abbc56b9c3286f44efa1f3f1869e3d6e47b28a06/spring-tx-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework.retry/spring-retry/2.0.12/62a14736086ffd6f382f0df3bf066a5a34f174fa/spring-retry-2.0.12.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/jakarta.annotation/jakarta.annotation-api/3.0.0/54f928fadec906a99d558536756d171917b9d936/jakarta.annotation-api-3.0.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-aop/7.0.0-SNAPSHOT/c29d4b9ec37c0051b276bb5d2e6a09b0662f9ef/spring-aop-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-oxm/7.0.0-SNAPSHOT/629f237c00073c5fa7100df13b1ce6ac41def045/spring-oxm-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-beans/7.0.0-SNAPSHOT/23fb465e2414859a9520f31c1aa4feb5b77cf977/spring-beans-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-expression/7.0.0-SNAPSHOT/db6e84b9101fdc82684e8f2bd749f68eb09e56b2/spring-expression-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.springframework/spring-core/7.0.0-SNAPSHOT/7f7f8c1430ee9ea85ceec7ea523f85cc9468fc7/spring-core-7.0.0-SNAPSHOT.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.yaml/snakeyaml/2.4/e0666b825b796f85521f02360e77f4c92c5a7a07/snakeyaml-2.4.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/micrometer-commons/1.15.1/43cbe2327f4e3f5cbfda6be64418c66b9b62f4ec/micrometer-commons-1.15.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/jakarta.persistence/jakarta.persistence-api/3.2.0/bb75a113f3fa191c2c7ee7b206d8e674251b3129/jakarta.persistence-api-3.2.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/jakarta.transaction/jakarta.transaction-api/2.0.1/51a520e3fae406abb84e2e1148e6746ce3f80a1a/jakarta.transaction-api-2.0.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.hibernate.models/hibernate-models/1.0.0.CR1/1ae7f6a03b66e2eb1a3e2578f7b65e11d5856ee3/hibernate-models-1.0.0.CR1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.6.1.Final/886afbb445b4016a37c8960a7aef6ebd769ce7e5/jboss-logging-3.6.1.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.fasterxml/classmate/1.7.0/e98374da1f2143ac8e6e0a95036994bb19137a3/classmate-1.7.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.17.5/88450f120903b7e72470462cdbd2b75a3842223c/byte-buddy-1.17.5.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/4.0.5/ca84c2a7169b5293e232b9d00d1e4e36d4c3914a/jaxb-runtime-4.0.5.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-core/4.0.5/7b4b11ea5542eea4ad55e1080b23be436795b3/jaxb-core-4.0.5.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/jakarta.xml.bind/jakarta.xml.bind-api/4.0.2/6cd5a999b834b63238005b7144136379dc36cad2/jakarta.xml.bind-api-4.0.2.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/jakarta.inject/jakarta.inject-api/2.0.1/4c28afe1991a941d7702fe1362c365f0a8641d1e/jakarta.inject-api-2.0.1.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.antlr/antlr4-runtime/4.13.2/fc3db6d844df652a3d5db31c87fa12757f13691d/antlr4-runtime-4.13.2.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.aspectj/aspectjweaver/1.9.24/9b5aeb0cea9f958b9c57fb80e62996e95a3e9379/aspectjweaver-1.9.24.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.projectreactor.netty/reactor-netty-http/1.2.7/583002ce7ab598ff463ff2673af6bddf2e31083b/reactor-netty-http-1.2.7.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-codec-http2/4.1.122.Final/8c46e27b09e9c05620868dd3612d341aff43de2b/netty-codec-http2-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.projectreactor.netty/reactor-netty-core/1.2.7/43515aa4b2f4bce7c431145e8c0a7bcc441e0532/reactor-netty-core-1.2.7.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-handler-proxy/4.1.122.Final/17f96704a7fd492e6c1692a25e9d2bea78f06d20/netty-handler-proxy-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-codec-http/4.1.122.Final/45ea4d1744023ef5aba0734bbe940904220616cf/netty-codec-http-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-resolver-dns-native-macos/4.1.122.Final/71de9ad9975e7d5d3b0490a89d5d00e66000403c/netty-resolver-dns-native-macos-4.1.122.Final-osx-x86_64.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-resolver-dns-classes-macos/4.1.122.Final/2aa5499129e01bc0b1f663ba512a55086d9444b9/netty-resolver-dns-classes-macos-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-resolver-dns/4.1.122.Final/42d8f33f4ba93d0be171b21c59af48b8701f5a93/netty-resolver-dns-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-handler/4.1.122.Final/6b5a56d02ec6c832c9bebcb7708768458323d0cc/netty-handler-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-transport-native-epoll/4.1.122.Final/236a1f77a06b1264fe61fca3183a09e9161378c8/netty-transport-native-epoll-4.1.122.Final-linux-x86_64.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-transport-classes-epoll/4.1.122.Final/4f0b6f66b8f46f1654a58ed79eed0a6b047f4255/netty-transport-classes-epoll-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-transport-native-unix-common/4.1.122.Final/27ce9402817d5578c6b14c31a02d781e3b4fa5b5/netty-transport-native-unix-common-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-codec-dns/4.1.122.Final/a1cfcdf6e5b207bfca8f97fa030c9a76fee6ca2e/netty-codec-dns-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-codec-socks/4.1.122.Final/2ca8fa8752482bc0fa8ed3334763da447b978123/netty-codec-socks-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-codec/4.1.122.Final/f2e092b0d225ae2984270df3005cbae165400f20/netty-codec-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-transport/4.1.122.Final/523b19bb713f6b78bdbecda850676ab0c19b07f2/netty-transport-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-resolver/4.1.122.Final/ee7672587266524b2256c0fcd1758da7c8998119/netty-resolver-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-buffer/4.1.122.Final/d5798d560039426a5c8c69fbe187c0f8cb6ec0ae/netty-buffer-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.netty/netty-common/4.1.122.Final/69c279440faa94ad5f5b498a73a90d209f821536/netty-common-4.1.122.Final.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.projectreactor/reactor-core/3.7.7/bee553bf17e911f6c20fe45caa890b9a3fd19c/reactor-core-3.7.7.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-websocket/11.0.7/8d94e2d16898b9835736d4a9fec55a00fd620641/tomcat-embed-websocket-11.0.7.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-core/11.0.7/8c646852041ee1e2bbad50cbf8ad0de67f1e7e5/tomcat-embed-core-11.0.7.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.tomcat.embed/tomcat-embed-el/11.0.7/70c73a2a1495aeb4b0a2d40fc1c0c34091b7debe/tomcat-embed-el-11.0.7.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/io.micrometer/context-propagation/1.1.3/19cea055eed20e80875705fcf9943ca8e978cf92/context-propagation-1.1.3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/aopalliance/aopalliance/1.0/235ba8b489512805ac13a8f9ea77a1ca5ebe3e8/aopalliance-1.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.github.luben/zstd-jni/1.5.6-6/2fbdb6597ff51efa4a5bf12df18f27b5aa4f2625/zstd-jni-1.5.6-6.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.lz4/lz4-java/1.8.0/4b986a99445e49ea5fbf5d149c4b63f6ed6c6780/lz4-java-1.8.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.1.10.5/ac605269f3598506196e469f1fb0d7ed5c55059e/snappy-java-1.1.10.5.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.3.5/a3fcc5d3c29b2b03433aa2d2f2d2c1b1638924a1/commons-logging-1.3.5.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.jspecify/jspecify/1.0.0/7425a601c1c7ec76645a78d22b8c6a627edee507/jspecify-1.0.0.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.2.2/7959933ebcc0f05b2eaa5af0a0c8689fa257b15c/HdrHistogram-2.2.2.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.latencyutils/LatencyUtils/2.0.3/769c0b82cb2421c8256300e907298a9410a2a3d3/LatencyUtils-2.0.3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.eclipse.angus/angus-activation/2.0.2/41f1e0ddd157c856926ed149ab837d110955a9fc/angus-activation-2.0.2.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/2.1.3/fa165bd70cda600368eee31555222776a46b881f/jakarta.activation-api-2.1.3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.reactivestreams/reactive-streams/1.0.4/3864a1320d97d7b045f729a326e1e077661f31b7/reactive-streams-1.0.4.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-core/1.5.18/6c0375624f6f36b4e089e2488ba21334a11ef13f/logback-core-1.5.18.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.24.3/b02c125db8b6d295adf72ae6e71af5d83bce2370/log4j-api-2.24.3.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/4.0.5/f36a4ef12120a9bb06d766d6a0e54b144fd7ed98/txw2-4.0.5.jar:/Users/mohit/.gradle/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/4.1.2/18ec117c85f3ba0ac65409136afa8e42bc74e739/istack-commons-runtime-4.1.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, catalina.useNaming=false, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, os.name=Mac OS X, java.vm.specification.version=24, APPLICATION_NAME=my-spring-boot-project, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), user.country=IN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/Users/mohit/Library/Java/JavaVirtualMachines/openjdk-24.0.1/Contents/Home/lib, sun.java.command=com.ms.my_spring_boot_project.MySpringBootProjectApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@62eb918, MYSQL_PASSWORD=springbootuser, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=/Users/mohit, MYSQL_USER=springbootuser, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-04-15, java.home=/Users/mohit/Library/Java/JavaVirtualMachines/openjdk-24.0.1/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=\n, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, apple.awt.application.name=MySpringBootProjectApplication, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=24.0.1+9-30, LOG_CORRELATION_PATTERN=%correlationId, user.name=mohit, stdout.encoding=UTF-8, path.separator=:, os.version=15.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/0r/q9tn8sws4ts8pyjpxf0r69bh0000gp/T/, catalina.home=/private/var/folders/0r/q9tn8sws4ts8pyjpxf0r69bh0000gp/T/tomcat.8080.12069372384490684182, java.version=24.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategySnakeCaseImpl, user.dir=/Users/mohit/Documents/Software-Development/my-spring-boot-project, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, PID=71210, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/0r/q9tn8sws4ts8pyjpxf0r69bh0000gp/T/tomcat.8080.12069372384490684182, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@21a462ce, native.encoding=UTF-8, java.library.path=/Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=24.0.1+9-30, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=68.0, LOGGED_APPLICATION_NAME=[my-spring-boot-project] }","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:249)\nCaller+1\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1477)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.internal.SessionFactoryImpl","method":"<init>","file":"SessionFactoryImpl.java","line":"249","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.836605+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,836","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=3/10, idle=3/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.836753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,836","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (5e803c1f-6712-4c0f-8a3c-f98506210519)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.843079+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,843","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.aggregates(CommonFunctionFactory.java:1985)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1066)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.843218+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,843","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.aggregates(CommonFunctionFactory.java:1992)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1066)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.843847+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,843","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.aggregates(CommonFunctionFactory.java:1998)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1066)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.844289+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,844","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.aggregates(CommonFunctionFactory.java:2005)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1066)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.845027+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,845","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@22195d06] under count; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.aggregates(CommonFunctionFactory.java:2007)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1066)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.845543+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,845","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@798753cc] under every; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.everyAny_sumCase(CommonFunctionFactory.java:1041)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1072)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.84563+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,845","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@77262e71] under any; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.everyAny_sumCase(CommonFunctionFactory.java:1043)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1072)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.845825+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,845","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2185)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.845906+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,845","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2192)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.845985+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,845","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2199)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846059+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2204)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846137+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2210)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846211+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2219)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846287+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2225)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.84636+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2231)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846435+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.math(CommonFunctionFactory.java:2237)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1084)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846625+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.round(CommonFunctionFactory.java:2263)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1085)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846702+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1481)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846775+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1487)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846848+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1493)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846921+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1499)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.846996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,846","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1505)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.847071+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,847","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1511)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.847149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,847","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trigonometry(CommonFunctionFactory.java:1517)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1089)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.847989+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,847","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ab29866] under sinh; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.sinh_exp(CommonFunctionFactory.java:243)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1094)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848077+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74cad577] under cosh; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.cosh_exp(CommonFunctionFactory.java:259)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1095)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848165+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@350ede1] under tanh; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.tanh_exp(CommonFunctionFactory.java:275)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1096)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848245+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bbaf1bc] under pi; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.pi_acos(CommonFunctionFactory.java:581)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1100)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848327+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65852d05] under log; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.log_ln(CommonFunctionFactory.java:127)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1104)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848514+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.coalesce(CommonFunctionFactory.java:1535)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1109)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.84859+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.nullif(CommonFunctionFactory.java:1553)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1113)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848666+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.leftRight(CommonFunctionFactory.java:764)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1117)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848739+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.leftRight(CommonFunctionFactory.java:770)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1117)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.848822+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,848","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.replace(CommonFunctionFactory.java:1827)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1118)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.849018+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.concat(CommonFunctionFactory.java:1851)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1119)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.849112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.lowerUpper(CommonFunctionFactory.java:1860)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1120)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.849233+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.lowerUpper(CommonFunctionFactory.java:1866)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1120)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.84933+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.substring(CommonFunctionFactory.java:1736)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1126)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.849416+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.locate(CommonFunctionFactory.java:1684)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1131)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.849497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.length_characterLength(CommonFunctionFactory.java:1564)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1135)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.849583+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,849","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : length -> character_length","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.length_characterLength(CommonFunctionFactory.java:1565)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1135)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.850008+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,850","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@28dd038f] under position; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1140)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85102+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,851","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@78d52d4c] under overlay; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1146)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85139+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,851","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1ae26c59] under trim; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1153)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.851918+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,851","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@69862a1] under cast; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1164)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.852028+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,852","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@585718dd] under collate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.collate(CommonFunctionFactory.java:2602)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1176)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.852563+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,852","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@467e7793] under extract; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1183)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.852667+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,852","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.leastGreatest(CommonFunctionFactory.java:1945)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1189)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.852759+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,852","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.leastGreatest(CommonFunctionFactory.java:1950)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1189)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.852954+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,852","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@969c2f9] under ifnull; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1194)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.853037+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,853","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.pad(CommonFunctionFactory.java:630)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1201)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.853118+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,853","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.pad(CommonFunctionFactory.java:636)\nCaller+3\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1201)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85336+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,853","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@71d8794f] under pad; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1205)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.853563+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,853","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3bede349] under str; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1211)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.853855+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,853","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.OrdinalFunction@1b1d93e9] under ordinal; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1216)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85487+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,854","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@276eafad] under format; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.format_toChar(CommonFunctionFactory.java:2572)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1223)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.855161+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,855","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@30bd6bc8] under timestampadd; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.timestampaddAndDiff(CommonFunctionFactory.java:2381)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1228)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.855561+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,855","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3b6c55b6] under timestampdiff; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.timestampaddAndDiff(CommonFunctionFactory.java:2391)\nCaller+2\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1228)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.855635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,855","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : dateadd -> timestampadd","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1229)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.855705+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,855","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : datediff -> timestampdiff","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1230)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.855885+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,855","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d03cdc7] under current_date; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1235)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85596+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,855","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59043128] under current_time; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1243)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856136+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@642334d6] under current_timestamp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1251)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : current date -> current_date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1259)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856294+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : current time -> current_time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1260)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856365+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : current timestamp -> current_timestamp","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1261)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856439+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f2b608e] under local_date; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1264)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85658+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c55e559] under local_time; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1272)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856658+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@420068a] under local_datetime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1280)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856734+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d8075c] under offset_datetime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1288)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856802+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : local date -> local_date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1296)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856869+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : local time -> local_time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1297)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.856936+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,856","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : local datetime -> local_datetime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1298)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : offset datetime -> offset_datetime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1299)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857097+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4d4337f9] under instant; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1301)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857164+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : current_instant -> instant","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1309)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857394+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@770c3ca2] under sql; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.Dialect.initializeFunctionRegistry(Dialect.java:1311)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:578)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.soundex(CommonFunctionFactory.java:591)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:582)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857549+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.radians(CommonFunctionFactory.java:197)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:583)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857621+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.degrees(CommonFunctionFactory.java:216)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:584)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857696+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.cot(CommonFunctionFactory.java:107)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:585)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857771+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65852d05","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.log(CommonFunctionFactory.java:118)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:586)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857858+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.log2(CommonFunctionFactory.java:189)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:587)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.857941+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,857","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.log10(CommonFunctionFactory.java:170)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:588)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858019+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trim2(CommonFunctionFactory.java:600)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:589)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.8581+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trim2(CommonFunctionFactory.java:606)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:589)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858184+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.octetLength(CommonFunctionFactory.java:1615)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:590)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858258+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.reverse(CommonFunctionFactory.java:729)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:591)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858335+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.space(CommonFunctionFactory.java:737)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:592)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858407+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.repeat(CommonFunctionFactory.java:746)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:593)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858697+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@659565ed] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerPatterns(SqmFunctionRegistry.java:569)\nCaller+2\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerBinaryTernaryPattern(SqmFunctionRegistry.java:477)\nCaller+3\t at org.hibernate.dialect.function.CommonFunctionFactory.pad_space(CommonFunctionFactory.java:643)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:594)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858802+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@481eb705] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerPatterns(SqmFunctionRegistry.java:569)\nCaller+2\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerBinaryTernaryPattern(SqmFunctionRegistry.java:477)\nCaller+3\t at org.hibernate.dialect.function.CommonFunctionFactory.pad_space(CommonFunctionFactory.java:651)\nCaller+4\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:594)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.858879+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.yearMonthDay(CommonFunctionFactory.java:1080)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:595)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85895+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,858","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.yearMonthDay(CommonFunctionFactory.java:1085)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:595)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.yearMonthDay(CommonFunctionFactory.java:1090)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:595)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859106+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.hourMinuteSecond(CommonFunctionFactory.java:1103)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:596)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859181+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.hourMinuteSecond(CommonFunctionFactory.java:1108)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:596)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859255+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.hourMinuteSecond(CommonFunctionFactory.java:1113)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:596)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859328+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.hourMinuteSecond(CommonFunctionFactory.java:1118)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:596)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859402+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.dayofweekmonthyear(CommonFunctionFactory.java:1126)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:597)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859471+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.dayofweekmonthyear(CommonFunctionFactory.java:1131)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:597)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859486+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (5e803c1f-6712-4c0f-8a3c-f98506210519)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859537+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : day -> dayofmonth","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.dayofweekmonthyear(CommonFunctionFactory.java:1132)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:597)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859588+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@21aeb786","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859608+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.dayofweekmonthyear(CommonFunctionFactory.java:1137)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:597)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859684+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.weekQuarter(CommonFunctionFactory.java:1177)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:598)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859754+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.weekQuarter(CommonFunctionFactory.java:1182)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:598)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859822+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.daynameMonthname(CommonFunctionFactory.java:1164)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:599)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.859891+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.daynameMonthname(CommonFunctionFactory.java:1169)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:599)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.85996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,859","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.lastDay(CommonFunctionFactory.java:1190)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:600)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860031+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.date(CommonFunctionFactory.java:1267)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:601)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860102+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.timestamp(CommonFunctionFactory.java:1251)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:602)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860191+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.time(MySQLDialect.java:763)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:603)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860263+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.utcDateTimeTimestamp(CommonFunctionFactory.java:1274)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:605)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860331+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.utcDateTimeTimestamp(CommonFunctionFactory.java:1278)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:605)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.8604+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.utcDateTimeTimestamp(CommonFunctionFactory.java:1282)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:605)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860471+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.rand(CommonFunctionFactory.java:368)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:606)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860541+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.crc32(CommonFunctionFactory.java:2326)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:607)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860612+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.sha1(CommonFunctionFactory.java:2359)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:608)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860682+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.sha2(CommonFunctionFactory.java:2368)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:609)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitLength(CommonFunctionFactory.java:1643)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:610)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.860821+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.octetLength(CommonFunctionFactory.java:1615)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:611)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.86089+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.ascii(CommonFunctionFactory.java:1880)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:612)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.86096+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,860","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.instr(CommonFunctionFactory.java:842)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:613)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.86103+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,861","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.substr(CommonFunctionFactory.java:851)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:614)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.861109+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,861","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ae0eb98] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@28dd038f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.position(CommonFunctionFactory.java:1675)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:616)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.86118+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,861","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.nowCurdateCurtime(CommonFunctionFactory.java:1929)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:617)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.861247+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,861","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.nowCurdateCurtime(CommonFunctionFactory.java:1933)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:617)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.861315+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,861","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.nowCurdateCurtime(CommonFunctionFactory.java:1937)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:617)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863183+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5432be12] under trunc; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.trunc(CommonFunctionFactory.java:304)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trunc_truncate(CommonFunctionFactory.java:331)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:618)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863266+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : truncate -> trunc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.trunc(CommonFunctionFactory.java:308)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.trunc_truncate(CommonFunctionFactory.java:331)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:618)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863341+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.insert(CommonFunctionFactory.java:1772)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:619)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863422+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ee5fe1e] under bitand; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitandorxornot_operator(CommonFunctionFactory.java:955)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:620)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863499+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b30b25f] under bitor; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitandorxornot_operator(CommonFunctionFactory.java:960)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:620)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863572+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58dea0a7] under bitxor; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitandorxornot_operator(CommonFunctionFactory.java:965)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:620)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863645+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@195d4780] under bitnot; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitandorxornot_operator(CommonFunctionFactory.java:970)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:620)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863716+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitAndOr(CommonFunctionFactory.java:980)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:621)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863784+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.bitAndOr(CommonFunctionFactory.java:985)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:621)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863854+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.stddev(CommonFunctionFactory.java:418)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:622)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.863925+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,863","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.stddevPopSamp(CommonFunctionFactory.java:441)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:623)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864001+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.stddevPopSamp(CommonFunctionFactory.java:446)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:623)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864074+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.variance(CommonFunctionFactory.java:433)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:624)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864144+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.varPopSamp(CommonFunctionFactory.java:454)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:625)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864216+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.varPopSamp(CommonFunctionFactory.java:459)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:625)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864297+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.datediff(CommonFunctionFactory.java:2412)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:626)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864369+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.adddateSubdateAddtimeSubtime(CommonFunctionFactory.java:2424)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:627)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864442+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.adddateSubdateAddtimeSubtime(CommonFunctionFactory.java:2430)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:627)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864512+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.adddateSubdateAddtimeSubtime(CommonFunctionFactory.java:2436)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:627)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864581+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.adddateSubdateAddtimeSubtime(CommonFunctionFactory.java:2442)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:627)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864658+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18c95fbb] under format; prior registration was org.hibernate.dialect.function.FormatFunction@276eafad","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.format_dateFormat(CommonFunctionFactory.java:2581)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:628)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864731+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.makedateMaketime(CommonFunctionFactory.java:1383)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:629)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864803+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.makedateMaketime(CommonFunctionFactory.java:1389)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:629)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864874+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.localtimeLocaltimestamp(CommonFunctionFactory.java:1459)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:630)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.864944+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,864","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.localtimeLocaltimestamp(CommonFunctionFactory.java:1463)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:630)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865021+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7c55e559","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.localtimeLocaltimestamp(CommonFunctionFactory.java:1469)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:630)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865098+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@420068a","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.localtimeLocaltimestamp(CommonFunctionFactory.java:1473)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:630)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865179+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36c5a4b7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bbaf1bc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:641)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865257+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1bb3e150] under chr; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:649)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865324+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registering alternate key : char -> chr","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.registerAlternateKey(SqmFunctionRegistry.java:392)\nCaller+1\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:650)\nCaller+2\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:303)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"registerAlternateKey","file":"SqmFunctionRegistry.java","line":"392","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865397+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6821d4e1] under sysdate; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.sysdateExplicitMicros(CommonFunctionFactory.java:1443)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:654)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865476+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.windowFunctions(CommonFunctionFactory.java:2134)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:656)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865676+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.windowFunctions(CommonFunctionFactory.java:2146)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:656)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865754+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.windowFunctions(CommonFunctionFactory.java:2158)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:656)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865825+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.windowFunctions(CommonFunctionFactory.java:2164)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:656)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865893+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.windowFunctions(CommonFunctionFactory.java:2170)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:656)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.865962+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,865","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.windowFunctions(CommonFunctionFactory.java:2176)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:656)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.866784+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,866","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@55f4ec04] under rank; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.hypotheticalOrderedSetAggregates_windowEmulation(CommonFunctionFactory.java:2112)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:658)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.866892+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,866","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@f3c27e9] under dense_rank; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.hypotheticalOrderedSetAggregates_windowEmulation(CommonFunctionFactory.java:2116)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:658)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.866971+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,866","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1fd4850b] under percent_rank; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.hypotheticalOrderedSetAggregates_windowEmulation(CommonFunctionFactory.java:2120)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:658)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.867048+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,867","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1db9d253] under cume_dist; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.hypotheticalOrderedSetAggregates_windowEmulation(CommonFunctionFactory.java:2124)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:658)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.867359+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,867","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@698daff6] under listagg; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.listagg_groupConcat(CommonFunctionFactory.java:2039)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:662)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.869949+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,869","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonValueFunction@2df7766b] under json_value; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonValue_mysql(CommonFunctionFactory.java:3361)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:664)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.871743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,871","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonQueryFunction@6195ce27] under json_query; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonQuery_mysql(CommonFunctionFactory.java:3424)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:665)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.873076+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,873","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonExistsFunction@5e97da56] under json_exists; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonExists_mysql(CommonFunctionFactory.java:3501)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:666)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.873622+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,873","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonObjectFunction@4830c979] under json_object; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonObject_mysql(CommonFunctionFactory.java:3557)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:667)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.873961+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,873","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonArrayFunction@2f650dae] under json_array; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonArray_mysql(CommonFunctionFactory.java:3613)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:668)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.874426+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,874","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonArrayAggFunction@e0c03bd] under json_arrayagg; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonArrayAgg_mysql(CommonFunctionFactory.java:3669)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:669)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.874863+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,874","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonObjectAggFunction@61c42e54] under json_objectagg; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonObjectAgg_mysql(CommonFunctionFactory.java:3718)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:670)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.874953+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,874","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_set)] under json_set; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonSet_mysql(CommonFunctionFactory.java:3770)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:671)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.875035+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,875","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_remove)] under json_remove; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonRemove_mysql(CommonFunctionFactory.java:3814)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:672)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.875114+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,875","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_replace)] under json_replace; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonReplace_mysql(CommonFunctionFactory.java:3852)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:673)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.87519+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,875","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_insert)] under json_insert; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonInsert_mysql(CommonFunctionFactory.java:3890)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:674)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.875266+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,875","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_merge_patch)] under json_mergepatch; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonMergepatch_mysql(CommonFunctionFactory.java:3927)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:675)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.875341+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,875","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_array_append)] under json_array_append; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonArrayAppend_mysql(CommonFunctionFactory.java:3958)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:676)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.875415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,875","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(json_array_insert)] under json_array_insert; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.NamedFunctionDescriptorBuilder.register(NamedFunctionDescriptorBuilder.java:98)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonArrayInsert_mysql(CommonFunctionFactory.java:4003)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:677)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.877003+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,877","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmSetReturningFunctionTemplate [org.hibernate.dialect.function.array.UnnestFunction@2c989d82] under unnest; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:143)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.unnest(CommonFunctionFactory.java:4200)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.unnest_emulated(CommonFunctionFactory.java:4208)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:680)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"143","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.878941+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,878","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmSetReturningFunctionTemplate [org.hibernate.dialect.function.json.MySQLJsonTableFunction@5825932c] under json_table; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:143)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.jsonTable_mysql(CommonFunctionFactory.java:4334)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:681)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"143","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.882056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,882","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmSetReturningFunctionTemplate [org.hibernate.dialect.function.CteGenerateSeriesFunction@78c91d2a] under generate_series; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:143)\nCaller+1\t at org.hibernate.dialect.function.CommonFunctionFactory.generateSeries_recursive(CommonFunctionFactory.java:4271)\nCaller+2\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:684)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"143","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88217+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,882","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b7d5eca] under hex; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.hex(CommonFunctionFactory.java:2334)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:687)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.882255+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,882","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52a3eba3] under sha; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.sha(CommonFunctionFactory.java:2350)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:688)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.882334+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.sqm.function.SqmFunctionRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:58,882","level":"DEBUG","thread":"main","logger":"org.hibernate.query.sqm.function.SqmFunctionRegistry","message":"Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ed74d03] under md5; prior registration was null","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.sqm.function.SqmFunctionRegistry.register(SqmFunctionRegistry.java:128)\nCaller+1\t at org.hibernate.query.sqm.produce.function.PatternFunctionDescriptorBuilder.register(PatternFunctionDescriptorBuilder.java:86)\nCaller+2\t at org.hibernate.dialect.function.CommonFunctionFactory.md5(CommonFunctionFactory.java:2342)\nCaller+3\t at org.hibernate.dialect.MySQLDialect.initializeFunctionRegistry(MySQLDialect.java:689)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:148)\n","class":"org.hibernate.query.sqm.function.SqmFunctionRegistry","method":"register","file":"SqmFunctionRegistry.java","line":"128","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883119+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"abs(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883262+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double acos(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"adddate(DATE datetime, INTEGER days)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883413+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"addtime(TIME datetime, TIME time)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883488+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Boolean any(BOOLEAN arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883561+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer ascii(STRING arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88363+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double asin(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883699+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double atan(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883798+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double atan2(NUMERIC arg0, NUMERIC arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883868+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"avg(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.883933+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,883","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"bit_and(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884005+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer bit_length(STRING_OR_CLOB arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884072+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"bit_or(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884142+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"bitand(arg0, arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884207+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"bitnot(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884271+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"bitor(arg0, arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884335+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"bitxor(arg0, arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884401+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"cast(arg as Type)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884469+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"ceiling(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884546+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Character char(INTEGER arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884615+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer character_length(STRING_OR_CLOB arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884684+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Character chr(INTEGER arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884755+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"coalesce(arg0[, arg1[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884821+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String collate(STRING string as COLLATION collation)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884885+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String concat(STRING string0[, STRING string1[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.884953+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,884","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double cos(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88502+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double cosh(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885091+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double cot(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885159+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Long count([distinct ]{arg|*})","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885224+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer crc32(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88529+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double cume_dist([arg0[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885356+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date curdate()","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885422+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date current date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885487+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Time current time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885553+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp current timestamp","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885617+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date current_date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885683+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Instant current_instant","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885746+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Time current_time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88581+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp current_timestamp","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885878+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Time curtime()","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.885942+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,885","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date date(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886009+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886076+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer datediff(DATE end, DATE start)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886143+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer day(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88621+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String dayname(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886278+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer dayofmonth(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer dayofweek(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886416+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer dayofyear(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886483+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double degrees(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886547+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Long dense_rank([arg0[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886614+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Boolean every(BOOLEAN arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88668+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double exp(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886746+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"extract(TEMPORAL_UNIT field from TEMPORAL arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886809+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"first_valueANY value","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886876+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"floor(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.886946+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,886","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String format(TEMPORAL datetime as STRING pattern)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88702+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887087+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String hex(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887156+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer hour(TIME arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887227+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"ifnull(arg0, arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887291+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887355+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Instant instant","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887418+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887483+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_array([arg0[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887558+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_array_append(IMPLICIT_JSON arg0, STRING arg1, ANY arg2)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887633+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_array_insert(IMPLICIT_JSON arg0, STRING arg1, ANY arg2)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887705+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_arrayagg(arg0[, arg1])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887777+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Boolean json_exists(IMPLICIT_JSON arg0, STRING arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887851+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_insert(IMPLICIT_JSON arg0, STRING arg1, ANY arg2)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887929+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_mergepatch(IMPLICIT_JSON arg0, IMPLICIT_JSON arg1[, arg2[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.887996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,887","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_object( ... )","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88806+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_objectagg(arg0, arg1[, arg2, arg3])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888126+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_query( ... )","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888197+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_remove(IMPLICIT_JSON arg0, STRING arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888274+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_replace(IMPLICIT_JSON arg0, STRING arg1, ANY arg2)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888353+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String json_set(IMPLICIT_JSON arg0, STRING arg1, ANY arg2)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888418+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"json_value( ... )","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888481+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"lagANY value[, INTEGER offset[, ANY default]]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888552+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date last_day(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888615+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"last_valueANY value","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888677+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"leadANY value[, INTEGER offset[, ANY default]]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888819+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String left(STRING string, INTEGER length)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88889+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer length(STRING_OR_CLOB arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.888962+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,888","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String listagg(STRING arg0, STRING arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88903+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double ln(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889099+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"LocalDate local date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889166+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"LocalDateTime local datetime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"LocalTime local time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889298+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"LocalDate local_date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889366+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"LocalDateTime local_datetime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889433+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"LocalTime local_time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889498+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Time localtime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889563+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp localtimestamp","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88963+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer locate(STRING pattern, STRING string[, INTEGER start])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889711+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double log(NUMERIC arg0[, NUMERIC arg1])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889781+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double log10(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889851+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double log2(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.889915+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String lower(STRING string)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.88998+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,889","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String lpad(string, length[, padding])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890046+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String ltrim(STRING string[, STRING characters])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890113+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date makedate(INTEGER year, INTEGER dayofyear)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Time maketime(INTEGER hour, INTEGER min, INTEGER sec)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890246+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"max(COMPARABLE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890316+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"byte[] md5(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890384+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer microsecond(TIME arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.89045+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"min(COMPARABLE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890518+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer minute(TIME arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890588+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer mod(INTEGER arg0, INTEGER arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890656+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer month(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890721+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String monthname(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp now()","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890856+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"nth_valueANY value, INTEGER nth","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890924+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"nullif(arg0, arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.890997+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,890","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer octet_length(STRING_OR_CLOB arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891062+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"OffsetDateTime offset datetime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891128+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"OffsetDateTime offset_datetime","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891194+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer ordinal(ENUM arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891261+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891329+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891393+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double percent_rank([arg0[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891457+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double pi","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891538+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer position(STRING pattern in STRING string)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891608+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double power(NUMERIC arg0, NUMERIC arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891673+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer quarter(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.89174+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double radians(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891804+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double rand([INTEGER seed])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891868+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Long rank([arg0[, ...]])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891931+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String repeat(STRING string, INTEGER times)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.891993+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,891","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String replace(STRING string, STRING pattern, STRING replacement)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String reverse(STRING arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892123+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String right(STRING string, INTEGER length)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892186+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"round(NUMERIC number[, INTEGER places])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892249+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Long row_number()","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String rpad(string, length[, padding])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892376+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String rtrim(STRING string[, STRING characters])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892441+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer second(TIME arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892504+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"byte[] sha(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892567+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String sha1(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892632+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String sha2(arg0, arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892703+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer sign(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892768+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double sin(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892833+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double sinh(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.892896+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String soundex(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.89296+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,892","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String space(INTEGER arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893026+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Object sql","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893094+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double sqrt(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893159+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double stddev(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893224+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double stddev_pop(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893289+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double stddev_samp(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893352+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String str(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893414+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"subdate(DATE datetime, INTEGER days)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893476+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String substr(STRING string, INTEGER start[, INTEGER length])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893541+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893604+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"subtime(TIME datetime, TIME time)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893666+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"sum(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893729+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp sysdate()","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893794+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double tan(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893859+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double tanh(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893922+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String time(arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.893986+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,893","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp timestamp(arg0[, arg1])","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894048+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894153+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894219+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894285+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"trunc( ... )","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"truncate( ... )","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894409+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"String upper(STRING string)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894472+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Date utc_date","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894534+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Time utc_time","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Timestamp utc_timestamp","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894663+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double var_pop(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894679+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=4/10, idle=4/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894729+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double var_samp(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894796+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Double variance(NUMERIC arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894798+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (25dd9bf3-1427-4be0-be4e-0b31cbefa50f)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894861+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer week(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.894926+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.HQL_FUNCTIONS","thread_name":"main","timestamp":"2025-06-12 18:00:58,894","level":"DEBUG","thread":"main","logger":"org.hibernate.HQL_FUNCTIONS","message":"Integer year(DATE arg)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryEngineImpl.lambda$createFunctionRegistry$0(QueryEngineImpl.java:152)\nCaller+1\t at java.base/java.util.TreeMap$EntrySpliterator.forEachRemaining(TreeMap.java:3323)\nCaller+2\t at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:807)\nCaller+3\t at org.hibernate.query.internal.QueryEngineImpl.createFunctionRegistry(QueryEngineImpl.java:152)\nCaller+4\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:78)\n","class":"org.hibernate.query.internal.QueryEngineImpl","method":"lambda$createFunctionRegistry$0","file":"QueryEngineImpl.java","line":"152","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.899269+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.query.plan.cache","thread_name":"main","timestamp":"2025-06-12 18:00:58,899","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.query.plan.cache","message":"Starting QueryInterpretationCache(2048)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.<init>(QueryInterpretationCacheStandardImpl.java:49)\nCaller+1\t at org.hibernate.query.internal.QueryEngineImpl.buildInterpretationCache(QueryEngineImpl.java:189)\nCaller+2\t at org.hibernate.query.internal.QueryEngineImpl.<init>(QueryEngineImpl.java:81)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:303)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.query.internal.QueryInterpretationCacheStandardImpl","method":"<init>","file":"QueryInterpretationCacheStandardImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.925785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,925","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (25dd9bf3-1427-4be0-be4e-0b31cbefa50f)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.926042+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,926","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f2815ea","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.960521+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,960","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=5/10, idle=5/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.960989+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,960","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (48193848-bb27-4325-9508-67cf5a86fb75)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.979313+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,979","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (48193848-bb27-4325-9508-67cf5a86fb75)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:58.979572+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:58,979","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74954778","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.013525+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,013","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=6/10, idle=6/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.01374+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,013","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (11203dbf-79e5-4902-8e25-8c85fdf8dcaa)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.016954+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 18:00:59,016","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"Not known whether passed class name [com.ms.my_spring_boot_project.model.Todo] is safe","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:58)\nCaller+1\t at org.hibernate.mapping.MappingHelper.classForName(MappingHelper.java:115)\nCaller+2\t at org.hibernate.mapping.PersistentClass.getProxyInterface(PersistentClass.java:183)\nCaller+3\t at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:427)\nCaller+4\t at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:153)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"classForName","file":"ClassLoaderAccessImpl.java","line":"58","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.017121+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"main","timestamp":"2025-06-12 18:00:59,017","level":"DEBUG","thread":"main","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ms.my_spring_boot_project.model.Todo","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)\nCaller+1\t at org.hibernate.mapping.MappingHelper.classForName(MappingHelper.java:115)\nCaller+2\t at org.hibernate.mapping.PersistentClass.getProxyInterface(PersistentClass.java:183)\nCaller+3\t at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:427)\nCaller+4\t at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:153)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"classForName","file":"ClassLoaderAccessImpl.java","line":"60","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.028819+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,028","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (11203dbf-79e5-4902-8e25-8c85fdf8dcaa)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.028996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,028","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1434bbd1","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.064092+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,064","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=7/10, idle=7/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.064275+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,064","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (6e024d62-5c63-4dd3-af2c-6262e180dd13)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.08697+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,086","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (6e024d62-5c63-4dd3-af2c-6262e180dd13)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.087126+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,087","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5645a8b4","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.104023+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl","thread_name":"main","timestamp":"2025-06-12 18:00:59,104","level":"DEBUG","thread":"main","logger":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl","message":"HHH000513: Unable to create the ReflectionOptimizer for [com.ms.my_spring_boot_project.model.Todo]: private accessor [completed]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)\nCaller+1\t at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:300)\nCaller+2\t at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:144)\nCaller+3\t at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:48)\nCaller+4\t at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:519)\n","class":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl","method":"getReflectionOptimizer","file":"BytecodeProviderImpl.java","line":"232","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.118829+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,118","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=8/10, idle=8/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.118999+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,118","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (64ee4511-cced-4e8a-b130-9cdacf4ef170)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.130256+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.model.mapping.creation","thread_name":"main","timestamp":"2025-06-12 18:00:59,130","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.model.mapping.creation","message":"Starting post-init callbacks","context":"","exception":"","caller":"Caller+0\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:102)\nCaller+1\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:98)\nCaller+2\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:43)\nCaller+3\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:175)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)\n","class":"org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess","method":"executePostInitCallbacks","file":"MappingModelCreationProcess.java","line":"102","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.130405+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.model.mapping.creation","thread_name":"main","timestamp":"2025-06-12 18:00:59,130","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.model.mapping.creation","message":"Starting PostInitCallbackEntry : Entity(com.ms.my_spring_boot_project.model.Todo) `staticFetchableList` generator","context":"","exception":"","caller":"Caller+0\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry.process(MappingModelCreationProcess.java:252)\nCaller+1\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.executePostInitCallbacks(MappingModelCreationProcess.java:116)\nCaller+2\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.execute(MappingModelCreationProcess.java:98)\nCaller+3\t at org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess.process(MappingModelCreationProcess.java:43)\nCaller+4\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:175)\n","class":"org.hibernate.metamodel.mapping.internal.MappingModelCreationProcess$PostInitCallbackEntry","method":"process","file":"MappingModelCreationProcess.java","line":"252","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.14175+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,141","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (64ee4511-cced-4e8a-b130-9cdacf4ef170)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.141885+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,141","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@104eeb4a","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.172+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,172","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=9/10, idle=9/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.172214+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,172","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (3c5f44b5-6720-4f72-bbe1-68ab104b128a)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.180113+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.sql.ast.create","thread_name":"main","timestamp":"2025-06-12 18:00:59,180","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.sql.ast.create","message":"Created new SQL alias : t1_0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.sql.ast.spi.SqlAliasBaseImpl.generateNewAlias(SqlAliasBaseImpl.java:30)\nCaller+1\t at org.hibernate.persister.entity.AbstractEntityPersister.createRootTableGroup(AbstractEntityPersister.java:2754)\nCaller+2\t at org.hibernate.loader.ast.internal.LoaderSelectBuilder.buildRootTableGroup(LoaderSelectBuilder.java:566)\nCaller+3\t at org.hibernate.loader.ast.internal.LoaderSelectBuilder.generateSelect(LoaderSelectBuilder.java:484)\nCaller+4\t at org.hibernate.loader.ast.internal.LoaderSelectBuilder.createSelect(LoaderSelectBuilder.java:253)\n","class":"org.hibernate.sql.ast.spi.SqlAliasBaseImpl","method":"generateNewAlias","file":"SqlAliasBaseImpl.java","line":"30","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.181599+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.sql.ast.create","thread_name":"main","timestamp":"2025-06-12 18:00:59,181","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.sql.ast.create","message":"Registration of TableGroup [StandardTableGroup(com.ms.my_spring_boot_project.model.Todo)] with identifierForTableGroup [com.ms.my_spring_boot_project.model.Todo] for NavigablePath [com.ms.my_spring_boot_project.model.Todo] ","context":"","exception":"","caller":"Caller+0\t at org.hibernate.sql.ast.spi.SimpleFromClauseAccessImpl.registerTableGroup(SimpleFromClauseAccessImpl.java:121)\nCaller+1\t at org.hibernate.loader.ast.internal.LoaderSelectBuilder.buildRootTableGroup(LoaderSelectBuilder.java:576)\nCaller+2\t at org.hibernate.loader.ast.internal.LoaderSelectBuilder.generateSelect(LoaderSelectBuilder.java:484)\nCaller+3\t at org.hibernate.loader.ast.internal.LoaderSelectBuilder.createSelect(LoaderSelectBuilder.java:253)\nCaller+4\t at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.createLoadPlan(SingleIdEntityLoaderStandardImpl.java:148)\n","class":"org.hibernate.sql.ast.spi.SimpleFromClauseAccessImpl","method":"registerTableGroup","file":"SimpleFromClauseAccessImpl.java","line":"121","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.190942+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.results.graph.AST","thread_name":"main","timestamp":"2025-06-12 18:00:59,190","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.results.graph.AST","message":"DomainResult Graph:\n \\-EntityResultImpl [com.ms.my_spring_boot_project.model.Todo]\n |  +-BasicFetch [com.ms.my_spring_boot_project.model.Todo.completed]\n |  +-BasicFetch [com.ms.my_spring_boot_project.model.Todo.title]\n |  \\-BasicFetch [com.ms.my_spring_boot_project.model.Todo.userId]\n","context":"","exception":"","caller":"Caller+0\t at org.hibernate.sql.results.graph.DomainResultGraphPrinter.visitDomainResults(DomainResultGraphPrinter.java:67)\nCaller+1\t at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:46)\nCaller+2\t at org.hibernate.sql.results.graph.DomainResultGraphPrinter.logDomainResultGraph(DomainResultGraphPrinter.java:37)\nCaller+3\t at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:830)\nCaller+4\t at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.getJdbcOperation(AbstractSqlAstTranslator.java:775)\n","class":"org.hibernate.sql.results.graph.DomainResultGraphPrinter","method":"visitDomainResults","file":"DomainResultGraphPrinter.java","line":"67","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.191811+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,191","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Established new connection (3c5f44b5-6720-4f72-bbe1-68ab104b128a)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:378)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:747)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"378","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.191948+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,191","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f2628c1","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:751)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+2\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n","class":"com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator","method":"call","file":"HikariPool.java","line":"751","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.19256+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.sql.ast.tree","thread_name":"main","timestamp":"2025-06-12 18:00:59,192","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.sql.ast.tree","message":"SQL AST Tree:\n    SelectStatement {\n      FromClause {\n        StandardTableGroup (t1 : com.ms.my_spring_boot_project.model.Todo) {\n          primaryTableReference : todo as t1_0\n        }\n      }\n    }\n","context":"","exception":"","caller":"Caller+0\t at org.hibernate.sql.ast.SqlTreePrinter.logSqlAst(SqlTreePrinter.java:43)\nCaller+1\t at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translateSelect(AbstractSqlAstTranslator.java:831)\nCaller+2\t at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.getJdbcOperation(AbstractSqlAstTranslator.java:775)\nCaller+3\t at org.hibernate.sql.ast.spi.AbstractSqlAstTranslator.translate(AbstractSqlAstTranslator.java:754)\nCaller+4\t at org.hibernate.loader.ast.internal.SingleIdLoadPlan.<init>(SingleIdLoadPlan.java:64)\n","class":"org.hibernate.sql.ast.SqlTreePrinter","method":"logSqlAst","file":"SqlTreePrinter.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.197424+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.persister.entity.AbstractEntityPersister","thread_name":"main","timestamp":"2025-06-12 18:00:59,197","level":"DEBUG","thread":"main","logger":"org.hibernate.persister.entity.AbstractEntityPersister","message":"Static SQL for entity: com.ms.my_spring_boot_project.model.Todo","context":"","exception":"","caller":"Caller+0\t at org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2682)\nCaller+1\t at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3131)\nCaller+2\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:183)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.persister.entity.AbstractEntityPersister","method":"logStaticSQL","file":"AbstractEntityPersister.java","line":"2682","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.197521+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.persister.entity.AbstractEntityPersister","thread_name":"main","timestamp":"2025-06-12 18:00:59,197","level":"DEBUG","thread":"main","logger":"org.hibernate.persister.entity.AbstractEntityPersister","message":" Version select: select id from todo where id=?","context":"","exception":"","caller":"Caller+0\t at org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2687)\nCaller+1\t at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3131)\nCaller+2\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:183)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.persister.entity.AbstractEntityPersister","method":"logStaticSQL","file":"AbstractEntityPersister.java","line":"2687","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.197613+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.persister.entity.AbstractEntityPersister","thread_name":"main","timestamp":"2025-06-12 18:00:59,197","level":"DEBUG","thread":"main","logger":"org.hibernate.persister.entity.AbstractEntityPersister","message":" Insert (0): insert into todo (completed,title,user_id,id) values (?,?,?,?)","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:393)\nCaller+1\t at org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2696)\nCaller+2\t at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3131)\nCaller+3\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:183)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)\n","class":"org.jboss.logging.DelegatingBasicLogger","method":"debugf","file":"DelegatingBasicLogger.java","line":"393","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.19769+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.persister.entity.AbstractEntityPersister","thread_name":"main","timestamp":"2025-06-12 18:00:59,197","level":"DEBUG","thread":"main","logger":"org.hibernate.persister.entity.AbstractEntityPersister","message":" Update (0): update todo set completed=?,title=?,user_id=? where id=?","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:393)\nCaller+1\t at org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2708)\nCaller+2\t at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3131)\nCaller+3\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:183)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)\n","class":"org.jboss.logging.DelegatingBasicLogger","method":"debugf","file":"DelegatingBasicLogger.java","line":"393","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.197764+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.persister.entity.AbstractEntityPersister","thread_name":"main","timestamp":"2025-06-12 18:00:59,197","level":"DEBUG","thread":"main","logger":"org.hibernate.persister.entity.AbstractEntityPersister","message":" Delete (0): delete from todo where id=?","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:393)\nCaller+1\t at org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2720)\nCaller+2\t at org.hibernate.persister.entity.AbstractEntityPersister.prepareLoaders(AbstractEntityPersister.java:3131)\nCaller+3\t at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:183)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)\n","class":"org.jboss.logging.DelegatingBasicLogger","method":"debugf","file":"DelegatingBasicLogger.java","line":"393","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.216305+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:59,216","level":"INFO","thread":"main","logger":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:58)\nCaller+1\t at org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:27)\nCaller+2\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","class":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","method":"initiateService","file":"JtaPlatformInitiator.java","line":"58","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.217053+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.event.internal.EntityCopyObserverFactoryInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:59,217","level":"DEBUG","thread":"main","logger":"org.hibernate.event.internal.EntityCopyObserverFactoryInitiator","message":"Configured EntityCopyObserver strategy: disallow","context":"","exception":"","caller":"Caller+0\t at org.hibernate.event.internal.EntityCopyObserverFactoryInitiator.initiateService(EntityCopyObserverFactoryInitiator.java:37)\nCaller+1\t at org.hibernate.event.internal.EntityCopyObserverFactoryInitiator.initiateService(EntityCopyObserverFactoryInitiator.java:27)\nCaller+2\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","class":"org.hibernate.event.internal.EntityCopyObserverFactoryInitiator","method":"initiateService","file":"EntityCopyObserverFactoryInitiator.java","line":"37","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.219851+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.service.internal.SessionFactoryServiceRegistryImpl","thread_name":"main","timestamp":"2025-06-12 18:00:59,219","level":"DEBUG","thread":"main","logger":"org.hibernate.service.internal.SessionFactoryServiceRegistryImpl","message":"EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead","context":"","exception":"","caller":"Caller+0\t at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:103)\nCaller+1\t at org.hibernate.service.ServiceRegistry.requireService(ServiceRegistry.java:66)\nCaller+2\t at org.hibernate.event.service.spi.EventListenerGroups.<init>(EventListenerGroups.java:100)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:341)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.service.internal.SessionFactoryServiceRegistryImpl","method":"getService","file":"SessionFactoryServiceRegistryImpl.java","line":"103","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.220033+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.spi.TypeConfiguration$Scope","thread_name":"main","timestamp":"2025-06-12 18:00:59,220","level":"DEBUG","thread":"main","logger":"org.hibernate.type.spi.TypeConfiguration$Scope","message":"Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@74ed7111] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@373c367]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:208)\nCaller+1\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:348)\nCaller+2\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1477)\nCaller+4\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n","class":"org.hibernate.type.spi.TypeConfiguration","method":"scope","file":"TypeConfiguration.java","line":"208","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.220548+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.named.NamedObjectRepository","thread_name":"main","timestamp":"2025-06-12 18:00:59,220","level":"DEBUG","thread":"main","logger":"org.hibernate.query.named.NamedObjectRepository","message":"Checking 0 named HQL queries","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.NamedObjectRepositoryImpl.checkNamedQueries(NamedObjectRepositoryImpl.java:324)\nCaller+1\t at org.hibernate.query.internal.NamedObjectRepositoryImpl.validateNamedQueries(NamedObjectRepositoryImpl.java:300)\nCaller+2\t at org.hibernate.query.internal.QueryEngineImpl.validateNamedQueries(QueryEngineImpl.java:199)\nCaller+3\t at org.hibernate.boot.internal.SessionFactoryObserverForNamedQueryValidation.sessionFactoryCreated(SessionFactoryObserverForNamedQueryValidation.java:37)\nCaller+4\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:33)\n","class":"org.hibernate.query.internal.NamedObjectRepositoryImpl","method":"checkNamedQueries","file":"NamedObjectRepositoryImpl.java","line":"324","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.220632+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.query.named.NamedObjectRepository","thread_name":"main","timestamp":"2025-06-12 18:00:59,220","level":"DEBUG","thread":"main","logger":"org.hibernate.query.named.NamedObjectRepository","message":"Checking 0 named SQL queries","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.NamedObjectRepositoryImpl.checkNamedQueries(NamedObjectRepositoryImpl.java:348)\nCaller+1\t at org.hibernate.query.internal.NamedObjectRepositoryImpl.validateNamedQueries(NamedObjectRepositoryImpl.java:300)\nCaller+2\t at org.hibernate.query.internal.QueryEngineImpl.validateNamedQueries(QueryEngineImpl.java:199)\nCaller+3\t at org.hibernate.boot.internal.SessionFactoryObserverForNamedQueryValidation.sessionFactoryCreated(SessionFactoryObserverForNamedQueryValidation.java:37)\nCaller+4\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:33)\n","class":"org.hibernate.query.internal.NamedObjectRepositoryImpl","method":"checkNamedQueries","file":"NamedObjectRepositoryImpl.java","line":"348","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.226771+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1:connection-adder","timestamp":"2025-06-12 18:00:59,226","level":"DEBUG","thread":"HikariPool-1:connection-adder","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After adding stats (total=10/10, idle=10/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:764)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:726)\nCaller+3\t at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)\nCaller+4\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.258607+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.mapping.Table","thread_name":"main","timestamp":"2025-06-12 18:00:59,258","level":"DEBUG","thread":"main","logger":"org.hibernate.mapping.Table","message":"No alter strings for table : todo","context":"","exception":"","caller":"Caller+0\t at org.hibernate.tool.schema.internal.StandardTableMigrator.sqlAlterStrings(StandardTableMigrator.java:106)\nCaller+1\t at org.hibernate.tool.schema.internal.StandardTableMigrator.getSqlAlterStrings(StandardTableMigrator.java:58)\nCaller+2\t at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:334)\nCaller+3\t at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:82)\nCaller+4\t at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:230)\n","class":"org.hibernate.tool.schema.internal.StandardTableMigrator","method":"sqlAlterStrings","file":"StandardTableMigrator.java","line":"106","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.260175+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.factoryRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:59,260","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.factoryRegistry","message":"Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@521e34d4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)\nCaller+1\t at org.hibernate.internal.SessionFactoryRegistry.<clinit>(SessionFactoryRegistry.java:38)\nCaller+2\t at org.hibernate.boot.internal.SessionFactoryObserverForRegistration.sessionFactoryCreated(SessionFactoryObserverForRegistration.java:30)\nCaller+3\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:33)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:350)\n","class":"org.hibernate.internal.SessionFactoryRegistry","method":"<init>","file":"SessionFactoryRegistry.java","line":"51","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.260281+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.factoryRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:59,260","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.factoryRegistry","message":"HHH020384: Registering SessionFactory: 94649d94-864a-49a0-938a-38c8256fb12b (default)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)\nCaller+1\t at org.hibernate.boot.internal.SessionFactoryObserverForRegistration.sessionFactoryCreated(SessionFactoryObserverForRegistration.java:30)\nCaller+2\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:33)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:350)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.internal.SessionFactoryRegistry","method":"addSessionFactory","file":"SessionFactoryRegistry.java","line":"73","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.260362+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.factoryRegistry","thread_name":"main","timestamp":"2025-06-12 18:00:59,260","level":"DEBUG","thread":"main","logger":"org.hibernate.orm.factoryRegistry","message":"HHH020385: Not binding SessionFactory to JNDI, no JNDI name configured","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)\nCaller+1\t at org.hibernate.boot.internal.SessionFactoryObserverForRegistration.sessionFactoryCreated(SessionFactoryObserverForRegistration.java:30)\nCaller+2\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:33)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:350)\nCaller+4\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\n","class":"org.hibernate.internal.SessionFactoryRegistry","method":"addSessionFactory","file":"SessionFactoryRegistry.java","line":"80","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.260441+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.internal.SessionFactoryImpl","thread_name":"main","timestamp":"2025-06-12 18:00:59,260","level":"DEBUG","thread":"main","logger":"org.hibernate.internal.SessionFactoryImpl","message":"Instantiated factory","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:364)\nCaller+1\t at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:430)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1477)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.internal.SessionFactoryImpl","method":"<init>","file":"SessionFactoryImpl.java","line":"364","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.260553+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","timestamp":"2025-06-12 18:00:59,260","level":"INFO","thread":"main","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:428)\nCaller+1\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\nCaller+2\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n","class":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean","method":"buildNativeEntityManagerFactory","file":"AbstractEntityManagerFactoryBean.java","line":"428","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.26497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,264","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mySpringBootProjectApplication'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.265445+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,265","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webClientConfig'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.266251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,266","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'todoController'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.268363+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,268","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'todoService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.268598+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,268","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webClient'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.287688+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.logging.InternalLoggerFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,287","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.logging.InternalLoggerFactory","message":"Using SLF4J as the default logging framework","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.logging.InternalLoggerFactory.useSlf4JLoggerFactory(InternalLoggerFactory.java:63)\nCaller+1\t at io.netty.util.internal.logging.InternalLoggerFactory.newDefaultFactory(InternalLoggerFactory.java:42)\nCaller+2\t at io.netty.util.internal.logging.InternalLoggerFactory.getDefaultFactory(InternalLoggerFactory.java:111)\nCaller+3\t at io.netty.util.internal.logging.InternalLoggerFactory.getInstance(InternalLoggerFactory.java:134)\nCaller+4\t at io.netty.util.internal.logging.InternalLoggerFactory.getInstance(InternalLoggerFactory.java:127)\n","class":"io.netty.util.internal.logging.InternalLoggerFactory","method":"useSlf4JLoggerFactory","file":"InternalLoggerFactory.java","line":"63","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.288831+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,288","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"Java version: 24","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.javaVersion0(PlatformDependent0.java:1142)\nCaller+1\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:50)\nCaller+2\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+3\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+4\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\n","class":"io.netty.util.internal.PlatformDependent0","method":"javaVersion0","file":"PlatformDependent0.java","line":"1142","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.288948+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,288","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"-Dio.netty.noUnsafe: false","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.explicitNoUnsafeCause0(PlatformDependent0.java:620)\nCaller+1\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:52)\nCaller+2\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+3\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+4\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\n","class":"io.netty.util.internal.PlatformDependent0","method":"explicitNoUnsafeCause0","file":"PlatformDependent0.java","line":"620","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.289923+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,289","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"sun.misc.Unsafe.theUnsafe: available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:145)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.29121+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,291","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"sun.misc.Unsafe base methods: all available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:208)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"208","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.291415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,291","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"sun.misc.Unsafe.storeFence: available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:240)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"240","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.291635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,291","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"java.nio.Buffer.address: available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:283)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"283","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.291873+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,291","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"direct buffer constructor: unavailable: Reflective setAccessible(true) disabled","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:369)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"369","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.292197+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,292","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"java.nio.Bits.unaligned: available, true","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:447)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"447","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.292763+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,292","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @475e586c","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:515)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"515","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.293724+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent0","thread_name":"main","timestamp":"2025-06-12 18:00:59,293","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent0","message":"java.nio.DirectByteBuffer.<init>(long, {int,long}): unavailable","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent0.<clinit>(PlatformDependent0.java:545)\nCaller+1\t at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:336)\nCaller+2\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:90)\nCaller+3\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+4\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent0","method":"<clinit>","file":"PlatformDependent0.java","line":"545","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.293825+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,293","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"sun.misc.Unsafe: available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.unsafeUnavailabilityCause0(PlatformDependent.java:1214)\nCaller+1\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:92)\nCaller+2\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+3\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+4\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent","method":"unsafeUnavailabilityCause0","file":"PlatformDependent.java","line":"1214","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.29396+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,293","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"-Dio.netty.tmpdir: /var/folders/0r/q9tn8sws4ts8pyjpxf0r69bh0000gp/T (java.io.tmpdir)","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.tmpdir0(PlatformDependent.java:1360)\nCaller+1\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:103)\nCaller+2\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+3\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+4\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent","method":"tmpdir0","file":"PlatformDependent.java","line":"1360","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.294053+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,294","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"-Dio.netty.bitMode: 64 (sun.arch.data.model)","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.bitMode0(PlatformDependent.java:1439)\nCaller+1\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:105)\nCaller+2\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+3\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+4\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent","method":"bitMode0","file":"PlatformDependent.java","line":"1439","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.294257+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,294","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"Platform: MacOS","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.isOsx0(PlatformDependent.java:1182)\nCaller+1\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:114)\nCaller+2\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+3\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+4\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\n","class":"io.netty.util.internal.PlatformDependent","method":"isOsx0","file":"PlatformDependent.java","line":"1182","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.294554+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,294","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"-Dio.netty.maxDirectMemory: -1 bytes","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:181)\nCaller+1\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+2\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+3\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\nCaller+4\t at org.springframework.http.client.reactive.ReactorClientHttpConnector.<clinit>(ReactorClientHttpConnector.java:60)\n","class":"io.netty.util.internal.PlatformDependent","method":"<clinit>","file":"PlatformDependent.java","line":"181","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.294644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,294","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"-Dio.netty.uninitializedArrayAllocationThreshold: -1","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:188)\nCaller+1\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+2\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+3\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\nCaller+4\t at org.springframework.http.client.reactive.ReactorClientHttpConnector.<clinit>(ReactorClientHttpConnector.java:60)\n","class":"io.netty.util.internal.PlatformDependent","method":"<clinit>","file":"PlatformDependent.java","line":"188","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.295141+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.CleanerJava9","thread_name":"main","timestamp":"2025-06-12 18:00:59,295","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.CleanerJava9","message":"java.nio.ByteBuffer.cleaner(): available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.CleanerJava9.<clinit>(CleanerJava9.java:71)\nCaller+1\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:196)\nCaller+2\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+3\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+4\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\n","class":"io.netty.util.internal.CleanerJava9","method":"<clinit>","file":"CleanerJava9.java","line":"71","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.295242+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,295","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"-Dio.netty.noPreferDirect: false","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent.<clinit>(PlatformDependent.java:209)\nCaller+1\t at io.netty.util.ConstantPool.<init>(ConstantPool.java:34)\nCaller+2\t at io.netty.util.AttributeKey$1.<init>(AttributeKey.java:27)\nCaller+3\t at io.netty.util.AttributeKey.<clinit>(AttributeKey.java:27)\nCaller+4\t at org.springframework.http.client.reactive.ReactorClientHttpConnector.<clinit>(ReactorClientHttpConnector.java:60)\n","class":"io.netty.util.internal.PlatformDependent","method":"<clinit>","file":"PlatformDependent.java","line":"209","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.300522+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"reactor.util.Loggers","thread_name":"main","timestamp":"2025-06-12 18:00:59,300","level":"DEBUG","thread":"main","logger":"reactor.util.Loggers","message":"Using Slf4j logging framework","context":"","exception":"","caller":"Caller+0\t at reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:254)\nCaller+1\t at reactor.util.Loggers.useSl4jLoggers(Loggers.java:176)\nCaller+2\t at reactor.util.Loggers.resetLoggerFactory(Loggers.java:72)\nCaller+3\t at reactor.util.Loggers.<clinit>(Loggers.java:56)\nCaller+4\t at reactor.netty.transport.Transport.<clinit>(Transport.java:390)\n","class":"reactor.util.Loggers$Slf4JLogger","method":"debug","file":"Loggers.java","line":"254","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.323609+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.InternalThreadLocalMap","thread_name":"main","timestamp":"2025-06-12 18:00:59,323","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.InternalThreadLocalMap","message":"-Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:100)\nCaller+1\t at io.netty.util.internal.TypeParameterMatcher.find(TypeParameterMatcher.java:57)\nCaller+2\t at io.netty.handler.codec.MessageToMessageDecoder.<init>(MessageToMessageDecoder.java:62)\nCaller+3\t at io.netty.handler.codec.MessageToMessageCodec$1.<init>(MessageToMessageCodec.java:57)\nCaller+4\t at io.netty.handler.codec.MessageToMessageCodec.<init>(MessageToMessageCodec.java:57)\n","class":"io.netty.util.internal.InternalThreadLocalMap","method":"<clinit>","file":"InternalThreadLocalMap.java","line":"100","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.323779+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.InternalThreadLocalMap","thread_name":"main","timestamp":"2025-06-12 18:00:59,323","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.InternalThreadLocalMap","message":"-Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.InternalThreadLocalMap.<clinit>(InternalThreadLocalMap.java:101)\nCaller+1\t at io.netty.util.internal.TypeParameterMatcher.find(TypeParameterMatcher.java:57)\nCaller+2\t at io.netty.handler.codec.MessageToMessageDecoder.<init>(MessageToMessageDecoder.java:62)\nCaller+3\t at io.netty.handler.codec.MessageToMessageCodec$1.<init>(MessageToMessageCodec.java:57)\nCaller+4\t at io.netty.handler.codec.MessageToMessageCodec.<init>(MessageToMessageCodec.java:57)\n","class":"io.netty.util.internal.InternalThreadLocalMap","method":"<clinit>","file":"InternalThreadLocalMap.java","line":"101","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.339811+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.ResourceLeakDetector","thread_name":"main","timestamp":"2025-06-12 18:00:59,339","level":"DEBUG","thread":"main","logger":"io.netty.util.ResourceLeakDetector","message":"-Dio.netty.leakDetection.level: simple","context":"","exception":"","caller":"Caller+0\t at io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:129)\nCaller+1\t at io.netty.buffer.AbstractByteBufAllocator.<clinit>(AbstractByteBufAllocator.java:37)\nCaller+2\t at io.netty.buffer.Unpooled.<clinit>(Unpooled.java:75)\nCaller+3\t at reactor.netty.ReactorNetty.<clinit>(ReactorNetty.java:1050)\nCaller+4\t at reactor.netty.ChannelPipelineConfigurer.emptyConfigurer(ChannelPipelineConfigurer.java:40)\n","class":"io.netty.util.ResourceLeakDetector","method":"<clinit>","file":"ResourceLeakDetector.java","line":"129","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.339938+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.ResourceLeakDetector","thread_name":"main","timestamp":"2025-06-12 18:00:59,339","level":"DEBUG","thread":"main","logger":"io.netty.util.ResourceLeakDetector","message":"-Dio.netty.leakDetection.targetRecords: 4","context":"","exception":"","caller":"Caller+0\t at io.netty.util.ResourceLeakDetector.<clinit>(ResourceLeakDetector.java:130)\nCaller+1\t at io.netty.buffer.AbstractByteBufAllocator.<clinit>(AbstractByteBufAllocator.java:37)\nCaller+2\t at io.netty.buffer.Unpooled.<clinit>(Unpooled.java:75)\nCaller+3\t at reactor.netty.ReactorNetty.<clinit>(ReactorNetty.java:1050)\nCaller+4\t at reactor.netty.ChannelPipelineConfigurer.emptyConfigurer(ChannelPipelineConfigurer.java:40)\n","class":"io.netty.util.ResourceLeakDetector","method":"<clinit>","file":"ResourceLeakDetector.java","line":"130","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.35088+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.handler.codec.compression.Brotli","thread_name":"main","timestamp":"2025-06-12 18:00:59,350","level":"DEBUG","thread":"main","logger":"io.netty.handler.codec.compression.Brotli","message":"brotli4j not in the classpath; Brotli support will be unavailable.","context":"","exception":"","caller":"Caller+0\t at io.netty.handler.codec.compression.Brotli.<clinit>(Brotli.java:38)\nCaller+1\t at reactor.netty.http.client.HttpClient.compress(HttpClient.java:540)\nCaller+2\t at org.springframework.http.client.reactive.ReactorClientHttpConnector.lambda$static$0(ReactorClientHttpConnector.java:64)\nCaller+3\t at org.springframework.http.client.reactive.ReactorClientHttpConnector.<init>(ReactorClientHttpConnector.java:83)\nCaller+4\t at org.springframework.web.reactive.function.client.DefaultWebClientBuilder.initConnector(DefaultWebClientBuilder.java:329)\n","class":"io.netty.handler.codec.compression.Brotli","method":"<clinit>","file":"Brotli.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.388641+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,388","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'todoRepository'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.394445+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,394","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpa.named-queries#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.396101+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,396","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpa.TodoRepository.fragments#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.398542+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,398","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpaSharedEM_entityManagerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.457187+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,457","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpaMappingContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.45785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean","thread_name":"main","timestamp":"2025-06-12 18:00:59,457","level":"DEBUG","thread":"main","logger":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean","message":"Initializing JpaMetamodelMappingContext…","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:66)\nCaller+1\t at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:1)\nCaller+2\t at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:138)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n","class":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean","method":"createInstance","file":"JpaMetamodelMappingContextFactoryBean.java","line":"66","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.466786+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean","thread_name":"main","timestamp":"2025-06-12 18:00:59,466","level":"DEBUG","thread":"main","logger":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean","message":"Finished initializing JpaMetamodelMappingContext","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:73)\nCaller+1\t at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:1)\nCaller+2\t at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:138)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n","class":"org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean","method":"createInstance","file":"JpaMetamodelMappingContextFactoryBean.java","line":"73","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.481064+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactories","thread_name":"main","timestamp":"2025-06-12 18:00:59,481","level":"INFO","thread":"main","logger":"org.springframework.data.jpa.repository.query.QueryEnhancerFactories","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.jpa.repository.query.QueryEnhancerFactories.<clinit>(QueryEnhancerFactories.java:48)\nCaller+1\t at org.springframework.data.jpa.repository.query.QueryEnhancerSelector$DefaultQueryEnhancerSelector.<clinit>(QueryEnhancerSelector.java:55)\nCaller+2\t at org.springframework.data.jpa.repository.query.QueryEnhancerSelector.<clinit>(QueryEnhancerSelector.java:34)\nCaller+3\t at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.<init>(JpaRepositoryFactory.java:80)\nCaller+4\t at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.createRepositoryFactory(JpaRepositoryFactoryBean.java:191)\n","class":"org.springframework.data.jpa.repository.query.QueryEnhancerFactories","method":"<clinit>","file":"QueryEnhancerFactories.java","line":"48","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.484401+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","thread_name":"main","timestamp":"2025-06-12 18:00:59,484","level":"DEBUG","thread":"main","logger":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","message":"Creating new EntityManager for shared EntityManager invocation","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)\nCaller+1\t at jdk.proxy2/jdk.proxy2.$Proxy141.getDelegate(Unknown Source)\nCaller+2\t at org.springframework.data.jpa.provider.PersistenceProvider.fromEntityManager(PersistenceProvider.java:300)\nCaller+3\t at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.<init>(JpaRepositoryFactory.java:94)\nCaller+4\t at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.createRepositoryFactory(JpaRepositoryFactoryBean.java:191)\n","class":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","method":"invoke","file":"SharedEntityManagerCreator.java","line":"308","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.499511+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.stat.internal.StatisticsInitiator","thread_name":"main","timestamp":"2025-06-12 18:00:59,499","level":"DEBUG","thread":"main","logger":"org.hibernate.stat.internal.StatisticsInitiator","message":"Statistics initialized [enabled=false]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.stat.internal.StatisticsInitiator.initiateService(StatisticsInitiator.java:47)\nCaller+1\t at org.hibernate.stat.internal.StatisticsInitiator.initiateService(StatisticsInitiator.java:28)\nCaller+2\t at org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.initiateService(SessionFactoryServiceRegistryImpl.java:75)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","class":"org.hibernate.stat.internal.StatisticsInitiator","method":"initiateService","file":"StatisticsInitiator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.509197+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.session.metrics","thread_name":"main","timestamp":"2025-06-12 18:00:59,509","level":"DEBUG","thread":"main","logger":"org.hibernate.session.metrics","message":"HHH000401: Logging session metrics:\n\t0 ns acquiring 0 JDBC connections\n\t0 ns releasing 0 JDBC connections\n\t0 ns preparing 0 JDBC statements\n\t0 ns executing 0 JDBC statements\n\t0 ns executing 0 JDBC batches\n\t0 ns performing 0 second-level cache puts\n\t0 ns performing 0 second-level cache hits\n\t0 ns performing 0 second-level cache misses\n\t0 ns executing 0 flushes (flushing a total of 0 entities and 0 collections)\n\t0 ns executing 0 pre-partial-flushes\n\t0 ns executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)\n","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.end(StatisticalLoggingSessionEventListener.java:279)\nCaller+1\t at org.hibernate.engine.internal.SessionEventListenerManagerImpl.end(SessionEventListenerManagerImpl.java:309)\nCaller+2\t at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:472)\nCaller+3\t at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:463)\nCaller+4\t at org.hibernate.internal.SessionImpl.close(SessionImpl.java:445)\n","class":"org.hibernate.engine.internal.StatisticalLoggingSessionEventListener","method":"end","file":"StatisticalLoggingSessionEventListener.java","line":"279","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.509518+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","thread_name":"main","timestamp":"2025-06-12 18:00:59,509","level":"DEBUG","thread":"main","logger":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","message":"Aborting batches as part of ResourceRegistryStandardImpl#releaseResources","context":"","exception":"","caller":"Caller+0\t at org.hibernate.resource.jdbc.spi.JdbcEventHandler.jdbcReleaseRegistryResourcesStart(JdbcEventHandler.java:127)\nCaller+1\t at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:329)\nCaller+2\t at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:252)\nCaller+3\t at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:156)\nCaller+4\t at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:481)\n","class":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","method":"jdbcReleaseRegistryResourcesStart","file":"JdbcEventHandler.java","line":"127","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.509907+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","thread_name":"main","timestamp":"2025-06-12 18:00:59,509","level":"DEBUG","thread":"main","logger":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","message":"Creating new EntityManager for shared EntityManager invocation","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)\nCaller+1\t at jdk.proxy2/jdk.proxy2.$Proxy141.getDelegate(Unknown Source)\nCaller+2\t at org.springframework.data.jpa.provider.JpaClassUtils.isEntityManagerOfType(JpaClassUtils.java:51)\nCaller+3\t at org.springframework.data.jpa.provider.PersistenceProvider.fromEntityManager(PersistenceProvider.java:309)\nCaller+4\t at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.<init>(JpaRepositoryFactory.java:94)\n","class":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","method":"invoke","file":"SharedEntityManagerCreator.java","line":"308","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.510117+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.session.metrics","thread_name":"main","timestamp":"2025-06-12 18:00:59,510","level":"DEBUG","thread":"main","logger":"org.hibernate.session.metrics","message":"HHH000401: Logging session metrics:\n\t0 ns acquiring 0 JDBC connections\n\t0 ns releasing 0 JDBC connections\n\t0 ns preparing 0 JDBC statements\n\t0 ns executing 0 JDBC statements\n\t0 ns executing 0 JDBC batches\n\t0 ns performing 0 second-level cache puts\n\t0 ns performing 0 second-level cache hits\n\t0 ns performing 0 second-level cache misses\n\t0 ns executing 0 flushes (flushing a total of 0 entities and 0 collections)\n\t0 ns executing 0 pre-partial-flushes\n\t0 ns executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)\n","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.end(StatisticalLoggingSessionEventListener.java:279)\nCaller+1\t at org.hibernate.engine.internal.SessionEventListenerManagerImpl.end(SessionEventListenerManagerImpl.java:309)\nCaller+2\t at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:472)\nCaller+3\t at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:463)\nCaller+4\t at org.hibernate.internal.SessionImpl.close(SessionImpl.java:445)\n","class":"org.hibernate.engine.internal.StatisticalLoggingSessionEventListener","method":"end","file":"StatisticalLoggingSessionEventListener.java","line":"279","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.510261+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","thread_name":"main","timestamp":"2025-06-12 18:00:59,510","level":"DEBUG","thread":"main","logger":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","message":"Aborting batches as part of ResourceRegistryStandardImpl#releaseResources","context":"","exception":"","caller":"Caller+0\t at org.hibernate.resource.jdbc.spi.JdbcEventHandler.jdbcReleaseRegistryResourcesStart(JdbcEventHandler.java:127)\nCaller+1\t at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:329)\nCaller+2\t at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:252)\nCaller+3\t at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:156)\nCaller+4\t at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:481)\n","class":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","method":"jdbcReleaseRegistryResourcesStart","file":"JdbcEventHandler.java","line":"127","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.517169+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,517","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsRepositoryMethodInvocationListener'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getObject(DefaultListableBeanFactory.java:2444)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.517311+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,517","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.517773+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,517","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration' via constructor to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.518431+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,518","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'repositoryTagsProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.519361+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,519","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'metricsRepositoryMethodInvocationListener' via factory method to bean named 'repositoryTagsProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.535462+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.core.support.RepositoryFactorySupport","thread_name":"main","timestamp":"2025-06-12 18:00:59,535","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Initializing repository instance for com.ms.my_spring_boot_project.repository.TodoRepository…","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:315)\nCaller+1\t at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$1(RepositoryFactoryBeanSupport.java:351)\nCaller+2\t at org.springframework.data.util.Lazy.getNullable(Lazy.java:136)\nCaller+3\t at org.springframework.data.util.Lazy.get(Lazy.java:114)\nCaller+4\t at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:360)\n","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","method":"getRepository","file":"RepositoryFactorySupport.java","line":"315","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.541684+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","thread_name":"main","timestamp":"2025-06-12 18:00:59,541","level":"DEBUG","thread":"main","logger":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","message":"Creating new EntityManager for shared EntityManager invocation","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)\nCaller+1\t at jdk.proxy2/jdk.proxy2.$Proxy141.getDelegate(Unknown Source)\nCaller+2\t at org.springframework.data.jpa.provider.PersistenceProvider.fromEntityManager(PersistenceProvider.java:300)\nCaller+3\t at org.springframework.data.jpa.repository.support.SimpleJpaRepository.<init>(SimpleJpaRepository.java:139)\nCaller+4\t at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n","class":"org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler","method":"invoke","file":"SharedEntityManagerCreator.java","line":"308","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.541908+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.session.metrics","thread_name":"main","timestamp":"2025-06-12 18:00:59,541","level":"DEBUG","thread":"main","logger":"org.hibernate.session.metrics","message":"HHH000401: Logging session metrics:\n\t0 ns acquiring 0 JDBC connections\n\t0 ns releasing 0 JDBC connections\n\t0 ns preparing 0 JDBC statements\n\t0 ns executing 0 JDBC statements\n\t0 ns executing 0 JDBC batches\n\t0 ns performing 0 second-level cache puts\n\t0 ns performing 0 second-level cache hits\n\t0 ns performing 0 second-level cache misses\n\t0 ns executing 0 flushes (flushing a total of 0 entities and 0 collections)\n\t0 ns executing 0 pre-partial-flushes\n\t0 ns executing 0 partial-flushes (flushing a total of 0 entities and 0 collections)\n","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.internal.StatisticalLoggingSessionEventListener.end(StatisticalLoggingSessionEventListener.java:279)\nCaller+1\t at org.hibernate.engine.internal.SessionEventListenerManagerImpl.end(SessionEventListenerManagerImpl.java:309)\nCaller+2\t at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:472)\nCaller+3\t at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:463)\nCaller+4\t at org.hibernate.internal.SessionImpl.close(SessionImpl.java:445)\n","class":"org.hibernate.engine.internal.StatisticalLoggingSessionEventListener","method":"end","file":"StatisticalLoggingSessionEventListener.java","line":"279","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.542027+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","thread_name":"main","timestamp":"2025-06-12 18:00:59,542","level":"DEBUG","thread":"main","logger":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","message":"Aborting batches as part of ResourceRegistryStandardImpl#releaseResources","context":"","exception":"","caller":"Caller+0\t at org.hibernate.resource.jdbc.spi.JdbcEventHandler.jdbcReleaseRegistryResourcesStart(JdbcEventHandler.java:127)\nCaller+1\t at org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:329)\nCaller+2\t at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:252)\nCaller+3\t at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:156)\nCaller+4\t at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:481)\n","class":"org.hibernate.resource.jdbc.spi.JdbcEventHandler","method":"jdbcReleaseRegistryResourcesStart","file":"JdbcEventHandler.java","line":"127","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.554008+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.core.support.RepositoryFactorySupport","thread_name":"main","timestamp":"2025-06-12 18:00:59,554","level":"DEBUG","thread":"main","logger":"org.springframework.data.repository.core.support.RepositoryFactorySupport","message":"Finished creation of repository instance for com.ms.my_spring_boot_project.repository.TodoRepository.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:429)\nCaller+1\t at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$1(RepositoryFactoryBeanSupport.java:351)\nCaller+2\t at org.springframework.data.util.Lazy.getNullable(Lazy.java:136)\nCaller+3\t at org.springframework.data.util.Lazy.get(Lazy.java:114)\nCaller+4\t at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:360)\n","class":"org.springframework.data.repository.core.support.RepositoryFactorySupport","method":"getRepository","file":"RepositoryFactorySupport.java","line":"429","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.559772+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,559","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'todoService' via constructor to bean named 'webClient'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.559876+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,559","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'todoService' via constructor to bean named 'todoRepository'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.560192+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,560","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'todoController' via constructor to bean named 'todoService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.560809+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,560","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'logGenerator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.561494+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"main","timestamp":"2025-06-12 18:00:59,561","level":"INFO","thread":"main","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"LogGenerator initialized! If you see this, the bean is active and scheduled tasks should run.","context":"","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.<init>(LogGenerator.java:28)\nCaller+1\t at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\nCaller+2\t at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\nCaller+3\t at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\nCaller+4\t at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:196)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"<init>","file":"LogGenerator.java","line":"28","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.564939+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,564","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.565232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,565","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.565949+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,565","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.566221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,566","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.566465+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,566","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.566675+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,566","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.567176+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,567","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.568487+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,568","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.569223+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,569","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'parameterNamesModule'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.lambda$resolveMultipleBeans$0(DefaultListableBeanFactory.java:1752)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.569345+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,569","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.571135+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,571","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jsonMixinModule'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.lambda$resolveMultipleBeans$0(DefaultListableBeanFactory.java:1752)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.571245+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,571","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.571936+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,571","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jsonMixinModuleEntries'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.57207+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,572","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jsonMixinModuleEntries' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.573924+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,573","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.574018+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,574","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jsonMixinModule' via factory method to bean named 'jsonMixinModuleEntries'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.57498+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,574","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jsonComponentModule'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.lambda$resolveMultipleBeans$0(DefaultListableBeanFactory.java:1752)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.575085+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,575","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.578691+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,578","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jacksonGeoModule'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.lambda$resolveMultipleBeans$0(DefaultListableBeanFactory.java:1752)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.578795+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,578","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.57962+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,579","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'springDataWebSettings'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.579733+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,579","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.580096+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,580","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.580571+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,580","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.583268+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,583","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'pageModule'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.lambda$resolveMultipleBeans$0(DefaultListableBeanFactory.java:1752)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.584787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,584","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.585087+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,585","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.585319+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,585","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jacksonObjectMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.586112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,586","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.586199+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,586","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.587461+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,587","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.596669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,596","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.596907+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,596","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'defaultCodecCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.597247+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,597","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.597985+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,597","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.http.codecs-org.springframework.boot.autoconfigure.http.codec.HttpCodecsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.598473+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,598","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'defaultCodecCustomizer' via factory method to bean named 'spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.598555+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,598","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'defaultCodecCustomizer' via factory method to bean named 'spring.http.codecs-org.springframework.boot.autoconfigure.http.codec.HttpCodecsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.598627+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,598","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'defaultCodecCustomizer' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.599437+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,599","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.599681+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,599","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jacksonCodecCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.600011+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,600","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jacksonCodecCustomizer' via factory method to bean named 'jacksonObjectMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.600332+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,600","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.600546+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,600","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.601006+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,601","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration' via constructor to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.601432+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,601","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleAsyncTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.602639+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,602","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.602892+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,602","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'applicationTaskExecutorAsyncConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.603322+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,603","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'applicationTaskExecutorAsyncConfigurer' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.603981+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,603","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.604204+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,604","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.604513+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,604","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.605201+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,605","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'error'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.605514+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,605","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'beanNameViewResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.606474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,606","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.606981+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,606","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.60958+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,609","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.61023+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,610","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.61072+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,610","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'conventionErrorViewResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.612677+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,612","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'errorAttributes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.61382+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,613","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'basicErrorController'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.614034+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,614","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.617723+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,617","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.618769+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,618","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.618875+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,618","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.618952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,618","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.622493+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,622","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.622852+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,622","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.622948+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,622","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.623042+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,623","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.625264+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,625","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.62537+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,625","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.625726+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,625","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.626232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,626","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.626374+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","timestamp":"2025-06-12 18:00:59,626","level":"WARN","thread":"main","logger":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:258)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:154)\nCaller+4\t at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:71)\n","class":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","method":"openEntityManagerInViewInterceptor","file":"JpaBaseConfiguration.java","line":"258","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.627805+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,627","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.628594+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,628","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.629173+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,629","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.630466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,630","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'endpointObjectMapperWebMvcConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.63063+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,630","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'endpointObjectMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.630725+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,630","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.63139+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,631","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'endpointObjectMapperWebMvcConfigurer' via factory method to bean named 'endpointObjectMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.634805+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,634","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'welcomePageHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.634993+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,634","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.641669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,641","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.643217+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,643","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.643323+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,643","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.643398+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,643","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.65148+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,651","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'welcomePageNotAcceptableHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.651739+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,651","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.651822+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,651","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.651892+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,651","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'welcomePageNotAcceptableHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.655101+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,655","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'localeResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.655737+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,655","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'flashMapManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.657352+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,657","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'viewNameTranslator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.657904+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,657","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcValidator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.658439+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,658","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'requestMappingHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.658974+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,658","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcContentNegotiationManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.66088+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,660","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcApiVersionStrategy'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.661548+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,661","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.661631+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,661","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcApiVersionStrategy'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.661701+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,661","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.661771+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,661","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.677871+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"_org.springframework.web.servlet.HandlerMapping.Mappings","thread_name":"main","timestamp":"2025-06-12 18:00:59,677","level":"DEBUG","thread":"main","logger":"_org.springframework.web.servlet.HandlerMapping.Mappings","message":"\n\tc.m.m.c.TodoController:\n\t{GET [/todos]}: getTodos()\n\t{GET [/todos/{id}]}: getTodoById(int)\n\t{POST [/todos/save]}: saveTodoById(int)\n\t{POST [/todos/saveRange]}: saveTodosInRange(int,int)","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:290)\nCaller+1\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:261)\nCaller+2\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:220)\nCaller+3\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:208)\nCaller+4\t at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:173)\n","class":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping","method":"detectHandlerMethods","file":"AbstractHandlerMethodMapping.java","line":"290","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.681446+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"_org.springframework.web.servlet.HandlerMapping.Mappings","thread_name":"main","timestamp":"2025-06-12 18:00:59,681","level":"DEBUG","thread":"main","logger":"_org.springframework.web.servlet.HandlerMapping.Mappings","message":"\n\to.s.b.a.w.s.e.BasicErrorController:\n\t{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)\n\t{ [/error]}: error(HttpServletRequest)","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:290)\nCaller+1\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:261)\nCaller+2\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:220)\nCaller+3\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:208)\nCaller+4\t at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:173)\n","class":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping","method":"detectHandlerMethods","file":"AbstractHandlerMethodMapping.java","line":"290","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.683428+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","thread_name":"main","timestamp":"2025-06-12 18:00:59,683","level":"DEBUG","thread":"main","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"6 mappings in 'requestMappingHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.handlerMethodsInitialized(AbstractHandlerMethodMapping.java:361)\nCaller+1\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:223)\nCaller+2\t at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:208)\nCaller+3\t at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:173)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n","class":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping","method":"handlerMethodsInitialized","file":"AbstractHandlerMethodMapping.java","line":"361","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.687715+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,687","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcPatternParser'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.688046+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,688","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcUrlPathHelper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.688471+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,688","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcPathMatcher'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.688945+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,688","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'viewControllerHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.689251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,689","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.689329+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,689","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.689547+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,689","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'beanNameHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.689778+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,689","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.689852+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,689","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.691169+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"_org.springframework.web.servlet.HandlerMapping.Mappings","thread_name":"main","timestamp":"2025-06-12 18:00:59,691","level":"DEBUG","thread":"main","logger":"_org.springframework.web.servlet.HandlerMapping.Mappings","message":"'beanNameHandlerMapping' {}","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.detectHandlers(AbstractDetectingUrlHandlerMapping.java:86)\nCaller+1\t at org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping.initApplicationContext(AbstractDetectingUrlHandlerMapping.java:59)\nCaller+2\t at org.springframework.context.support.ApplicationObjectSupport.initApplicationContext(ApplicationObjectSupport.java:122)\nCaller+3\t at org.springframework.web.context.support.WebApplicationObjectSupport.initApplicationContext(WebApplicationObjectSupport.java:77)\nCaller+4\t at org.springframework.context.support.ApplicationObjectSupport.setApplicationContext(ApplicationObjectSupport.java:76)\n","class":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping","method":"detectHandlers","file":"AbstractDetectingUrlHandlerMapping.java","line":"86","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.693468+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,693","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'routerFunctionMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.693719+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,693","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.69379+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,693","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.694375+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,694","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'messageConverters'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.694486+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,694","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.695756+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,695","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'stringHttpMessageConverter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.695873+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,695","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.696358+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,696","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.http.converters-org.springframework.boot.autoconfigure.http.HttpMessageConvertersProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.696819+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,696","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'spring.http.converters-org.springframework.boot.autoconfigure.http.HttpMessageConvertersProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.697844+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,697","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.69796+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,697","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.698279+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,698","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.706996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,706","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'resourceHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.707448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,707","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.707536+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,707","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.707609+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,707","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.717869+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"_org.springframework.web.servlet.HandlerMapping.Mappings","thread_name":"main","timestamp":"2025-06-12 18:00:59,717","level":"DEBUG","thread":"main","logger":"_org.springframework.web.servlet.HandlerMapping.Mappings","message":"'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.logMappings(SimpleUrlHandlerMapping.java:176)\nCaller+1\t at org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandlers(SimpleUrlHandlerMapping.java:163)\nCaller+2\t at org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.initApplicationContext(SimpleUrlHandlerMapping.java:138)\nCaller+3\t at org.springframework.context.support.ApplicationObjectSupport.initApplicationContext(ApplicationObjectSupport.java:122)\nCaller+4\t at org.springframework.web.context.support.WebApplicationObjectSupport.initApplicationContext(WebApplicationObjectSupport.java:77)\n","class":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","method":"logMappings","file":"SimpleUrlHandlerMapping.java","line":"176","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.72798+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,727","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'defaultServletHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.72849+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,728","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'requestMappingHandlerAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.729571+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,729","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.729795+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,729","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.729883+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,729","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.735229+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,735","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sortResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.data.web.config.SpringDataWebConfiguration.lambda$new$0(SpringDataWebConfiguration.java:84)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.736466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,736","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sortCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:221)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1577)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1536)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.737842+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,737","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'pageableResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.data.web.config.SpringDataWebConfiguration.lambda$new$1(SpringDataWebConfiguration.java:86)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.738986+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,738","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'pageableCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:221)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1577)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1536)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.746629+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","thread_name":"main","timestamp":"2025-06-12 18:00:59,746","level":"DEBUG","thread":"main","logger":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:625)\nCaller+1\t at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.afterPropertiesSet(RequestMappingHandlerAdapter.java:551)\nCaller+2\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n","class":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","method":"initControllerAdviceCache","file":"RequestMappingHandlerAdapter.java","line":"625","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.758082+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,758","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcViewResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:373)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.758371+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,758","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.759622+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,759","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'defaultViewResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:373)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.763808+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,763","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'viewResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:373)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.764025+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,764","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.764843+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,764","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'viewResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:721)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.773381+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,773","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'handlerFunctionAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.774126+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,774","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'mvcUriComponentsContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.774415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,774","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.774492+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,774","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.775424+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,775","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'httpRequestHandlerAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.77568+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,775","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.775917+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,775","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'handlerExceptionResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.776079+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,776","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.779148+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,779","level":"DEBUG","thread":"main","logger":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice","context":"","exception":"","caller":"Caller+0\t at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.initExceptionHandlerAdviceCache(ExceptionHandlerExceptionResolver.java:326)\nCaller+1\t at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.afterPropertiesSet(ExceptionHandlerExceptionResolver.java:277)\nCaller+2\t at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.addDefaultHandlerExceptionResolvers(WebMvcConfigurationSupport.java:1154)\nCaller+3\t at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.handlerExceptionResolver(WebMvcConfigurationSupport.java:1089)\nCaller+4\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n","class":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","method":"initExceptionHandlerAdviceCache","file":"ExceptionHandlerExceptionResolver.java","line":"326","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.780396+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,780","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.780627+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,780","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'applicationAvailability'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.781405+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,781","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.78212+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'meterRegistryCloser'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.782787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.782997+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,782","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.783232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,783","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'micrometerOptions'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.784314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,784","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'lettuceMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.784706+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,784","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'lettuceMetrics' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.784785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,784","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'lettuceMetrics' via factory method to bean named 'micrometerOptions'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.785152+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,785","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.785586+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,785","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.787053+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,787","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.787178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,787","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.787575+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,787","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'redisConnectionDetails' via factory method to bean named 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.788547+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,788","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.788623+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,788","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'redisConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.790324+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,790","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'lettuceClientResources'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.792745+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.AddressResolverGroupProvider","thread_name":"main","timestamp":"2025-06-12 18:00:59,792","level":"DEBUG","thread":"main","logger":"io.lettuce.core.resource.AddressResolverGroupProvider","message":"Starting with netty's non-blocking DNS resolver library","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:34)\nCaller+1\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\nCaller+2\t at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:83)\nCaller+3\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+4\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\n","class":"io.lettuce.core.resource.AddressResolverGroupProvider","method":"<clinit>","file":"AddressResolverGroupProvider.java","line":"34","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.801633+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.NetUtil","thread_name":"main","timestamp":"2025-06-12 18:00:59,801","level":"DEBUG","thread":"main","logger":"io.netty.util.NetUtil","message":"-Djava.net.preferIPv4Stack: false","context":"","exception":"","caller":"Caller+0\t at io.netty.util.NetUtil.<clinit>(NetUtil.java:149)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:137)\nCaller+2\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n","class":"io.netty.util.NetUtil","method":"<clinit>","file":"NetUtil.java","line":"149","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.801743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.NetUtil","thread_name":"main","timestamp":"2025-06-12 18:00:59,801","level":"DEBUG","thread":"main","logger":"io.netty.util.NetUtil","message":"-Djava.net.preferIPv6Addresses: false","context":"","exception":"","caller":"Caller+0\t at io.netty.util.NetUtil.<clinit>(NetUtil.java:150)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:137)\nCaller+2\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n","class":"io.netty.util.NetUtil","method":"<clinit>","file":"NetUtil.java","line":"150","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.803073+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.NetUtilInitializations","thread_name":"main","timestamp":"2025-06-12 18:00:59,803","level":"DEBUG","thread":"main","logger":"io.netty.util.NetUtilInitializations","message":"Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)","context":"","exception":"","caller":"Caller+0\t at io.netty.util.NetUtilInitializations.determineLoopback(NetUtilInitializations.java:145)\nCaller+1\t at io.netty.util.NetUtil.<clinit>(NetUtil.java:161)\nCaller+2\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:137)\nCaller+3\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\n","class":"io.netty.util.NetUtilInitializations","method":"determineLoopback","file":"NetUtilInitializations.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.803456+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.NetUtil","thread_name":"main","timestamp":"2025-06-12 18:00:59,803","level":"DEBUG","thread":"main","logger":"io.netty.util.NetUtil","message":"Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128","context":"","exception":"","caller":"Caller+0\t at io.netty.util.NetUtil$SoMaxConnAction.run(NetUtil.java:216)\nCaller+1\t at io.netty.util.NetUtil$SoMaxConnAction.run(NetUtil.java:171)\nCaller+2\t at java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\nCaller+3\t at io.netty.util.NetUtil.<clinit>(NetUtil.java:168)\nCaller+4\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:137)\n","class":"io.netty.util.NetUtil$SoMaxConnAction","method":"run","file":"NetUtil.java","line":"216","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.803697+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.resolver.dns.DnsNameResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,803","level":"DEBUG","thread":"main","logger":"io.netty.resolver.dns.DnsNameResolver","message":"Default ResolvedAddressTypes: IPV4_ONLY","context":"","exception":"","caller":"Caller+0\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:149)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+2\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n","class":"io.netty.resolver.dns.DnsNameResolver","method":"<clinit>","file":"DnsNameResolver.java","line":"149","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.803785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.resolver.dns.DnsNameResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,803","level":"DEBUG","thread":"main","logger":"io.netty.resolver.dns.DnsNameResolver","message":"Localhost address: localhost/127.0.0.1","context":"","exception":"","caller":"Caller+0\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:150)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+2\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n","class":"io.netty.resolver.dns.DnsNameResolver","method":"<clinit>","file":"DnsNameResolver.java","line":"150","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.803861+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.resolver.dns.DnsNameResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,803","level":"DEBUG","thread":"main","logger":"io.netty.resolver.dns.DnsNameResolver","message":"Windows hostname: null","context":"","exception":"","caller":"Caller+0\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:159)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+2\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n","class":"io.netty.resolver.dns.DnsNameResolver","method":"<clinit>","file":"DnsNameResolver.java","line":"159","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.804972+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.resolver.dns.DnsNameResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,804","level":"DEBUG","thread":"main","logger":"io.netty.resolver.dns.DnsNameResolver","message":"Default search domains: []","context":"","exception":"","caller":"Caller+0\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:172)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+2\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n","class":"io.netty.resolver.dns.DnsNameResolver","method":"<clinit>","file":"DnsNameResolver.java","line":"172","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.805491+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.resolver.dns.DnsNameResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,805","level":"DEBUG","thread":"main","logger":"io.netty.resolver.dns.DnsNameResolver","message":"Default UnixResolverOptions{ndots=1, timeout=5, attempts=16}","context":"","exception":"","caller":"Caller+0\t at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:181)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:62)\nCaller+2\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n","class":"io.netty.resolver.dns.DnsNameResolver","method":"<clinit>","file":"DnsNameResolver.java","line":"181","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.809011+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.resolver.DefaultHostsFileEntriesResolver","thread_name":"main","timestamp":"2025-06-12 18:00:59,809","level":"DEBUG","thread":"main","logger":"io.netty.resolver.DefaultHostsFileEntriesResolver","message":"-Dio.netty.hostsFileRefreshInterval: 0","context":"","exception":"","caller":"Caller+0\t at io.netty.resolver.DefaultHostsFileEntriesResolver.<clinit>(DefaultHostsFileEntriesResolver.java:53)\nCaller+1\t at io.netty.resolver.HostsFileEntriesResolver.<clinit>(HostsFileEntriesResolver.java:28)\nCaller+2\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:69)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n","class":"io.netty.resolver.DefaultHostsFileEntriesResolver","method":"<clinit>","file":"DefaultHostsFileEntriesResolver.java","line":"53","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.813664+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.NativeLibraryLoader","thread_name":"main","timestamp":"2025-06-12 18:00:59,813","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.NativeLibraryLoader","message":"-Dio.netty.native.workdir: /var/folders/0r/q9tn8sws4ts8pyjpxf0r69bh0000gp/T (io.netty.tmpdir)","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.NativeLibraryLoader.<clinit>(NativeLibraryLoader.java:78)\nCaller+1\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92)\nCaller+2\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<clinit>(MacOSDnsServerAddressStreamProvider.java:77)\nCaller+3\t at java.base/java.lang.Class.forName0(Native Method)\nCaller+4\t at java.base/java.lang.Class.forName(Class.java:543)\n","class":"io.netty.util.internal.NativeLibraryLoader","method":"<clinit>","file":"NativeLibraryLoader.java","line":"78","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.813815+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.NativeLibraryLoader","thread_name":"main","timestamp":"2025-06-12 18:00:59,813","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.NativeLibraryLoader","message":"-Dio.netty.native.deleteLibAfterLoading: true","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.NativeLibraryLoader.<clinit>(NativeLibraryLoader.java:83)\nCaller+1\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92)\nCaller+2\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<clinit>(MacOSDnsServerAddressStreamProvider.java:77)\nCaller+3\t at java.base/java.lang.Class.forName0(Native Method)\nCaller+4\t at java.base/java.lang.Class.forName(Class.java:543)\n","class":"io.netty.util.internal.NativeLibraryLoader","method":"<clinit>","file":"NativeLibraryLoader.java","line":"83","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.813898+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.NativeLibraryLoader","thread_name":"main","timestamp":"2025-06-12 18:00:59,813","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.NativeLibraryLoader","message":"-Dio.netty.native.tryPatchShadedId: true","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.NativeLibraryLoader.<clinit>(NativeLibraryLoader.java:87)\nCaller+1\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92)\nCaller+2\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<clinit>(MacOSDnsServerAddressStreamProvider.java:77)\nCaller+3\t at java.base/java.lang.Class.forName0(Native Method)\nCaller+4\t at java.base/java.lang.Class.forName(Class.java:543)\n","class":"io.netty.util.internal.NativeLibraryLoader","method":"<clinit>","file":"NativeLibraryLoader.java","line":"87","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.813978+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.NativeLibraryLoader","thread_name":"main","timestamp":"2025-06-12 18:00:59,813","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.NativeLibraryLoader","message":"-Dio.netty.native.detectNativeLibraryDuplicates: true","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.NativeLibraryLoader.<clinit>(NativeLibraryLoader.java:91)\nCaller+1\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92)\nCaller+2\t at io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<clinit>(MacOSDnsServerAddressStreamProvider.java:77)\nCaller+3\t at java.base/java.lang.Class.forName0(Native Method)\nCaller+4\t at java.base/java.lang.Class.forName(Class.java:543)\n","class":"io.netty.util.internal.NativeLibraryLoader","method":"<clinit>","file":"NativeLibraryLoader.java","line":"91","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.822291+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"io.netty.resolver.dns.DnsServerAddressStreamProviders","thread_name":"main","timestamp":"2025-06-12 18:00:59,822","level":"ERROR","thread":"main","logger":"io.netty.resolver.dns.DnsServerAddressStreamProviders","message":"Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'","context":"","exception":"java.lang.reflect.InvocationTargetException: null\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.<clinit>(DnsServerAddressStreamProviders.java:64)\n\tat io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:71)\n\tat io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\n\tat io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n\tat io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n\tat org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:83)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:154)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:71)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:151)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:566)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1105)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:977)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: java.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.ensureAvailability(MacOSDnsServerAddressStreamProvider.java:110)\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<init>(MacOSDnsServerAddressStreamProvider.java:120)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\t... 35 common frames omitted\nCaused by: java.lang.UnsatisfiedLinkError: could not load a native library: netty_resolver_dns_native_macos_aarch_64\n\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:239)\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92)\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<clinit>(MacOSDnsServerAddressStreamProvider.java:77)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:543)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$1.run(DnsServerAddressStreamProviders.java:50)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.<clinit>(DnsServerAddressStreamProviders.java:46)\n\t... 32 common frames omitted\n\tSuppressed: java.lang.UnsatisfiedLinkError: could not load a native library: netty_resolver_dns_native_macos\n\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:239)\n\t\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:95)\n\t\t... 38 common frames omitted\n\tCaused by: java.io.FileNotFoundException: META-INF/native/libnetty_resolver_dns_native_macos.jnilib\n\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:181)\n\t\t... 39 common frames omitted\n\t\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:396)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:161)\n\t\t\t... 39 common frames omitted\n\t\t\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\t\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\t\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\t\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\t\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\t\t\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\t\t\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\t\t\t\tat io.netty.util.internal.NativeLibraryLoader$1.run(NativeLibraryLoader.java:430)\n\t\t\t\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\n\t\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibraryByHelper(NativeLibraryLoader.java:422)\n\t\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:388)\n\t\t\t\t... 40 common frames omitted\nCaused by: java.io.FileNotFoundException: META-INF/native/libnetty_resolver_dns_native_macos_aarch_64.jnilib\n\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:181)\n\t... 39 common frames omitted\n\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos_aarch_64 in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:396)\n\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:161)\n\t\t... 39 common frames omitted\n\t\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos_aarch_64 in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\t\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\t\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader$1.run(NativeLibraryLoader.java:430)\n\t\t\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibraryByHelper(NativeLibraryLoader.java:422)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:388)\n\t\t\t... 40 common frames omitted\n","caller":"Caller+0\t at io.netty.resolver.dns.DnsServerAddressStreamProviders.<clinit>(DnsServerAddressStreamProviders.java:75)\nCaller+1\t at io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:71)\nCaller+2\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n","class":"io.netty.resolver.dns.DnsServerAddressStreamProviders","method":"<clinit>","file":"DnsServerAddressStreamProviders.java","line":"75","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"java.lang.reflect.InvocationTargetException: null\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.<clinit>(DnsServerAddressStreamProviders.java:64)\n\tat io.netty.resolver.dns.DnsNameResolverBuilder.<init>(DnsNameResolverBuilder.java:71)\n\tat io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:56)\n\tat io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n\tat io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:116)\n\tat org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:83)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:154)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:71)\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:151)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:566)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1105)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:977)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\n\tat com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\nCaused by: java.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.ensureAvailability(MacOSDnsServerAddressStreamProvider.java:110)\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<init>(MacOSDnsServerAddressStreamProvider.java:120)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\n\t... 35 common frames omitted\nCaused by: java.lang.UnsatisfiedLinkError: could not load a native library: netty_resolver_dns_native_macos_aarch_64\n\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:239)\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92)\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.<clinit>(MacOSDnsServerAddressStreamProvider.java:77)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:543)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$1.run(DnsServerAddressStreamProviders.java:50)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.<clinit>(DnsServerAddressStreamProviders.java:46)\n\t... 32 common frames omitted\n\tSuppressed: java.lang.UnsatisfiedLinkError: could not load a native library: netty_resolver_dns_native_macos\n\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:239)\n\t\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:95)\n\t\t... 38 common frames omitted\n\tCaused by: java.io.FileNotFoundException: META-INF/native/libnetty_resolver_dns_native_macos.jnilib\n\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:181)\n\t\t... 39 common frames omitted\n\t\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:396)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:161)\n\t\t\t... 39 common frames omitted\n\t\t\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\t\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\t\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\t\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\t\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\t\t\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\t\t\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\t\t\t\tat io.netty.util.internal.NativeLibraryLoader$1.run(NativeLibraryLoader.java:430)\n\t\t\t\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\n\t\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibraryByHelper(NativeLibraryLoader.java:422)\n\t\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:388)\n\t\t\t\t... 40 common frames omitted\nCaused by: java.io.FileNotFoundException: META-INF/native/libnetty_resolver_dns_native_macos_aarch_64.jnilib\n\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:181)\n\t... 39 common frames omitted\n\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos_aarch_64 in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:396)\n\t\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:161)\n\t\t... 39 common frames omitted\n\t\tSuppressed: java.lang.UnsatisfiedLinkError: no netty_resolver_dns_native_macos_aarch_64 in java.library.path: /Users/mohit/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.\n\t\t\tat java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2285)\n\t\t\tat java.base/java.lang.Runtime.loadLibrary0(Runtime.java:822)\n\t\t\tat java.base/java.lang.System.loadLibrary(System.java:1663)\n\t\t\tat io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:38)\n\t\t\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\t\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader$1.run(NativeLibraryLoader.java:430)\n\t\t\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:74)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibraryByHelper(NativeLibraryLoader.java:422)\n\t\t\tat io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:388)\n\t\t\t... 40 common frames omitted\n"}
{"timestamp":"2025-06-12T18:00:59.825993+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.KqueueProvider","thread_name":"main","timestamp":"2025-06-12 18:00:59,825","level":"DEBUG","thread":"main","logger":"io.lettuce.core.resource.KqueueProvider","message":"Starting without optional kqueue library","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.KqueueProvider.<clinit>(KqueueProvider.java:77)\nCaller+1\t at io.lettuce.core.resource.Transports$NativeTransports.<clinit>(Transports.java:62)\nCaller+2\t at io.lettuce.core.resource.Transports.datagramChannelClass(Transports.java:50)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:57)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n","class":"io.lettuce.core.resource.KqueueProvider","method":"<clinit>","file":"KqueueProvider.java","line":"77","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.826655+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.IOUringProvider","thread_name":"main","timestamp":"2025-06-12 18:00:59,826","level":"DEBUG","thread":"main","logger":"io.lettuce.core.resource.IOUringProvider","message":"Starting without optional io_uring library","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.IOUringProvider.<clinit>(IOUringProvider.java:79)\nCaller+1\t at io.lettuce.core.resource.Transports$NativeTransports.<clinit>(Transports.java:63)\nCaller+2\t at io.lettuce.core.resource.Transports.datagramChannelClass(Transports.java:50)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:57)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n","class":"io.lettuce.core.resource.IOUringProvider","method":"<clinit>","file":"IOUringProvider.java","line":"79","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.833057+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.EpollProvider","thread_name":"main","timestamp":"2025-06-12 18:00:59,833","level":"DEBUG","thread":"main","logger":"io.lettuce.core.resource.EpollProvider","message":"Starting without optional epoll library","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.EpollProvider.<clinit>(EpollProvider.java:80)\nCaller+1\t at io.lettuce.core.resource.Transports$NativeTransports.<clinit>(Transports.java:63)\nCaller+2\t at io.lettuce.core.resource.Transports.datagramChannelClass(Transports.java:50)\nCaller+3\t at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.<clinit>(AddressResolverGroupProvider.java:57)\nCaller+4\t at io.lettuce.core.resource.AddressResolverGroupProvider.<clinit>(AddressResolverGroupProvider.java:35)\n","class":"io.lettuce.core.resource.EpollProvider","method":"<clinit>","file":"EpollProvider.java","line":"80","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.841497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.DefaultClientResources","thread_name":"main","timestamp":"2025-06-12 18:00:59,841","level":"DEBUG","thread":"main","logger":"io.lettuce.core.resource.DefaultClientResources","message":"-Dio.netty.eventLoopThreads: 8","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.DefaultClientResources.<clinit>(DefaultClientResources.java:126)\nCaller+1\t at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:83)\nCaller+2\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+3\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+4\t at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:154)\n","class":"io.lettuce.core.resource.DefaultClientResources","method":"<clinit>","file":"DefaultClientResources.java","line":"126","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.845779+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.DefaultEventLoopGroupProvider","thread_name":"main","timestamp":"2025-06-12 18:00:59,845","level":"DEBUG","thread":"main","logger":"io.lettuce.core.resource.DefaultEventLoopGroupProvider","message":"Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.DefaultEventLoopGroupProvider.createEventLoopGroup(DefaultEventLoopGroupProvider.java:216)\nCaller+1\t at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:201)\nCaller+2\t at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:664)\nCaller+3\t at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:85)\nCaller+4\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n","class":"io.lettuce.core.resource.DefaultEventLoopGroupProvider","method":"createEventLoopGroup","file":"DefaultEventLoopGroupProvider.java","line":"216","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.851454+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.concurrent.GlobalEventExecutor","thread_name":"main","timestamp":"2025-06-12 18:00:59,851","level":"DEBUG","thread":"main","logger":"io.netty.util.concurrent.GlobalEventExecutor","message":"-Dio.netty.globalEventExecutor.quietPeriodSeconds: 1","context":"","exception":"","caller":"Caller+0\t at io.netty.util.concurrent.GlobalEventExecutor.<clinit>(GlobalEventExecutor.java:54)\nCaller+1\t at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:38)\nCaller+2\t at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:60)\nCaller+3\t at io.netty.util.concurrent.MultithreadEventExecutorGroup.<init>(MultithreadEventExecutorGroup.java:49)\nCaller+4\t at io.netty.util.concurrent.DefaultEventExecutorGroup.<init>(DefaultEventExecutorGroup.java:54)\n","class":"io.netty.util.concurrent.GlobalEventExecutor","method":"<clinit>","file":"GlobalEventExecutor.java","line":"54","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.855056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.ResourceLeakDetectorFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,855","level":"DEBUG","thread":"main","logger":"io.netty.util.ResourceLeakDetectorFactory","message":"Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3269ae62","context":"","exception":"","caller":"Caller+0\t at io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector(ResourceLeakDetectorFactory.java:196)\nCaller+1\t at io.netty.util.HashedWheelTimer.<clinit>(HashedWheelTimer.java:96)\nCaller+2\t at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:210)\nCaller+3\t at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:664)\nCaller+4\t at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:85)\n","class":"io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory","method":"newResourceLeakDetector","file":"ResourceLeakDetectorFactory.java","line":"196","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.859491+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.netty.util.internal.PlatformDependent","thread_name":"main","timestamp":"2025-06-12 18:00:59,859","level":"DEBUG","thread":"main","logger":"io.netty.util.internal.PlatformDependent","message":"org.jctools-core.MpscChunkedArrayQueue: available","context":"","exception":"","caller":"Caller+0\t at io.netty.util.internal.PlatformDependent$Mpsc.<clinit>(PlatformDependent.java:1048)\nCaller+1\t at io.netty.util.internal.PlatformDependent.newMpscQueue(PlatformDependent.java:1078)\nCaller+2\t at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:115)\nCaller+3\t at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:252)\nCaller+4\t at io.netty.util.HashedWheelTimer.<init>(HashedWheelTimer.java:225)\n","class":"io.netty.util.internal.PlatformDependent$Mpsc","method":"<clinit>","file":"PlatformDependent.java","line":"1048","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.863093+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.event.jfr.EventRecorderHolder","thread_name":"main","timestamp":"2025-06-12 18:00:59,863","level":"DEBUG","thread":"main","logger":"io.lettuce.core.event.jfr.EventRecorderHolder","message":"Starting with JFR support","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.event.jfr.EventRecorderHolder.<clinit>(EventRecorderHolder.java:32)\nCaller+1\t at io.lettuce.core.event.jfr.EventRecorder.getInstance(EventRecorder.java:23)\nCaller+2\t at io.lettuce.core.event.DefaultEventBus.<init>(DefaultEventBus.java:21)\nCaller+3\t at io.lettuce.core.resource.DefaultClientResources.<init>(DefaultClientResources.java:218)\nCaller+4\t at io.lettuce.core.resource.DefaultClientResources$Builder.build(DefaultClientResources.java:664)\n","class":"io.lettuce.core.event.jfr.EventRecorderHolder","method":"<clinit>","file":"EventRecorderHolder.java","line":"32","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.868209+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,868","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisConnectionFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.868704+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,868","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.928809+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,928","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.92913+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,929","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.945797+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,945","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946019+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946139+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946225+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946304+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946382+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946459+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946535+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946626+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946701+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946775+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946849+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.946944+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,946","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947027+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.94711+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947187+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947265+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947343+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.94742+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947505+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947582+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947663+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.94774+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947823+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.947901+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.94798+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,947","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948136+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948213+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948291+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948371+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948554+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.94864+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948717+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948791+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948865+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.948952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,948","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949027+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949119+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.9492+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949274+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949349+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949434+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949508+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949582+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949655+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949729+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949802+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.949877+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.94995+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,949","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.95082+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,950","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.950904+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,950","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.950978+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,950","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951052+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951127+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.9512+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951275+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951347+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951419+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951494+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951568+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951641+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951715+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951797+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951875+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.951952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,951","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952033+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952111+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952188+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952267+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952344+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952421+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952498+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952575+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952653+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.95273+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952807+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952886+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.952962+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,952","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953039+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953119+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953207+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953284+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953358+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953432+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953505+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953585+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953661+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953734+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953806+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953883+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.953959+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,953","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.95403+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954104+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954176+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954323+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954394+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954465+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.954538+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.95461+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,954","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957144+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957237+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.95731+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957382+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957453+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957524+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957595+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957741+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957814+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957886+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.957962+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,957","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958038+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958115+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958192+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958267+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958342+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958419+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958688+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.958895+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,958","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959033+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959124+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959261+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959383+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959468+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959558+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.95964+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959723+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959798+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959873+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.959946+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,959","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960103+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960181+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960257+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960332+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960409+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960481+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960553+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960628+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960702+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960778+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960849+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960925+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.960997+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,960","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.961069+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,961","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.961145+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,961","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.96122+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,961","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.961292+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,961","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.961373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,961","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.961445+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,961","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.962785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,962","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.962875+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,962","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.962952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,962","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963027+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963105+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963252+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963324+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963395+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963537+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963611+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963682+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963756+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963829+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963905+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.963979+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,963","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964053+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964128+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964203+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964275+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964348+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964423+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964496+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964569+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964642+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964714+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964864+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.964939+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,964","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965018+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965097+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965196+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965282+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965354+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965426+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965567+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965652+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965725+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965797+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.96587+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.965942+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,965","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966014+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.96609+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966208+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966298+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966376+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966451+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966528+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.966602+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,966","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968345+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.96844+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968514+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968588+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968658+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968728+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968797+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968866+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.968935+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,968","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969008+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969079+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.96915+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969224+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969297+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.96937+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969443+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969517+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969595+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969821+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969897+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.969969+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,969","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970042+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970119+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970192+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970272+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970344+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970518+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970632+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970707+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970855+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970926+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.970996+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,970","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971067+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.97114+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.97121+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.97128+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971352+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971422+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971492+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971566+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971636+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971706+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971846+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971916+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.971986+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,971","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.972058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,972","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.972131+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:00:59,972","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.983377+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,983","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'stringRedisTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.983599+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,983","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.988317+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,988","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.988576+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,988","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.988743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,988","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.988928+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,988","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.989129+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,989","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.989728+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,989","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionExecutionListeners'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.990431+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,990","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.991724+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,991","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.991932+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,991","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.995608+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,995","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.995858+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,995","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.99615+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,996","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthStatusAggregator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.996453+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,996","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.997491+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,997","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthStatusAggregator' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.998403+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,998","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthHttpCodeStatusMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.998535+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,998","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthHttpCodeStatusMapper' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.998967+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,998","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointGroups'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.999145+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,999","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointGroups' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:00:59.999217+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:00:59,999","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointGroups' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.001542+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,001","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthContributorRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.002217+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,002","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslHealthIndicator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.002312+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,002","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.002601+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,002","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslInfo'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.002738+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,002","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslInfo' via factory method to bean named 'sslBundleRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.003324+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,003","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.health.ssl-org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.003694+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,003","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslHealthIndicator' via factory method to bean named 'sslInfo'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.003771+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,003","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslHealthIndicator' via factory method to bean named 'management.health.ssl-org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.005889+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,005","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'diskSpaceHealthIndicator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.006002+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,006","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.00651+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,006","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.006924+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,006","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'diskSpaceHealthIndicator' via factory method to bean named 'management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.007302+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,007","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'pingHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.00739+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,007","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.009212+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,009","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dbHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.009301+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,009","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.010417+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,010","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.029797+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,029","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dbHealthContributor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.030034+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,030","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dbHealthContributor' via factory method to bean named 'management.health.db-org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.044257+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,044","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.044518+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,044","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.047188+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,047","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'redisHealthContributor' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.049504+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,049","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.049688+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,049","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'healthEndpointGroups'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.04984+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,049","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'sslHealthIndicator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.04998+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,049","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'diskSpaceHealthIndicator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.050053+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,050","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'pingHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.050174+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,050","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'dbHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.050244+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,050","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthContributorRegistry' via factory method to bean named 'redisHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.054717+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,054","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointGroupMembershipValidator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.05511+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,055","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointGroupMembershipValidator' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.055388+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,055","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointGroupMembershipValidator' via factory method to bean named 'healthContributorRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.056612+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,056","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpoint'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.057698+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,057","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthContributorRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.057787+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,057","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'healthEndpointGroups'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.057859+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,057","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpoint' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.060248+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,060","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.060528+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,060","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'reactiveHealthContributorRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.060881+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,060","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'sslHealthIndicator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.060954+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,060","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'diskSpaceHealthIndicator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.061019+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'pingHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.061086+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'dbHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.061149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'redisHealthContributor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.061211+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,061","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveHealthContributorRegistry' via factory method to bean named 'healthEndpointGroups'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.062884+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,062","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.063065+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,063","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointWebMvcHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.063464+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,063","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.063802+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,063","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'endpointOperationParameterMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.065019+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,065","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'endpointMediaTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.065491+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,065","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointOperationParameterMapper'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.0656+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,065","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointDiscoverer' via factory method to bean named 'endpointMediaTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.067478+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,067","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'endpointCachingOperationInvokerAdvisor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.067703+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,067","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'endpointCachingOperationInvokerAdvisor' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.068586+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,068","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webExposeExcludePropertyEndpointFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.069091+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,069","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webAccessPropertiesOperationFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.069422+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,069","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webAccessPropertiesOperationFilter' via factory method to bean named 'propertiesEndpointAccessResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.071601+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,071","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointWebMvcHandlerMapping' via factory method to bean named 'webEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.071683+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,071","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointWebMvcHandlerMapping' via factory method to bean named 'healthEndpointGroups'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.083321+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,083","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointWebExtension'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1262)\nCaller+4\t at org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer.lambda$createExtensionBean$0(EndpointDiscoverer.java:194)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.083474+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,083","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.084006+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,084","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthContributorRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.084109+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,084","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'healthEndpointGroups'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.084193+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,084","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'healthEndpointWebExtension' via factory method to bean named 'management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.091413+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,091","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.091625+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,091","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.092345+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,092","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.092842+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,092","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.093115+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,093","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.093692+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,093","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.094125+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,094","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.09432+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,094","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'servletWebChildContextFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.094568+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,094","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'managementServletContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.094844+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,094","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'managementServletContext' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.095136+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,095","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.095339+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,095","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'reactiveRedisTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.095683+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,095","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.095751+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,095","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.109263+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,109","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'reactiveStringRedisTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.109734+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,109","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.112271+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,112","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.113152+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,113","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'controllerEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.113826+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,113","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'controllerExposeExcludePropertyEndpointFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.114857+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,114","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'pathMappedEndpoints'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.115454+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,115","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'servletEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.115527+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,115","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'webEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.115594+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,115","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'pathMappedEndpoints' via factory method to bean named 'controllerEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.121942+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,121","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.122525+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,122","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jvmGcMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.126111+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,126","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jvmHeapPressureMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.127655+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,127","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jvmMemoryMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.12793+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,127","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jvmThreadMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.128449+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,128","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'classLoaderMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.128678+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,128","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jvmInfoMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.128902+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,128","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jvmCompilationMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.129104+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,129","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.12928+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,129","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaStreamsMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.129491+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,129","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaStreamsMetrics' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.12979+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,129","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.130001+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,130","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaProducerMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.130108+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,130","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaProducerMetrics' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.130394+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,130","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaConsumerMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.130497+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,130","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaConsumerMetrics' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.13077+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,130","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.130947+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,130","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'logbackMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.131593+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,131","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.131847+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,131","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'uptimeMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.132087+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,132","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'processorMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.133853+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,133","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'fileDescriptorMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.134281+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,134","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'diskSpaceMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.134415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,134","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'diskSpaceMetrics' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.134651+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,134","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.134833+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,134","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.135001+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,135","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'hikariDataSourceMeterBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.135272+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,135","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.135433+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,135","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSourcePoolMetadataMeterBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.135575+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,135","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourcePoolMetadataMeterBinder' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@7e97551f'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.135912+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,135","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.1361+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,136","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.136283+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,136","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'startupTimeMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.136413+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,136","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'startupTimeMetrics' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.136872+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,136","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.137033+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,137","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'threadPoolTaskSchedulerBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.137504+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,137","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.138014+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,138","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'threadPoolTaskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.138751+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,138","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.139118+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,139","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration' via constructor to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.139346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,139","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'simpleAsyncTaskSchedulerBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.140022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,140","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.140256+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,140","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'taskScheduler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.140487+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,140","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'taskScheduler' via factory method to bean named 'threadPoolTaskSchedulerBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.141521+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler","thread_name":"main","timestamp":"2025-06-12 18:01:00,141","level":"DEBUG","thread":"main","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler","message":"Initializing ExecutorService 'taskScheduler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:300)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.afterPropertiesSet(ExecutorConfigurationSupport.java:292)\nCaller+2\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"initialize","file":"ExecutorConfigurationSupport.java","line":"300","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.14526+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,145","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.145455+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,145","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.145902+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,145","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.151715+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,151","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'eagerTaskExecutorMetrics'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.152056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,152","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.15225+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,152","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'tomcatMetricsBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.152395+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,152","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'tomcatMetricsBinder' via factory method to bean named 'simpleMeterRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.152742+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,152","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.tracing.BravePropagationConfigurations$NoPropagation'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.152976+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,152","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'currentSpanCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.153252+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,153","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'currentSpanCustomizer' via factory method to bean named 'braveTracing'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.153525+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,153","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'braveSpanCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.153795+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,153","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'braveSpanCustomizer' via factory method to bean named 'currentSpanCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.154257+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,154","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.154429+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,154","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.154586+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,154","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.154886+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,154","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.155791+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,155","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration' via constructor to bean named 'spring.http.client-org.springframework.boot.autoconfigure.http.client.HttpClientProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.156322+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,156","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'clientHttpRequestFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.159853+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,159","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'clientHttpRequestFactorySettings'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.160848+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,160","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.161135+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,161","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'httpMessageConvertersRestClientCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.161449+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,161","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'restClientSsl'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.161603+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,161","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'restClientSsl' via factory method to bean named 'sslBundleRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.1625+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,162","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'restClientBuilderConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.163109+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,163","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRestClientCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.163207+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,163","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.163645+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,163","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationRestClientCustomizer' via factory method to bean named 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.163724+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,163","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationRestClientCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.16573+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,165","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.165976+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,165","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.16624+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,166","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'reactorResourceFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.166525+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,166","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.166879+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,166","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactorResourceFactory' via factory method to bean named 'spring.reactor.netty-org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.167894+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,167","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration$ReactorNetty'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.168088+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,168","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.168397+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,168","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.http.reactiveclient-org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.169117+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,169","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration' via constructor to bean named 'spring.http.reactiveclient-org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.169655+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,169","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'clientHttpConnectorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.170573+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,170","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'reactorNettyHttpClientMapperClientHttpConnectorBuilderCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1969)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.170733+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,170","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration$ReactorNetty'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.171268+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,171","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'reactorNettyHttpClientMapperClientHttpConnectorBuilderCustomizer' via factory method to bean named 'reactorResourceFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.173011+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,173","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'clientHttpConnectorSettings'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.173854+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,173","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.17403+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,174","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'exchangeStrategiesCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.174509+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,174","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.174755+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,174","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webClientSsl'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.17502+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webClientSsl' via factory method to bean named 'clientHttpConnectorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.175093+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webClientSsl' via factory method to bean named 'clientHttpConnectorSettings'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.175155+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webClientSsl' via factory method to bean named 'sslBundleRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.175404+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.175567+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRestTemplateCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.175709+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationRestTemplateCustomizer' via factory method to bean named 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.175781+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,175","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationRestTemplateCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.176112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,176","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.176272+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,176","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationWebClientCustomizer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.176427+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,176","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationWebClientCustomizer' via factory method to bean named 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.176492+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,176","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationWebClientCustomizer' via factory method to bean named 'management.observations-org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.176561+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,176","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observationWebClientCustomizer' via factory method to bean named 'management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.177644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,177","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.177906+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,177","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.178065+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,178","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observabilitySchedulingConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.178178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,178","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'observabilitySchedulingConfigurer' via factory method to bean named 'observationRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.178402+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,178","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.ssl.SslObservabilityAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.178608+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,178","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'sslMeterBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.178733+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,178","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslMeterBinder' via factory method to bean named 'sslInfo'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.178799+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,178","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'sslMeterBinder' via factory method to bean named 'sslBundleRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.17956+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,179","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.179773+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,179","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.179926+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,179","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.180111+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,180","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.180272+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,180","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.18044+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,180","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'lifecycleProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.180695+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,180","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.181012+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,181","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.182128+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,182","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.182314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,182","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.182724+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,182","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.182919+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,182","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.183594+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,183","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'data-jpa.repository-aot-processor#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.185071+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,185","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.185255+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,185","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisIndexConfiguration#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.185558+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,185","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisKeyspaceConfiguration#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.185696+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,185","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisMappingConfiguration#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.185981+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,185","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'keyValueMappingContext'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.18822+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,188","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisCustomConversions'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.188895+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,188","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189003+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.18909+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189162+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189302+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189371+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.18944+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189509+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189578+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189647+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189716+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189784+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189855+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189926+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.189995+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,189","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190065+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190137+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190207+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190277+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190346+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190416+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190484+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190555+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190623+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190693+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.190761+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19083+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.1909+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19097+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,190","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191039+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191114+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191183+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191252+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191325+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191393+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191461+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191529+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191664+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191732+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191806+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191874+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.191941+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,191","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19201+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19208+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.192151+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.192221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.192289+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.192361+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.192433+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19281+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,192","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisReferenceResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.193187+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,193","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisConverter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194095+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194176+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194248+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194318+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19439+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19446+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19453+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194598+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194666+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194736+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194808+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194876+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.194944+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,194","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195014+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195086+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195158+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195228+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195302+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195374+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195451+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195525+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195596+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19567+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195741+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195813+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195893+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.195965+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,195","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196036+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196109+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196179+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19625+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196323+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.1964+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19647+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196539+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19661+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196681+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196751+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19682+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196891+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.196961+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,196","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197032+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197103+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197172+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197241+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197385+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197456+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197524+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197594+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.197663+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,197","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198115+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19819+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.String as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19826+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Number to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198329+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Number as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198398+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Enum to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198471+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Enum as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198543+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.Boolean to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198612+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.lang.Boolean as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19868+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19875+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.Date as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198818+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.UUID to class [B as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198894+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.util.UUID as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.198963+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,198","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199034+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199111+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199184+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199254+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199326+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199397+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZonedDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199498+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZonedDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19957+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199641+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199713+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199789+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.19986+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.199933+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,199","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200015+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200099+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200182+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetDateTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200261+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.20034+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.OffsetTime to class [B as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class [B to class java.time.OffsetTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.2005+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200573+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200645+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200727+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDate to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.2008+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.LocalTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200876+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalTime to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.200947+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,200","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.util.Date to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201041+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.util.Date as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.20115+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.20123+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201309+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.ZoneId to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201383+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.ZoneId as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201463+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Duration to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.20154+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Duration as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201643+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.time.Period to class java.lang.String as writing converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201725+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Period as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201801+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDate as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201878+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.201952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.convert.CustomConversions","thread_name":"main","timestamp":"2025-06-12 18:01:00,201","level":"DEBUG","thread":"main","logger":"org.springframework.data.convert.CustomConversions","message":"Adding converter from class java.lang.String to class java.time.Instant as reading converter","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.convert.CustomConversions.isSupportedConverter(CustomConversions.java:363)\nCaller+1\t at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:196)\nCaller+2\t at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\nCaller+3\t at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\nCaller+4\t at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n","class":"org.springframework.data.convert.CustomConversions","method":"isSupportedConverter","file":"CustomConversions.java","line":"363","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.207049+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,207","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisKeyValueAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.232202+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,232","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'redisKeyValueTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.245555+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,245","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'data-redis.repository-aot-processor#0'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.24993+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,249","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.30375+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,303","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'offsetResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.321029+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,321","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.322613+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,322","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.34157+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,341","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.344785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,344","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.345118+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,345","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.359956+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,359","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.361689+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,361","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'namedParameterJdbcTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.362429+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,362","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.374463+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,374","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.375746+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,375","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.376726+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,376","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcClient'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.377939+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,377","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jdbcClient' via factory method to bean named 'namedParameterJdbcTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.381565+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,381","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.382375+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,382","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.388073+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,388","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.395784+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,395","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.411485+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,411","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration' via constructor to bean named 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.423968+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,423","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.424189+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,424","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.424639+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,424","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration' via constructor to bean named 'spring.kafka-org.springframework.boot.autoconfigure.kafka.KafkaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.425627+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,425","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaProducerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.426178+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,426","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.427894+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,427","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaProducerFactory' via factory method to bean named 'kafkaConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.445943+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,445","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaProducerListener'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.447361+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,447","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaTemplate' via factory method to bean named 'kafkaProducerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.447513+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,447","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaTemplate' via factory method to bean named 'kafkaProducerListener'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.458208+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,458","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaListenerContainerFactoryConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.466936+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,466","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaListenerContainerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.46921+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,469","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaListenerContainerFactory' via factory method to bean named 'kafkaListenerContainerFactoryConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.471332+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,471","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaConsumerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory$DependencyObjectProvider.getIfAvailable(DefaultListableBeanFactory.java:2489)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.471566+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,471","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaConsumerFactory' via factory method to bean named 'kafkaConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.488811+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,488","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'kafkaAdmin'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.489089+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,489","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'kafkaAdmin' via factory method to bean named 'kafkaConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.493086+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,493","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.493534+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,493","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.494301+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,494","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.494559+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,494","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.494906+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,494","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.49538+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration' via constructor to bean named 'spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.495617+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.495914+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,495","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.497258+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,497","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.497649+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,497","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.49784+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,497","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.498017+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,498","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.498226+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,498","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionTemplate'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.498378+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,498","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.503158+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,503","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.504373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,504","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.504606+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,504","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.504817+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,504","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'multipartResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.505695+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,505","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.506112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,506","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webEndpointServletHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.507083+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,507","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508162+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'webEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508252+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'servletEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508324+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508389+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'endpointMediaTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508453+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508518+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.508583+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,508","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'webEndpointServletHandlerMapping' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.513058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","timestamp":"2025-06-12 18:01:00,513","level":"INFO","thread":"main","logger":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 1 endpoint beneath base path '/actuator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:60)\nCaller+1\t at org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration.webEndpointServletHandlerMapping(WebMvcEndpointManagementContextConfiguration.java:97)\nCaller+2\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+3\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+4\t at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:154)\n","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","method":"<init>","file":"EndpointLinksResolver.java","line":"60","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.523379+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,523","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'controllerEndpointHandlerMapping'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.52373+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,523","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'controllerEndpointDiscoverer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.523814+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,523","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.523978+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,523","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.524091+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,524","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'controllerEndpointHandlerMapping' via factory method to bean named 'propertiesEndpointAccessResolver'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.531087+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,531","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.531378+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,531","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.531785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,531","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration' via constructor to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.532014+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,532","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.532179+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"main","timestamp":"2025-06-12 18:01:00,532","level":"DEBUG","thread":"main","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1203)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1169)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.566863+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,566","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase -2147483648","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.567084+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,567","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'kafkaProducerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.567171+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,567","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase -2147483647","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.567241+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,567","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'springBootLoggingLifecycle'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.567314+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,567","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase 0","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.570633+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"reactor.netty.tcp.TcpResources","thread_name":"main","timestamp":"2025-06-12 18:01:00,570","level":"DEBUG","thread":"main","logger":"reactor.netty.tcp.TcpResources","message":"[http] resources will use the default LoopResources: DefaultLoopResources {prefix=reactor-http, daemon=true, selectCount=8, workerCount=8}","context":"","exception":"","caller":"Caller+0\t at reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259)\nCaller+1\t at reactor.netty.tcp.TcpResources.getOrCreate(TcpResources.java:386)\nCaller+2\t at reactor.netty.http.HttpResources.get(HttpResources.java:119)\nCaller+3\t at org.springframework.http.client.ReactorResourceFactory.start(ReactorResourceFactory.java:266)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:401)\n","class":"reactor.util.Loggers$Slf4JLogger","method":"debug","file":"Loggers.java","line":"259","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.570768+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"reactor.netty.tcp.TcpResources","thread_name":"main","timestamp":"2025-06-12 18:01:00,570","level":"DEBUG","thread":"main","logger":"reactor.netty.tcp.TcpResources","message":"[http] resources will use the default ConnectionProvider: reactor.netty.resources.DefaultPooledConnectionProvider@41aa99fc","context":"","exception":"","caller":"Caller+0\t at reactor.util.Loggers$Slf4JLogger.debug(Loggers.java:259)\nCaller+1\t at reactor.netty.tcp.TcpResources.getOrCreate(TcpResources.java:390)\nCaller+2\t at reactor.netty.http.HttpResources.get(HttpResources.java:119)\nCaller+3\t at org.springframework.http.client.ReactorResourceFactory.start(ReactorResourceFactory.java:266)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:401)\n","class":"reactor.util.Loggers$Slf4JLogger","method":"debug","file":"Loggers.java","line":"259","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.570841+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,570","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'reactorResourceFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.570921+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,570","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase 1073741823","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.571012+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,571","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase 2147481599","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.571378+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","timestamp":"2025-06-12 18:01:00,571","level":"INFO","thread":"main","logger":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8080\"]","context":"","exception":"","caller":"Caller+0\t at org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:168)\nCaller+1\t at org.apache.juli.logging.DirectJDKLog.info(DirectJDKLog.java:116)\nCaller+2\t at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:640)\nCaller+3\t at org.apache.catalina.connector.Connector.startInternal(Connector.java:1082)\nCaller+4\t at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)\n","class":"org.apache.juli.logging.DirectJDKLog","method":"log","file":"DirectJDKLog.java","line":"168","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.578256+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","timestamp":"2025-06-12 18:01:00,578","level":"INFO","thread":"main","logger":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8080 (http) with context path '/'","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:243)\nCaller+1\t at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:44)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:401)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\n","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","method":"start","file":"TomcatWebServer.java","line":"243","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579128+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'webServerStartStop'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase 2147482623","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579298+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'webServerGracefulShutdown'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579362+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase 2147483547","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579443+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579508+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Starting beans in phase 2147483647","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:577)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:306)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:996)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"start","file":"DefaultLifecycleProcessor.java","line":"577","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.579765+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.redis.listener.RedisMessageListenerContainer","thread_name":"main","timestamp":"2025-06-12 18:01:00,579","level":"DEBUG","thread":"main","logger":"org.springframework.data.redis.listener.RedisMessageListenerContainer","message":"Starting RedisMessageListenerContainer...","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.logDebug(RedisMessageListenerContainer.java:1009)\nCaller+1\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.start(RedisMessageListenerContainer.java:360)\nCaller+2\t at org.springframework.data.redis.core.RedisKeyValueAdapter.start(RedisKeyValueAdapter.java:726)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:401)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\n","class":"org.springframework.data.redis.listener.RedisMessageListenerContainer","method":"logDebug","file":"RedisMessageListenerContainer.java","line":"1009","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.580147+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.redis.listener.RedisMessageListenerContainer","thread_name":"main","timestamp":"2025-06-12 18:01:00,580","level":"DEBUG","thread":"main","logger":"org.springframework.data.redis.listener.RedisMessageListenerContainer","message":"Postpone listening for Redis messages until actual listeners are added","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.logDebug(RedisMessageListenerContainer.java:1009)\nCaller+1\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.lazyListen(RedisMessageListenerContainer.java:398)\nCaller+2\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.lazyListen(RedisMessageListenerContainer.java:374)\nCaller+3\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.start(RedisMessageListenerContainer.java:361)\nCaller+4\t at org.springframework.data.redis.core.RedisKeyValueAdapter.start(RedisKeyValueAdapter.java:726)\n","class":"org.springframework.data.redis.listener.RedisMessageListenerContainer","method":"logDebug","file":"RedisMessageListenerContainer.java","line":"1009","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.580264+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"main","timestamp":"2025-06-12 18:01:00,580","level":"DEBUG","thread":"main","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Successfully started bean 'redisKeyValueAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:407)\nCaller+1\t at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:390)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:582)\nCaller+3\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:360)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"doStart","file":"DefaultLifecycleProcessor.java","line":"407","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.596256+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","timestamp":"2025-06-12 18:01:00,596","level":"DEBUG","thread":"main","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\n\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:\n-----------------\n\n   AopAutoConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.auto=true) matched (OnPropertyCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:\n      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'brave.Tracer', 'io.micrometer.tracing.brave.bridge.BraveTracer' (OnClassCondition)\n\n   BraveAutoConfiguration#braveCurrentTraceContext matched:\n      - @ConditionalOnMissingBean (types: brave.propagation.CurrentTraceContext; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#bravePropagator matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.brave.bridge.BravePropagator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveSampler matched:\n      - @ConditionalOnMissingBean (types: brave.sampler.Sampler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveSpanCustomizer matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.SpanCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracer matched:\n      - @ConditionalOnMissingBean (types: brave.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracerBridge matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracing matched:\n      - @ConditionalOnMissingBean (types: brave.Tracing; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#compositeSpanHandler matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.brave.bridge.CompositeSpanHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#currentSpanCustomizer matched:\n      - @ConditionalOnMissingBean (types: brave.SpanCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage matched:\n      - @ConditionalOnBooleanProperty (management.tracing.baggage.enabled=true) matched (OnPropertyCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#correlationFieldsCorrelationScopeCustomizer matched:\n      - @ConditionalOnBooleanProperty (management.tracing.baggage.correlation.enabled=true) matched (OnPropertyCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#correlationScopeDecorator matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.CorrelationScopeDecorator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#mdcCorrelationScopeDecoratorBuilder matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.CorrelationScopeDecorator$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#propagationFactory matched:\n      - @ConditionalOnMissingBean (types: brave.propagation.Propagation$Factory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnEnabledTracing tracing is enabled by default (OnEnabledTracingCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#propagationFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.BaggagePropagation$FactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   CacheMeterBinderProvidersConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.client.reactive.ClientHttpConnector', 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnector matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnectorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnectorSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration$ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration$ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n\n   CodecsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   CompositeMeterRegistryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)\n\n   DataSourceAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (DataSourceAutoConfiguration.PooledDataSourceCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceConfiguration.Hikari matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)\n\n   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:\n      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceInitializationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourcePoolMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)\n\n   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)\n\n   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:\n      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnWarDeployment the application is not deployed as a WAR file. (OnWarDeploymentCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n\n   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#endpointOperationParameterMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#propertiesEndpointAccessResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.EndpointAccessResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ErrorMvcAutoConfiguration#basicErrorController matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:\n      - @ConditionalOnBooleanProperty (server.error.whitelabel.enabled=true) matched (OnPropertyCondition)\n      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:\n      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GenericCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)\n\n   HealthContributorAutoConfiguration#pingHealthContributor matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   HealthEndpointAutoConfiguration matched:\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n\n   HealthEndpointConfiguration#healthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpoint matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:\n      - @ConditionalOnBooleanProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroups matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthStatusAggregator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   HibernateJpaAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)\n\n   HibernateJpaConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   HttpClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientObservationsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   HttpEncodingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.servlet.encoding.enabled=true) matched (OnPropertyCondition)\n\n   HttpEncodingAutoConfiguration#characterEncodingFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)\n\n   HttpMessageConvertersAutoConfiguration#messageConverters matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:\n      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (management.endpoints.jackson.isolated-object-mapper=true) matched (OnPropertyCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n      - @ConditionalOnPreferredJsonMapper JACKSON no property was configured and Jackson is the default (OnPreferredJsonMapperCondition)\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcClientAutoConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   JdbcTemplateConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#jpaVendorAdapter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#transactionManager matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.JpaWebConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JtaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.jta.enabled=true) matched (OnPropertyCondition)\n\n   JvmMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#classLoaderMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmGcMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAnnotationDrivenConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory matched:\n      - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration matched:\n      - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)\n\n   KafkaAutoConfiguration#kafkaAdmin matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaConsumerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaProducerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaProducerListener matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)\n\n   LettuceConnectionConfiguration matched:\n      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.redis.client-type=lettuce) matched (OnPropertyCondition)\n\n   LettuceConnectionConfiguration#lettuceClientResources matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   LettuceMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.lettuce.core.RedisClient', 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LettuceMetricsAutoConfiguration#micrometerOptions matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.metrics.MicrometerOptions; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:\n      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)\n      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration#logbackMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:\n      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)\n\n   MetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MetricsAutoConfiguration#micrometerClock matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found bean 'braveTracerBridge' (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#defaultTracingObservationHandler matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.DefaultTracingObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#propagatingReceiverTracingObservationHandler matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.propagation.Propagator; SearchStrategy: all) found bean 'bravePropagator'; @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#propagatingSenderTracingObservationHandler matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.propagation.Propagator; SearchStrategy: all) found bean 'bravePropagator'; @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.servlet.multipart.enabled=true) matched (OnPropertyCondition)\n\n   MultipartAutoConfiguration#multipartConfigElement matched:\n      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration#multipartResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NamedParameterJdbcTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NettyAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)\n\n   NoOpCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)\n\n   ObservationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)\n\n   ObservationAutoConfiguration#observationRegistry matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found bean 'braveTracerBridge' (OnBeanCondition)\n\n   ObservationAutoConfiguration.MetricsWithTracingConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:\n      - @ConditionalOnBooleanProperty (spring.dao.exceptiontranslation.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ReactorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)\n\n   ReactorNettyConfigurations.ReactorResourceFactoryConfiguration#reactorResourceFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.ReactorResourceFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)\n\n   RedisAutoConfiguration#redisConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#redisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#stringRedisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisCacheConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)\n\n   RedisHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisReactiveHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)\n\n   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:\n      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.VirtualThreadsExecutorEnabled found non-matching nested conditions @ConditionalOnThreading did not find VIRTUAL; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.NotReactiveWebApplication NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition)\n\n   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)\n\n   RestTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   RestTemplateAutoConfiguration#restTemplateBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestTemplateObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)\n\n   ScheduledTasksObservabilityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   ServletEndpointManagementContextConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n\n   ServletManagementContextAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:\n      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   SimpleCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)\n\n   SimpleMetricsExportAutoConfiguration matched:\n      - @ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true (OnMetricsExportEnabledCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SimpleMetricsExportAutoConfiguration#simpleConfig matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#pageableCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#sortCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#springDataWebSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SqlInitializationAutoConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.sql.init.enabled=true) matched (OnPropertyCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'spring.sql.init.mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)\n\n   SslAutoConfiguration#sslBundleRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   SslHealthContributorAutoConfiguration#sslHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: sslHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslHealthContributorAutoConfiguration#sslInfo matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslObservabilityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found beans 'sslBundleRegistry', 'simpleMeterRegistry' (OnBeanCondition)\n\n   StartupTimeMetricsListenerAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#processorMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#uptimeMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)\n\n   TaskExecutorConfigurations.AsyncConfigurerConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.AsyncConfigurerConfiguration#applicationTaskExecutorAsyncConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ModelCondition @ConditionalOnProperty (spring.task.execution.mode=force) did not find property 'spring.task.execution.mode'; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ExecutorBeanCondition @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (TaskExecutorConfigurations.OnExecutorCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)\n      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry', 'taskScheduler' (OnBeanCondition)\n\n   TaskSchedulingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n\n   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:\n      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration matched:\n      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskScheduler matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TomcatMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionManagerCustomizationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebClientAutoConfiguration#webClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration#webClientHttpConnectorCustomizer matched:\n      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'clientHttpConnector' (OnBeanCondition)\n\n   WebClientAutoConfiguration#webClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration.WebClientCodecsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.web.codec.CodecCustomizer; SearchStrategy: all) found beans 'jacksonCodecCustomizer', 'defaultCodecCustomizer' (OnBeanCondition)\n\n   WebClientAutoConfiguration.WebClientCodecsConfiguration#exchangeStrategiesCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebEndpointAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#endpointMediaTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#pathMappedEndpoints matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration#formContentFilter matched:\n      - @ConditionalOnBooleanProperty (spring.mvc.formcontent.filter.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:\n      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:\n      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:\n      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   WebSocketServletAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:\n      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n\nNegative matches:\n-----------------\n\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)\n\n   AopAutoConfiguration.ClassProxyingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AppOpticsMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)\n\n   ArtemisAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AtlasMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)\n\n   AuditAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)\n      Matched:\n         - @ConditionalOnBooleanProperty (management.auditevents.enabled=true) matched (OnPropertyCondition)\n\n   AuditEventsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.health.livenessstate.enabled=true) did not find property 'management.health.livenessstate.enabled' (OnPropertyCondition)\n\n   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.health.readinessstate.enabled=true) did not find property 'management.health.readinessstate.enabled' (OnPropertyCondition)\n\n   AvailabilityProbesAutoConfiguration:\n      Did not match:\n         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)\n\n   BatchAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)\n\n   BatchObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)\n\n   BeansEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   BravePropagationConfigurations.NoPropagation#noopPropagationFactory:\n      Did not match:\n         - @ConditionalOnMissingBean (types: brave.propagation.Propagation$Factory; SearchStrategy: all) found beans of type 'brave.propagation.Propagation$Factory' propagationFactory (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithoutBaggage:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.tracing.baggage.enabled=false) did not find property 'management.tracing.baggage.enabled' (OnPropertyCondition)\n\n   Cache2kCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)\n\n   CacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:\n      Did not match:\n         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)\n\n   CacheMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)\n\n   CachesEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CaffeineCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)\n\n   CassandraAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)\n\n   CassandraRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CloudFoundryActuatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n         - found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnBooleanProperty (management.cloudfoundry.enabled=true) matched (OnPropertyCondition)\n\n   CompositeMeterRegistryConfiguration:\n      Did not match:\n         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)\n\n   ConditionsReportEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ConfigurationPropertiesReportEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ConnectionFactoryHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   ConnectionPoolMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)\n\n   CouchbaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   CouchbaseHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:\n      Did not match:\n         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)\n\n   DataSourceCheckpointRestoreConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)\n\n   DataSourceConfiguration.Dbcp2:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourceConfiguration.Generic:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)\n\n   DataSourceConfiguration.OracleUcp:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourceConfiguration.Tomcat:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceJmxConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)\n\n   DatadogMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)\n\n   DynatraceMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)\n\n   ElasticMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)\n\n   ElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)\n\n   ElasticsearchReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)\n\n   ElasticsearchRestClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)\n\n   ElasticsearchRestHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)\n\n   EmbeddedLdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   EnvironmentEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ErrorWebFluxAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   FlywayAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FlywayEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FreeMarkerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)\n\n   GangliaMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)\n\n   GraphQlAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlRSocketAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlWebFluxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebFluxSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphiteMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)\n\n   GroovyTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)\n\n   GsonAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   GsonHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   H2ConsoleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)\n\n   HazelcastAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastJpaDependencyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HealthEndpointReactiveWebExtensionConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n\n   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   HeapDumpWebEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint the configured access for endpoint 'heapdump' is NONE (OnAvailableEndpointCondition)\n\n   HibernateMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)\n\n   HttpExchangesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)\n      Matched:\n         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnBooleanProperty (management.httpexchanges.recording.enabled=true) matched (OnPropertyCondition)\n\n   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n\n   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:\n      Did not match:\n         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n\n   HttpExchangesEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   HttpHandlerAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n\n   HttpServiceClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.service.registry.HttpServiceProxyRegistry; SearchStrategy: all) did not find any beans of type org.springframework.web.service.registry.HttpServiceProxyRegistry (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.client.support.RestClientAdapter' (OnClassCondition)\n         - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   HumioMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)\n\n   HypermediaAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)\n\n   InfinispanCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)\n\n   InfluxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)\n\n   InfoContributorAutoConfiguration#buildInfoContributor:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      Matched:\n         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#envInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#gitInfoContributor:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      Matched:\n         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#javaInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#osInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#processInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.process.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#sslInfo:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.ssl.enabled is not true (OnEnabledInfoContributorCondition)\n      Matched:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   InfoContributorAutoConfiguration#sslInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.ssl.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   IntegrationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)\n\n   IntegrationGraphEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)\n\n   JCacheCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)\n\n   JdbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)\n\n   JedisConnectionConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)\n\n   JerseyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)\n\n   JerseySameManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   JerseyServerMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener' (OnClassCondition)\n\n   JerseyWebEndpointManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   JettyMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)\n\n   JmsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)\n\n   JmsHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   JmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)\n\n   JmxEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) did not find property 'spring.jmx.enabled' (OnPropertyCondition)\n\n   JmxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)\n\n   JndiConnectionFactoryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)\n\n   JndiDataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'spring.datasource.jndi-name' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   JndiJtaConfiguration:\n      Did not match:\n         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)\n\n   JooqAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)\n\n   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:\n      Did not match:\n         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'spring.data.jpa.repositories.bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'spring.data.jpa.repositories.bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)\n\n   JsonbAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JsonbHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JvmMetricsAutoConfiguration#virtualThreadMetrics:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.java21.instrument.binder.jdk.VirtualThreadMetrics' (OnClassCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurerVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) found beans of type 'org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer' kafkaListenerContainerFactoryConfigurer (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaJaasInitializer:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.kafka.jaas.enabled=true) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)\n\n   KafkaAutoConfiguration#kafkaRetryTopicConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.kafka.retry.topic.enabled=true) did not find property 'spring.kafka.retry.topic.enabled' (OnPropertyCondition)\n\n   KafkaAutoConfiguration#kafkaTransactionManager:\n      Did not match:\n         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)\n\n   KafkaStreamsAnnotationDrivenConfiguration:\n      Did not match:\n         - @ConditionalOnBean (names: defaultKafkaStreamsBuilder; SearchStrategy: all) did not find any beans named defaultKafkaStreamsBuilder (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)\n\n   KairosMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)\n\n   LdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)\n\n   LdapHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)\n\n   LdapRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactoryVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' redisConnectionFactory (OnBeanCondition)\n\n   LiquibaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)\n\n   LiquibaseEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)\n\n   Log4J2MetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)\n\n   LogFileWebEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   LoggersEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   MailHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)\n         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   MailSenderAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)\n\n   MailSenderValidatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mail.test-connection=true) did not find property 'spring.mail.test-connection' (OnPropertyCondition)\n\n   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:\n      Did not match:\n         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)\n\n   ManagementWebSecurityAutoConfiguration:\n      Did not match:\n         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n\n   MappingsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   MessageSourceAutoConfiguration:\n      Did not match:\n         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)\n\n   MetricsAspectsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   MetricsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MicrometerTracingAutoConfiguration.SpanAspectConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   MongoAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)\n\n   MongoMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)\n\n   MongoReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)\n\n   MongoReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MustacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)\n\n   Neo4jAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   NewRelicMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)\n\n   NoOpMeterRegistryConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)\n\n   NoopTracerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found beans of type 'io.micrometer.tracing.Tracer' braveTracerBridge (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   OAuth2AuthorizationServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)\n\n   OAuth2AuthorizationServerJwtAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.nimbusds.jose.jwk.source.JWKSource' (OnClassCondition)\n\n   OAuth2ClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   OAuth2ClientWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)\n\n   OAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found beans of type 'io.micrometer.tracing.Tracer' braveTracerBridge (OnBeanCondition)\n\n   ObservationAutoConfiguration.ObservedAspectConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   ObservationAutoConfiguration.OnlyMetricsConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   ObservationAutoConfiguration.OnlyTracingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n\n   OpenTelemetryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)\n\n   OpenTelemetryLoggingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.api.OpenTelemetry' (OnClassCondition)\n\n   OpenTelemetryTracingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)\n\n   OtlpLoggingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.api.OpenTelemetry' (OnClassCondition)\n\n   OtlpMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)\n\n   OtlpTracingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)\n\n   ProjectInfoAutoConfiguration#buildProperties:\n      Did not match:\n         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)\n\n   ProjectInfoAutoConfiguration#gitProperties:\n      Did not match:\n         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)\n\n   PrometheusExemplarsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.prometheus.metrics.tracer.common.SpanContext' (OnClassCondition)\n\n   PrometheusMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.prometheusmetrics.PrometheusMeterRegistry' (OnClassCondition)\n\n   PulsarAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   PulsarReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   QuartzAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   QuartzEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   R2dbcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)\n\n   R2dbcInitializationConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)\n\n   R2dbcObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcProxyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcTransactionManagerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)\n\n   RSocketGraphQlClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   RSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketRequesterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)\n\n   RSocketServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)\n\n   RSocketStrategiesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RabbitAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)\n\n   RabbitHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)\n\n   RabbitMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)\n\n   ReactiveCloudFoundryActuatorAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n\n   ReactiveElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)\n\n   ReactiveElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ReactiveHttpServiceClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.service.registry.HttpServiceProxyRegistry; SearchStrategy: all) did not find any beans of type org.springframework.web.service.registry.HttpServiceProxyRegistry (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.support.WebClientAdapter' (OnClassCondition)\n\n   ReactiveManagementContextAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   ReactiveManagementWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveMultipartAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.http.codec.multipart.DefaultPartHttpMessageReader', 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   ReactiveOAuth2ClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   ReactiveOAuth2ClientWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveOAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveUserDetailsServiceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)\n\n   ReactiveWebServerFactoryAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage' (OnClassCondition)\n\n   RedisHealthContributorAutoConfiguration#redisHealthContributor:\n      Did not match:\n         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)\n\n   RepositoryRestMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)\n\n   Saml2RelyingPartyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)\n\n   SbomEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ScheduledTasksEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   SecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)\n\n   SecurityFilterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)\n\n   SecurityRequestMatchersManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)\n\n   SendGridAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)\n\n   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.server.add-application-context-header=true) did not find property 'management.server.add-application-context-header' (OnPropertyCondition)\n\n   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedJetty:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedUndertow:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   SessionAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   SessionsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   ShutdownEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint the configured access for endpoint 'shutdown' is NONE (OnAvailableEndpointCondition)\n\n   SignalFxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)\n\n   SpringApplicationAdminJmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.application.admin.enabled=true) did not find property 'spring.application.admin.enabled' (OnPropertyCondition)\n\n   SslObservabilityAutoConfiguration#sslInfoProvider:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) found beans of type 'org.springframework.boot.info.SslInfo' sslInfo (OnBeanCondition)\n\n   StackdriverMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)\n\n   StartupEndpointAutoConfiguration:\n      Did not match:\n         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)\n\n   StatsdMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskSchedulerVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   ThreadDumpEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ThymeleafAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)\n\n   TransactionAutoConfiguration#transactionalOperator:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)\n\n   UserDetailsServiceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)\n\n   ValidationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)\n\n   WebFluxAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   WebFluxEndpointManagementContextConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n\n   WebFluxObservationAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.observation.Observation', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n\n   WebMvcAutoConfiguration#hiddenHttpMethodFilter:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mvc.hiddenmethod.filter.enabled=true) did not find property 'spring.mvc.hiddenmethod.filter.enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mvc.problemdetails.enabled=true) did not find property 'spring.mvc.problemdetails.enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:\n      Did not match:\n         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)\n\n   WebServiceTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)\n\n   WebServicesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)\n\n   WebSessionIdResolverAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   WebSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)\n\n   WebSocketReactiveAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)\n\n   XADataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   ZipkinAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Encoding' (OnClassCondition)\n\n\nExclusions:\n-----------\n\n    None\n\n\nUnconditional classes:\n----------------------\n\n    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration\n\n    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration\n\n    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration\n\n    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration\n\n\n","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logReport(ConditionEvaluationReportLogger.java:72)\nCaller+1\t at org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener$ConditionEvaluationReportListener.onApplicationEvent(ConditionEvaluationReportLoggingListener.java:135)\nCaller+2\t at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:180)\nCaller+3\t at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:173)\nCaller+4\t at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:151)\n","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","method":"logReport","file":"ConditionEvaluationReportLogger.java","line":"72","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.611152+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","thread_name":"main","timestamp":"2025-06-12 18:01:00,611","level":"INFO","thread":"main","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplication","message":"Started MySpringBootProjectApplication in 4.704 seconds (process running for 4.974)","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59)\nCaller+1\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:322)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)\nCaller+4\t at com.ms.my_spring_boot_project.MySpringBootProjectApplication.main(MySpringBootProjectApplication.java:17)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarted","file":"StartupInfoLogger.java","line":"59","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.619807+05:30","traceId":"684ac8847acede747a62740b308e0507","spanId":"7a62740b308e0507","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:00,619","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac8847acede747a62740b308e0507, spanId=7a62740b308e0507","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8847acede747a62740b308e0507","spanId":"7a62740b308e0507","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.684959+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.availability.ApplicationAvailabilityBean","thread_name":"main","timestamp":"2025-06-12 18:01:00,684","level":"DEBUG","thread":"main","logger":"org.springframework.boot.availability.ApplicationAvailabilityBean","message":"Application availability state LivenessState changed to CORRECT","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:77)\nCaller+1\t at org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:38)\nCaller+2\t at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:180)\nCaller+3\t at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:173)\nCaller+4\t at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:151)\n","class":"org.springframework.boot.availability.ApplicationAvailabilityBean","method":"onApplicationEvent","file":"ApplicationAvailabilityBean.java","line":"77","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.686521+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.availability.ApplicationAvailabilityBean","thread_name":"main","timestamp":"2025-06-12 18:01:00,686","level":"DEBUG","thread":"main","logger":"org.springframework.boot.availability.ApplicationAvailabilityBean","message":"Application availability state ReadinessState changed to ACCEPTING_TRAFFIC","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:77)\nCaller+1\t at org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:38)\nCaller+2\t at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:180)\nCaller+3\t at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:173)\nCaller+4\t at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:151)\n","class":"org.springframework.boot.availability.ApplicationAvailabilityBean","method":"onApplicationEvent","file":"ApplicationAvailabilityBean.java","line":"77","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:00.812805+05:30","traceId":"684ac8840c40f30ab20d4e4ed215a72a","spanId":"b20d4e4ed215a72a","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:00,812","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac8840c40f30ab20d4e4ed215a72a, spanId=b20d4e4ed215a72a","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8840c40f30ab20d4e4ed215a72a","spanId":"b20d4e4ed215a72a","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:01.016192+05:30","traceId":"684ac88512617aa450b4ed7f7590962c","spanId":"50b4ed7f7590962c","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:01,016","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac88512617aa450b4ed7f7590962c, spanId=50b4ed7f7590962c","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88512617aa450b4ed7f7590962c","spanId":"50b4ed7f7590962c","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:01.211211+05:30","traceId":"684ac8857f21306864fc7d25ecc80e50","spanId":"64fc7d25ecc80e50","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:01,211","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration failed","context":"traceId=684ac8857f21306864fc7d25ecc80e50, spanId=64fc7d25ecc80e50","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8857f21306864fc7d25ecc80e50","spanId":"64fc7d25ecc80e50","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:01.410126+05:30","traceId":"684ac885703017c3ccc6ec57176031f5","spanId":"ccc6ec57176031f5","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:01,410","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac885703017c3ccc6ec57176031f5, spanId=ccc6ec57176031f5","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac885703017c3ccc6ec57176031f5","spanId":"ccc6ec57176031f5","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:01.609066+05:30","traceId":"684ac885977552c5fa0a958cbf0e437d","spanId":"fa0a958cbf0e437d","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:01,609","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac885977552c5fa0a958cbf0e437d, spanId=fa0a958cbf0e437d","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac885977552c5fa0a958cbf0e437d","spanId":"fa0a958cbf0e437d","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:01.813+05:30","traceId":"684ac8852cdead59b13266a003ddc90b","spanId":"b13266a003ddc90b","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:01,813","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac8852cdead59b13266a003ddc90b, spanId=b13266a003ddc90b","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8852cdead59b13266a003ddc90b","spanId":"b13266a003ddc90b","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:02.011466+05:30","traceId":"684ac886331d97fa9923656f6532aa9f","spanId":"9923656f6532aa9f","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:02,011","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac886331d97fa9923656f6532aa9f, spanId=9923656f6532aa9f","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac886331d97fa9923656f6532aa9f","spanId":"9923656f6532aa9f","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:02.210545+05:30","traceId":"684ac886487ece9e25bbc7503bb3d391","spanId":"25bbc7503bb3d391","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:02,210","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login successful","context":"traceId=684ac886487ece9e25bbc7503bb3d391, spanId=25bbc7503bb3d391","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac886487ece9e25bbc7503bb3d391","spanId":"25bbc7503bb3d391","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:02.41159+05:30","traceId":"684ac88657359468459e30a7fdda3d23","spanId":"459e30a7fdda3d23","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:02,411","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac88657359468459e30a7fdda3d23, spanId=459e30a7fdda3d23","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88657359468459e30a7fdda3d23","spanId":"459e30a7fdda3d23","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:02.611504+05:30","traceId":"684ac8869891dd8c429c1063d98cf4d9","spanId":"429c1063d98cf4d9","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:02,611","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac8869891dd8c429c1063d98cf4d9, spanId=429c1063d98cf4d9","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8869891dd8c429c1063d98cf4d9","spanId":"429c1063d98cf4d9","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:02.811018+05:30","traceId":"684ac88611b1c4bbdc60db1bd2529245","spanId":"dc60db1bd2529245","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:02,811","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login successful","context":"traceId=684ac88611b1c4bbdc60db1bd2529245, spanId=dc60db1bd2529245","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88611b1c4bbdc60db1bd2529245","spanId":"dc60db1bd2529245","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:03.01398+05:30","traceId":"684ac8875d293606da70e81c3732e093","spanId":"da70e81c3732e093","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:03,013","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Data fetched from database","context":"traceId=684ac8875d293606da70e81c3732e093, spanId=da70e81c3732e093","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8875d293606da70e81c3732e093","spanId":"da70e81c3732e093","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:03.213837+05:30","traceId":"684ac8875654f2faf90f5e87f8833ccf","spanId":"f90f5e87f8833ccf","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:03,213","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Data fetched from database","context":"traceId=684ac8875654f2faf90f5e87f8833ccf, spanId=f90f5e87f8833ccf","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8875654f2faf90f5e87f8833ccf","spanId":"f90f5e87f8833ccf","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:03.413596+05:30","traceId":"684ac88720a8ffe1c7a8255a5de42794","spanId":"c7a8255a5de42794","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:03,413","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88720a8ffe1c7a8255a5de42794, spanId=c7a8255a5de42794","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88720a8ffe1c7a8255a5de42794","spanId":"c7a8255a5de42794","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:03.613429+05:30","traceId":"684ac88718420138906289f00df715d7","spanId":"906289f00df715d7","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:03,613","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88718420138906289f00df715d7, spanId=906289f00df715d7","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88718420138906289f00df715d7","spanId":"906289f00df715d7","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:03.812462+05:30","traceId":"684ac887983279cd0a39c5067def18d1","spanId":"0a39c5067def18d1","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:03,812","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac887983279cd0a39c5067def18d1, spanId=0a39c5067def18d1","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac887983279cd0a39c5067def18d1","spanId":"0a39c5067def18d1","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:04.012014+05:30","traceId":"684ac88861cd5528866913ff4c0193ab","spanId":"866913ff4c0193ab","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:04,012","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88861cd5528866913ff4c0193ab, spanId=866913ff4c0193ab","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88861cd5528866913ff4c0193ab","spanId":"866913ff4c0193ab","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:04.2138+05:30","traceId":"684ac8885213b76b83a48ecbefb0a8dc","spanId":"83a48ecbefb0a8dc","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:04,213","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac8885213b76b83a48ecbefb0a8dc, spanId=83a48ecbefb0a8dc","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8885213b76b83a48ecbefb0a8dc","spanId":"83a48ecbefb0a8dc","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:04.41404+05:30","traceId":"684ac888c8c5076220e82a0dc7ddc699","spanId":"20e82a0dc7ddc699","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:04,414","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac888c8c5076220e82a0dc7ddc699, spanId=20e82a0dc7ddc699","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac888c8c5076220e82a0dc7ddc699","spanId":"20e82a0dc7ddc699","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:04.613041+05:30","traceId":"684ac8883b834a45980c1c2defa5cf8a","spanId":"980c1c2defa5cf8a","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:04,613","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order failed due to payment error","context":"traceId=684ac8883b834a45980c1c2defa5cf8a, spanId=980c1c2defa5cf8a","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8883b834a45980c1c2defa5cf8a","spanId":"980c1c2defa5cf8a","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:04.8128+05:30","traceId":"684ac8881e4dce1a6d0972336f4b6794","spanId":"6d0972336f4b6794","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:04,812","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order failed due to payment error","context":"traceId=684ac8881e4dce1a6d0972336f4b6794, spanId=6d0972336f4b6794","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8881e4dce1a6d0972336f4b6794","spanId":"6d0972336f4b6794","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:05.009137+05:30","traceId":"684ac889e73e58bf14774cf72b173c3d","spanId":"14774cf72b173c3d","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:05,009","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac889e73e58bf14774cf72b173c3d, spanId=14774cf72b173c3d","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac889e73e58bf14774cf72b173c3d","spanId":"14774cf72b173c3d","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:05.212883+05:30","traceId":"684ac889a0ad038f3a4d72db7e2a05a1","spanId":"3a4d72db7e2a05a1","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:05,212","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac889a0ad038f3a4d72db7e2a05a1, spanId=3a4d72db7e2a05a1","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac889a0ad038f3a4d72db7e2a05a1","spanId":"3a4d72db7e2a05a1","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:05.409611+05:30","traceId":"684ac889db4ca15c314814c064d1edae","spanId":"314814c064d1edae","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:05,409","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac889db4ca15c314814c064d1edae, spanId=314814c064d1edae","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac889db4ca15c314814c064d1edae","spanId":"314814c064d1edae","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:05.613621+05:30","traceId":"684ac88971a36de7282d0426c181a1ec","spanId":"282d0426c181a1ec","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:05,613","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88971a36de7282d0426c181a1ec, spanId=282d0426c181a1ec","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88971a36de7282d0426c181a1ec","spanId":"282d0426c181a1ec","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:05.813606+05:30","traceId":"684ac8890956d00d7b8d31889bd08d06","spanId":"7b8d31889bd08d06","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:05,813","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Data fetched from database","context":"traceId=684ac8890956d00d7b8d31889bd08d06, spanId=7b8d31889bd08d06","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8890956d00d7b8d31889bd08d06","spanId":"7b8d31889bd08d06","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:06.009683+05:30","traceId":"684ac88aceab43e3fe73f2554a5c2474","spanId":"fe73f2554a5c2474","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:06,009","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac88aceab43e3fe73f2554a5c2474, spanId=fe73f2554a5c2474","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88aceab43e3fe73f2554a5c2474","spanId":"fe73f2554a5c2474","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:06.209076+05:30","traceId":"684ac88a661ea150f3520cb2d0e0d252","spanId":"f3520cb2d0e0d252","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:06,209","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac88a661ea150f3520cb2d0e0d252, spanId=f3520cb2d0e0d252","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88a661ea150f3520cb2d0e0d252","spanId":"f3520cb2d0e0d252","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:06.414225+05:30","traceId":"684ac88a6aa7e3c51226e25e1e6e2bfc","spanId":"1226e25e1e6e2bfc","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:06,414","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration completed","context":"traceId=684ac88a6aa7e3c51226e25e1e6e2bfc, spanId=1226e25e1e6e2bfc","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88a6aa7e3c51226e25e1e6e2bfc","spanId":"1226e25e1e6e2bfc","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:06.613697+05:30","traceId":"684ac88a50d7690d2330236c9bf8f493","spanId":"2330236c9bf8f493","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:06,613","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac88a50d7690d2330236c9bf8f493, spanId=2330236c9bf8f493","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88a50d7690d2330236c9bf8f493","spanId":"2330236c9bf8f493","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:06.808175+05:30","traceId":"684ac88af2112370b97c05680ea50fe1","spanId":"b97c05680ea50fe1","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:06,808","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login successful","context":"traceId=684ac88af2112370b97c05680ea50fe1, spanId=b97c05680ea50fe1","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88af2112370b97c05680ea50fe1","spanId":"b97c05680ea50fe1","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:07.012262+05:30","traceId":"684ac88bbe53328f0eaee78a152dbc96","spanId":"0eaee78a152dbc96","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:07,012","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88bbe53328f0eaee78a152dbc96, spanId=0eaee78a152dbc96","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88bbe53328f0eaee78a152dbc96","spanId":"0eaee78a152dbc96","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:07.2134+05:30","traceId":"684ac88bde093f1a18f414f4e0b16e49","spanId":"18f414f4e0b16e49","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:07,213","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac88bde093f1a18f414f4e0b16e49, spanId=18f414f4e0b16e49","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88bde093f1a18f414f4e0b16e49","spanId":"18f414f4e0b16e49","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:07.410747+05:30","traceId":"684ac88b05e7a3516515485588b3eb95","spanId":"6515485588b3eb95","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:07,410","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration completed","context":"traceId=684ac88b05e7a3516515485588b3eb95, spanId=6515485588b3eb95","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88b05e7a3516515485588b3eb95","spanId":"6515485588b3eb95","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:07.613369+05:30","traceId":"684ac88b56dc20fefed650f59fc03e31","spanId":"fed650f59fc03e31","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:07,613","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac88b56dc20fefed650f59fc03e31, spanId=fed650f59fc03e31","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88b56dc20fefed650f59fc03e31","spanId":"fed650f59fc03e31","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:07.813206+05:30","traceId":"684ac88b3afb5a92f4192206c8707504","spanId":"f4192206c8707504","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:07,813","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration completed","context":"traceId=684ac88b3afb5a92f4192206c8707504, spanId=f4192206c8707504","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88b3afb5a92f4192206c8707504","spanId":"f4192206c8707504","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:08.00912+05:30","traceId":"684ac88c8ed0ab20c05200743d5b8dd1","spanId":"c05200743d5b8dd1","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:08,009","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88c8ed0ab20c05200743d5b8dd1, spanId=c05200743d5b8dd1","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88c8ed0ab20c05200743d5b8dd1","spanId":"c05200743d5b8dd1","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:08.212035+05:30","traceId":"684ac88c1baf5fced1c090fc815f2ce3","spanId":"d1c090fc815f2ce3","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:08,212","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac88c1baf5fced1c090fc815f2ce3, spanId=d1c090fc815f2ce3","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88c1baf5fced1c090fc815f2ce3","spanId":"d1c090fc815f2ce3","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:08.413297+05:30","traceId":"684ac88c68ec433570b7eecb3a346557","spanId":"70b7eecb3a346557","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:08,413","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login successful","context":"traceId=684ac88c68ec433570b7eecb3a346557, spanId=70b7eecb3a346557","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88c68ec433570b7eecb3a346557","spanId":"70b7eecb3a346557","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:08.611136+05:30","traceId":"684ac88c391297f3697ab22a07bbb4cc","spanId":"697ab22a07bbb4cc","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:08,611","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac88c391297f3697ab22a07bbb4cc, spanId=697ab22a07bbb4cc","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88c391297f3697ab22a07bbb4cc","spanId":"697ab22a07bbb4cc","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:08.809278+05:30","traceId":"684ac88cf6cb651d1807f45f512f29f0","spanId":"1807f45f512f29f0","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:08,809","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration completed","context":"traceId=684ac88cf6cb651d1807f45f512f29f0, spanId=1807f45f512f29f0","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88cf6cb651d1807f45f512f29f0","spanId":"1807f45f512f29f0","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:09.011986+05:30","traceId":"684ac88d55ca3c875834a460adfb033a","spanId":"5834a460adfb033a","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:09,011","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac88d55ca3c875834a460adfb033a, spanId=5834a460adfb033a","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88d55ca3c875834a460adfb033a","spanId":"5834a460adfb033a","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:09.214043+05:30","traceId":"684ac88d0f47d8b9e2568f1af0af8823","spanId":"e2568f1af0af8823","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:09,214","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac88d0f47d8b9e2568f1af0af8823, spanId=e2568f1af0af8823","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88d0f47d8b9e2568f1af0af8823","spanId":"e2568f1af0af8823","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:09.411492+05:30","traceId":"684ac88dce71d4e0c5ddd4ec28dd954e","spanId":"c5ddd4ec28dd954e","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:09,411","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac88dce71d4e0c5ddd4ec28dd954e, spanId=c5ddd4ec28dd954e","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88dce71d4e0c5ddd4ec28dd954e","spanId":"c5ddd4ec28dd954e","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:09.611331+05:30","traceId":"684ac88dff2749ef0a83df81fab7a701","spanId":"0a83df81fab7a701","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:09,611","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order failed due to payment error","context":"traceId=684ac88dff2749ef0a83df81fab7a701, spanId=0a83df81fab7a701","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88dff2749ef0a83df81fab7a701","spanId":"0a83df81fab7a701","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:09.8128+05:30","traceId":"684ac88de0b220af37055b54a5b7242f","spanId":"37055b54a5b7242f","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:09,812","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Data fetched from database","context":"traceId=684ac88de0b220af37055b54a5b7242f, spanId=37055b54a5b7242f","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88de0b220af37055b54a5b7242f","spanId":"37055b54a5b7242f","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:10.008543+05:30","traceId":"684ac88e47e91dfd36a3c3fd9b4cf12f","spanId":"36a3c3fd9b4cf12f","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:10,008","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order failed due to payment error","context":"traceId=684ac88e47e91dfd36a3c3fd9b4cf12f, spanId=36a3c3fd9b4cf12f","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88e47e91dfd36a3c3fd9b4cf12f","spanId":"36a3c3fd9b4cf12f","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:10.211341+05:30","traceId":"684ac88e6ea988d30ac749d45bd45cde","spanId":"0ac749d45bd45cde","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:10,211","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac88e6ea988d30ac749d45bd45cde, spanId=0ac749d45bd45cde","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88e6ea988d30ac749d45bd45cde","spanId":"0ac749d45bd45cde","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:10.409031+05:30","traceId":"684ac88efdc965213706f7dc8ad3a373","spanId":"3706f7dc8ad3a373","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:10,409","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration failed","context":"traceId=684ac88efdc965213706f7dc8ad3a373, spanId=3706f7dc8ad3a373","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88efdc965213706f7dc8ad3a373","spanId":"3706f7dc8ad3a373","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:10.613417+05:30","traceId":"684ac88e449d71a32eab68b3cc332eb1","spanId":"2eab68b3cc332eb1","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:10,613","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac88e449d71a32eab68b3cc332eb1, spanId=2eab68b3cc332eb1","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88e449d71a32eab68b3cc332eb1","spanId":"2eab68b3cc332eb1","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:10.813648+05:30","traceId":"684ac88ee3dc7f4252d8cc672c5ca181","spanId":"52d8cc672c5ca181","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:10,813","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac88ee3dc7f4252d8cc672c5ca181, spanId=52d8cc672c5ca181","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88ee3dc7f4252d8cc672c5ca181","spanId":"52d8cc672c5ca181","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:11.010789+05:30","traceId":"684ac88f4b6bb19667be84e8fcb09f84","spanId":"67be84e8fcb09f84","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:11,010","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Data fetched from database","context":"traceId=684ac88f4b6bb19667be84e8fcb09f84, spanId=67be84e8fcb09f84","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88f4b6bb19667be84e8fcb09f84","spanId":"67be84e8fcb09f84","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:11.213519+05:30","traceId":"684ac88ff9714e5175dfc0144c1928a6","spanId":"75dfc0144c1928a6","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:11,213","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call succeeded","context":"traceId=684ac88ff9714e5175dfc0144c1928a6, spanId=75dfc0144c1928a6","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88ff9714e5175dfc0144c1928a6","spanId":"75dfc0144c1928a6","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:11.41143+05:30","traceId":"684ac88f841728df77885c9e65dce036","spanId":"77885c9e65dce036","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:11,411","level":"ERROR","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login successful","context":"traceId=684ac88f841728df77885c9e65dce036, spanId=77885c9e65dce036","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:44)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"44","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88f841728df77885c9e65dce036","spanId":"77885c9e65dce036","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:11.615546+05:30","traceId":"684ac88fffc866038ef01be62aa29c9b","spanId":"8ef01be62aa29c9b","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:11,615","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration failed","context":"traceId=684ac88fffc866038ef01be62aa29c9b, spanId=8ef01be62aa29c9b","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88fffc866038ef01be62aa29c9b","spanId":"8ef01be62aa29c9b","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:11.812799+05:30","traceId":"684ac88f6ac7bf20a6d04323e082ff0a","spanId":"a6d04323e082ff0a","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:11,812","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration failed","context":"traceId=684ac88f6ac7bf20a6d04323e082ff0a, spanId=a6d04323e082ff0a","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac88f6ac7bf20a6d04323e082ff0a","spanId":"a6d04323e082ff0a","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:12.007979+05:30","traceId":"684ac890f4950f3f71f9405094d9ad9f","spanId":"71f9405094d9ad9f","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:12,007","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac890f4950f3f71f9405094d9ad9f, spanId=71f9405094d9ad9f","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac890f4950f3f71f9405094d9ad9f","spanId":"71f9405094d9ad9f","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:12.213344+05:30","traceId":"684ac890289a04eb9a94bf6ad11a0527","spanId":"9a94bf6ad11a0527","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:12,213","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order failed due to payment error","context":"traceId=684ac890289a04eb9a94bf6ad11a0527, spanId=9a94bf6ad11a0527","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac890289a04eb9a94bf6ad11a0527","spanId":"9a94bf6ad11a0527","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:12.41039+05:30","traceId":"684ac89010624eaac0742e0e67952264","spanId":"c0742e0e67952264","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:12,410","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac89010624eaac0742e0e67952264, spanId=c0742e0e67952264","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac89010624eaac0742e0e67952264","spanId":"c0742e0e67952264","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:12.61023+05:30","traceId":"684ac890f390560c2489b6a5a65f2462","spanId":"2489b6a5a65f2462","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:12,610","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration failed","context":"traceId=684ac890f390560c2489b6a5a65f2462, spanId=2489b6a5a65f2462","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac890f390560c2489b6a5a65f2462","spanId":"2489b6a5a65f2462","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:12.812423+05:30","traceId":"684ac890b86eaec050bc4d6af2dfe821","spanId":"50bc4d6af2dfe821","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:12,812","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac890b86eaec050bc4d6af2dfe821, spanId=50bc4d6af2dfe821","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac890b86eaec050bc4d6af2dfe821","spanId":"50bc4d6af2dfe821","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:13.008623+05:30","traceId":"684ac8911a4fb300b313c2b20c2ddd85","spanId":"b313c2b20c2ddd85","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:13,008","level":"INFO","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac8911a4fb300b313c2b20c2ddd85, spanId=b313c2b20c2ddd85","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:38)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"38","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8911a4fb300b313c2b20c2ddd85","spanId":"b313c2b20c2ddd85","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:13.213551+05:30","traceId":"684ac891dce62f396b70de0ca947aa34","spanId":"6b70de0ca947aa34","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:13,213","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac891dce62f396b70de0ca947aa34, spanId=6b70de0ca947aa34","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac891dce62f396b70de0ca947aa34","spanId":"6b70de0ca947aa34","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:13.413746+05:30","traceId":"684ac8913c58a3cd2ddce8d7603c4d8e","spanId":"2ddce8d7603c4d8e","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:13,413","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Null pointer exception occurred","context":"traceId=684ac8913c58a3cd2ddce8d7603c4d8e, spanId=2ddce8d7603c4d8e","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8913c58a3cd2ddce8d7603c4d8e","spanId":"2ddce8d7603c4d8e","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:13.611003+05:30","traceId":"684ac891d6af699144f59ed44be22ccc","spanId":"44f59ed44be22ccc","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:13,611","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order failed due to payment error","context":"traceId=684ac891d6af699144f59ed44be22ccc, spanId=44f59ed44be22ccc","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac891d6af699144f59ed44be22ccc","spanId":"44f59ed44be22ccc","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:13.81347+05:30","traceId":"684ac891d82c3ac01d3d75c8f7fae018","spanId":"1d3d75c8f7fae018","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:13,813","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac891d82c3ac01d3d75c8f7fae018, spanId=1d3d75c8f7fae018","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac891d82c3ac01d3d75c8f7fae018","spanId":"1d3d75c8f7fae018","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.009276+05:30","traceId":"684ac8925dbb2925047dcea87522455f","spanId":"047dcea87522455f","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:14,009","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User registration completed","context":"traceId=684ac8925dbb2925047dcea87522455f, spanId=047dcea87522455f","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8925dbb2925047dcea87522455f","spanId":"047dcea87522455f","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.21361+05:30","traceId":"684ac892b8fb2d826607d56ce30ca92c","spanId":"6607d56ce30ca92c","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:14,213","level":"DEBUG","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"Order placed successfully","context":"traceId=684ac892b8fb2d826607d56ce30ca92c, spanId=6607d56ce30ca92c","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:47)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac892b8fb2d826607d56ce30ca92c","spanId":"6607d56ce30ca92c","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.413797+05:30","traceId":"684ac8929cff617fc92558a21fe1a9c0","spanId":"c92558a21fe1a9c0","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:14,413","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"External API call failed","context":"traceId=684ac8929cff617fc92558a21fe1a9c0, spanId=c92558a21fe1a9c0","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac8929cff617fc92558a21fe1a9c0","spanId":"c92558a21fe1a9c0","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.614003+05:30","traceId":"684ac89294a78909f2bdf13f5d991352","spanId":"f2bdf13f5d991352","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:14,614","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login failed","context":"traceId=684ac89294a78909f2bdf13f5d991352, spanId=f2bdf13f5d991352","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac89294a78909f2bdf13f5d991352","spanId":"f2bdf13f5d991352","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.808985+05:30","traceId":"684ac892de79efea10b96779e238ef7f","spanId":"10b96779e238ef7f","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"com.ms.my_spring_boot_project.logging.LogGenerator","thread_name":"scheduling-1","timestamp":"2025-06-12 18:01:14,808","level":"WARN","thread":"scheduling-1","logger":"com.ms.my_spring_boot_project.logging.LogGenerator","message":"User login successful","context":"traceId=684ac892de79efea10b96779e238ef7f, spanId=10b96779e238ef7f","exception":"","caller":"Caller+0\t at com.ms.my_spring_boot_project.logging.LogGenerator.generateLogs(LogGenerator.java:41)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:128)\nCaller+4\t at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$1(ScheduledMethodRunnable.java:122)\n","class":"com.ms.my_spring_boot_project.logging.LogGenerator","method":"generateLogs","file":"LogGenerator.java","line":"41","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"684ac892de79efea10b96779e238ef7f","spanId":"10b96779e238ef7f","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.88362+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.availability.ApplicationAvailabilityBean","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,883","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.boot.availability.ApplicationAvailabilityBean","message":"Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:77)\nCaller+1\t at org.springframework.boot.availability.ApplicationAvailabilityBean.onApplicationEvent(ApplicationAvailabilityBean.java:38)\nCaller+2\t at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:180)\nCaller+3\t at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:173)\nCaller+4\t at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:151)\n","class":"org.springframework.boot.availability.ApplicationAvailabilityBean","method":"onApplicationEvent","file":"ApplicationAvailabilityBean.java","line":"77","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.886408+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,886","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20312893, started on Thu Jun 12 18:00:56 IST 2025","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1148)\nCaller+1\t at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\nCaller+2\t at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1116)\nCaller+3\t at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.AbstractApplicationContext","method":"doClose","file":"AbstractApplicationContext.java","line":"1148","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.892723+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,892","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase 2147483647","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.893771+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.redis.listener.RedisMessageListenerContainer","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,893","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.data.redis.listener.RedisMessageListenerContainer","message":"Stopped RedisMessageListenerContainer","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.logDebug(RedisMessageListenerContainer.java:1009)\nCaller+1\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:487)\nCaller+2\t at org.springframework.data.redis.listener.RedisMessageListenerContainer.stop(RedisMessageListenerContainer.java:467)\nCaller+3\t at org.springframework.data.redis.core.RedisKeyValueAdapter.stop(RedisKeyValueAdapter.java:757)\nCaller+4\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:120)\n","class":"org.springframework.data.redis.listener.RedisMessageListenerContainer","method":"logDebug","file":"RedisMessageListenerContainer.java","line":"1009","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.893963+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,893","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'redisKeyValueAdapter' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:121)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.894086+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,894","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase 2147483547","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.89422+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,894","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'org.springframework.kafka.config.internalKafkaListenerEndpointRegistry' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.kafka.config.KafkaListenerEndpointRegistry.stop(KafkaListenerEndpointRegistry.java:414)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.894328+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,894","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase 2147482623","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.895956+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,895","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Commencing graceful shutdown. Waiting for active requests to complete","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.embedded.tomcat.GracefulShutdown.shutDownGracefully(GracefulShutdown.java:54)\nCaller+1\t at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.shutDownGracefully(TomcatWebServer.java:458)\nCaller+2\t at org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle.stop(WebServerGracefulShutdownLifecycle.java:65)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\n","class":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","method":"shutDownGracefully","file":"GracefulShutdown.java","line":"54","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.899929+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","timestamp":"2025-06-12 18:01:14,899","level":"INFO","thread":"tomcat-shutdown","logger":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","message":"Graceful shutdown complete","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.web.embedded.tomcat.GracefulShutdown.doShutdown(GracefulShutdown.java:76)\nCaller+1\t at org.springframework.boot.web.embedded.tomcat.GracefulShutdown.lambda$shutDownGracefully$0(GracefulShutdown.java:56)\nCaller+2\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","method":"doShutdown","file":"GracefulShutdown.java","line":"76","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.900429+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,900","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase 2147481599","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.900412+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"tomcat-shutdown","timestamp":"2025-06-12 18:01:14,900","level":"DEBUG","thread":"tomcat-shutdown","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'webServerGracefulShutdown' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.boot.web.context.WebServerGracefulShutdownLifecycle.lambda$stop$0(WebServerGracefulShutdownLifecycle.java:65)\nCaller+2\t at org.springframework.boot.web.embedded.tomcat.GracefulShutdown.doShutdown(GracefulShutdown.java:77)\nCaller+3\t at org.springframework.boot.web.embedded.tomcat.GracefulShutdown.lambda$shutDownGracefully$0(GracefulShutdown.java:56)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.904231+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,904","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'webServerStartStop' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:121)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.904776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,904","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase 1073741823","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.905013+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,905","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'applicationTaskExecutor' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorLifecycleDelegate.stop(ExecutorLifecycleDelegate.java:90)\nCaller+2\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.stop(ExecutorConfigurationSupport.java:450)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.905143+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,905","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase 0","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.906347+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.AbstractRedisClient","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,906","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"io.lettuce.core.AbstractRedisClient","message":"Initiate shutdown (0, 100, MILLISECONDS)","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.AbstractRedisClient.shutdownAsync(AbstractRedisClient.java:568)\nCaller+1\t at io.lettuce.core.AbstractRedisClient.shutdown(AbstractRedisClient.java:533)\nCaller+2\t at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.stop(LettuceConnectionFactory.java:987)\nCaller+3\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:120)\nCaller+4\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\n","class":"io.lettuce.core.AbstractRedisClient","method":"shutdownAsync","file":"AbstractRedisClient.java","line":"568","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.912953+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,912","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'redisConnectionFactory' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:121)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.927801+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,927","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'reactorResourceFactory' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:121)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.928026+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,928","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase -2147483647","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.92827+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,928","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'springBootLoggingLifecycle' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:121)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.92837+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,928","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Stopping beans in phase -2147483648","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:607)\nCaller+1\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.stopBeans(DefaultLifecycleProcessor.java:428)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor.onClose(DefaultLifecycleProcessor.java:319)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1162)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup","method":"stop","file":"DefaultLifecycleProcessor.java","line":"607","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.928735+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.support.DefaultLifecycleProcessor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,928","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.context.support.DefaultLifecycleProcessor","message":"Bean 'kafkaProducerFactory' completed its stop procedure","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.DefaultLifecycleProcessor.lambda$doStop$0(DefaultLifecycleProcessor.java:463)\nCaller+1\t at org.springframework.context.SmartLifecycle.stop(SmartLifecycle.java:121)\nCaller+2\t at org.springframework.context.support.DefaultLifecycleProcessor.doStop(DefaultLifecycleProcessor.java:459)\nCaller+3\t at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.stop(DefaultLifecycleProcessor.java:614)\nCaller+4\t at java.base/java.lang.Iterable.forEach(Iterable.java:75)\n","class":"org.springframework.context.support.DefaultLifecycleProcessor","method":"lambda$doStop$0","file":"DefaultLifecycleProcessor.java","line":"463","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.930233+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,930","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler","message":"Shutting down ExecutorService 'taskScheduler'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:366)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.destroy(ExecutorConfigurationSupport.java:329)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"shutdown","file":"ExecutorConfigurationSupport.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.93138+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.DefaultClientResources","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,931","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"io.lettuce.core.resource.DefaultClientResources","message":"Initiate shutdown (0, 2, SECONDS)","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:741)\nCaller+1\t at io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:726)\nCaller+2\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+3\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+4\t at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:311)\n","class":"io.lettuce.core.resource.DefaultClientResources","method":"shutdown","file":"DefaultClientResources.java","line":"741","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.933339+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"io.lettuce.core.resource.DefaultEventLoopGroupProvider","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,933","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"io.lettuce.core.resource.DefaultEventLoopGroupProvider","message":"Initiate shutdown (0, 2, SECONDS)","context":"","exception":"","caller":"Caller+0\t at io.lettuce.core.resource.DefaultEventLoopGroupProvider.shutdown(DefaultEventLoopGroupProvider.java:302)\nCaller+1\t at io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:756)\nCaller+2\t at io.lettuce.core.resource.DefaultClientResources.shutdown(DefaultClientResources.java:726)\nCaller+3\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+4\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\n","class":"io.lettuce.core.resource.DefaultEventLoopGroupProvider","method":"shutdown","file":"DefaultEventLoopGroupProvider.java","line":"302","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.936659+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,936","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Custom destroy method 'shutdown' on bean with name 'lettuceClientResources' completed asynchronously","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DisposableBeanAdapter.logDestroyMethodCompletion(DisposableBeanAdapter.java:356)\nCaller+1\t at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:320)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.beans.factory.support.DisposableBeanAdapter","method":"logDestroyMethodCompletion","file":"DisposableBeanAdapter.java","line":"356","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.937682+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,937","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:637)\nCaller+1\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208)\nCaller+2\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1455)\n","class":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean","method":"destroy","file":"AbstractEntityManagerFactoryBean.java","line":"637","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.938066+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.internal.SessionFactoryImpl","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,938","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.hibernate.internal.SessionFactoryImpl","message":"HHH000031: Closing factory","context":"","exception":"","caller":"Caller+0\t at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:815)\nCaller+1\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+2\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\nCaller+3\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.invokeProxyMethod(AbstractEntityManagerFactoryBean.java:510)\nCaller+4\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean$ManagedEntityManagerFactoryInvocationHandler.invoke(AbstractEntityManagerFactoryBean.java:726)\n","class":"org.hibernate.internal.SessionFactoryImpl","method":"close","file":"SessionFactoryImpl.java","line":"815","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.939478+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.orm.query.plan.cache","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,939","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.hibernate.orm.query.plan.cache","message":"Closing QueryInterpretationCache","context":"","exception":"","caller":"Caller+0\t at org.hibernate.query.internal.QueryInterpretationCacheStandardImpl.close(QueryInterpretationCacheStandardImpl.java:204)\nCaller+1\t at org.hibernate.query.internal.QueryEngineImpl.close(QueryEngineImpl.java:269)\nCaller+2\t at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:843)\nCaller+3\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\nCaller+4\t at java.base/java.lang.reflect.Method.invoke(Method.java:565)\n","class":"org.hibernate.query.internal.QueryInterpretationCacheStandardImpl","method":"close","file":"QueryInterpretationCacheStandardImpl.java","line":"204","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.939805+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.spi.TypeConfiguration$Scope","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,939","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.hibernate.type.spi.TypeConfiguration$Scope","message":"Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@547da257] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@373c367]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory(TypeConfiguration.java:604)\nCaller+1\t at org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed(TypeConfiguration.java:279)\nCaller+2\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryClosed(SessionFactoryObserverChain.java:59)\nCaller+3\t at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:853)\nCaller+4\t at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n","class":"org.hibernate.type.spi.TypeConfiguration$Scope","method":"unsetSessionFactory","file":"TypeConfiguration.java","line":"604","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.94005+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.service.internal.AbstractServiceRegistryImpl","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,940","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.hibernate.service.internal.AbstractServiceRegistryImpl","message":"Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries","context":"","exception":"","caller":"Caller+0\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.deRegisterChild(AbstractServiceRegistryImpl.java:410)\nCaller+1\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:370)\nCaller+2\t at org.hibernate.jpa.boot.internal.ServiceRegistryCloser.sessionFactoryClosed(ServiceRegistryCloser.java:27)\nCaller+3\t at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryClosed(SessionFactoryObserverChain.java:59)\nCaller+4\t at org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:853)\n","class":"org.hibernate.service.internal.AbstractServiceRegistryImpl","method":"deRegisterChild","file":"AbstractServiceRegistryImpl.java","line":"410","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.940669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,940","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl","message":"Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl.deRegisterChild(BootstrapServiceRegistryImpl.java:295)\nCaller+1\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:370)\nCaller+2\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.destroy(StandardServiceRegistryImpl.java:145)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.deRegisterChild(AbstractServiceRegistryImpl.java:414)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.destroy(AbstractServiceRegistryImpl.java:370)\n","class":"org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl","method":"deRegisterChild","file":"BootstrapServiceRegistryImpl.java","line":"295","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.941669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,941","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated...","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:349)\nCaller+1\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:229)\nCaller+2\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1455)\n","class":"com.zaxxer.hikari.HikariDataSource","method":"close","file":"HikariDataSource.java","line":"349","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.941911+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,941","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Before shutdown stats (total=10/10, idle=10/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.shutdown(HikariPool.java:214)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)\nCaller+3\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:229)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.942938+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,942","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5dc1597f: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.95622+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,956","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@51c92e7e: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.956865+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,956","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@10f42445: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.957218+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,957","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@21aeb786: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.957623+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,957","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2f2815ea: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.958004+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,958","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@74954778: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.958367+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,958","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1434bbd1: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.958726+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,958","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5645a8b4: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.958987+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,958","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@104eeb4a: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.959276+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"HikariPool-1:connection-closer","timestamp":"2025-06-12 18:01:14,959","level":"DEBUG","thread":"HikariPool-1:connection-closer","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4f2628c1: (connection evicted)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:136)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:457)\nCaller+2\t at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\nCaller+3\t at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\nCaller+4\t at java.base/java.lang.Thread.run(Thread.java:1447)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"quietlyCloseConnection","file":"PoolBase.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.959893+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,959","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - After  shutdown stats (total=0/10, idle=0/10, active=0, waiting=0)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.logPoolState(HikariPool.java:417)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.shutdown(HikariPool.java:255)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350)\nCaller+3\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:229)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"logPoolState","file":"HikariPool.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.96006+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,960","level":"INFO","thread":"SpringApplicationShutdownHook","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed.","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:351)\nCaller+1\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:229)\nCaller+2\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1455)\n","class":"com.zaxxer.hikari.HikariDataSource","method":"close","file":"HikariDataSource.java","line":"351","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.960225+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,960","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","message":"Shutting down ExecutorService 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:366)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.destroy(ExecutorConfigurationSupport.java:329)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"shutdown","file":"ExecutorConfigurationSupport.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:01:14.960776+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","thread_name":"SpringApplicationShutdownHook","timestamp":"2025-06-12 18:01:14,960","level":"DEBUG","thread":"SpringApplicationShutdownHook","logger":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Custom destroy method 'close' on bean with name 'simpleMeterRegistry' completed","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DisposableBeanAdapter.logDestroyMethodCompletion(DisposableBeanAdapter.java:356)\nCaller+1\t at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:315)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:246)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.beans.factory.support.DisposableBeanAdapter","method":"logDestroyMethodCompletion","file":"DisposableBeanAdapter.java","line":"356","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.644187+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,644","level":"INFO","thread":"Test worker","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests","message":"Starting MySpringBootProjectApplicationTests using Java 24.0.1 with PID 71752 (started by mohit in /Users/mohit/Documents/Software-Development/my-spring-boot-project)","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:53)\nCaller+1\t at org.springframework.boot.SpringApplication.logStartupInfo(SpringApplication.java:625)\nCaller+2\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:388)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+4\t at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarting","file":"StartupInfoLogger.java","line":"53","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.64933+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,649","level":"DEBUG","thread":"Test worker","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests","message":"Running with Spring Boot v4.0.0-SNAPSHOT, Spring v7.0.0-SNAPSHOT","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:54)\nCaller+1\t at org.springframework.boot.SpringApplication.logStartupInfo(SpringApplication.java:625)\nCaller+2\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:388)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+4\t at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n","class":"org.springframework.boot.StartupInfoLogger","method":"logStarting","file":"StartupInfoLogger.java","line":"54","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.650462+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,650","level":"INFO","thread":"Test worker","logger":"com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests","message":"No active profile set, falling back to 1 default profile: \"default\"","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:652)\nCaller+1\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:389)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+3\t at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\nCaller+4\t at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n","class":"org.springframework.boot.SpringApplication","method":"logStartupProfileInfo","file":"SpringApplication.java","line":"652","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.651702+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.SpringApplication","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,651","level":"DEBUG","thread":"Test worker","logger":"org.springframework.boot.SpringApplication","message":"Loading source class com.ms.my_spring_boot_project.MySpringBootProjectApplication","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.SpringApplication.load(SpringApplication.java:685)\nCaller+1\t at org.springframework.boot.SpringApplication.prepareContext(SpringApplication.java:414)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:317)\nCaller+3\t at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\nCaller+4\t at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n","class":"org.springframework.boot.SpringApplication","method":"load","file":"SpringApplication.java","line":"685","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.673694+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,673","level":"DEBUG","thread":"Test worker","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@52f57666","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:664)\nCaller+1\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:585)\nCaller+2\t at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\nCaller+3\t at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\nCaller+4\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n","class":"org.springframework.context.support.AbstractApplicationContext","method":"prepareRefresh","file":"AbstractApplicationContext.java","line":"664","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.684785+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,684","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.693923+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,693","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:360)\nCaller+4\t at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.715587+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,715","level":"DEBUG","thread":"Test worker","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/config/WebClientConfig.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.729196+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,729","level":"DEBUG","thread":"Test worker","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/controller/TodoController.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.731409+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,731","level":"DEBUG","thread":"Test worker","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/logging/LogGenerator.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:12.734161+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","thread_name":"Test worker","timestamp":"2025-06-12 18:06:12,734","level":"DEBUG","thread":"Test worker","logger":"org.springframework.context.annotation.ClassPathBeanDefinitionScanner","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/service/TodoService.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276)\nCaller+3\t at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:347)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.355712+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,355","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:294)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.<init>(RepositoryConfigurationDelegate.java:110)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:61)\nCaller+3\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+4\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"multipleStoresDetected","file":"RepositoryConfigurationDelegate.java","line":"294","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.358789+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,358","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:145)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.367119+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,367","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages.get(AutoConfigurationPackages.java:75)\nCaller+4\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:79)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.376397+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,376","level":"DEBUG","thread":"Test worker","logger":"org.springframework.boot.autoconfigure.AutoConfigurationPackages","message":"@EnableAutoConfiguration was declared on a class in the package 'com.ms.my_spring_boot_project'. Automatic @Repository and @Entity scanning is enabled.","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages.get(AutoConfigurationPackages.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.AutoConfigurationPackages.get(AutoConfigurationPackages.java:75)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:79)\nCaller+3\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport$AutoConfiguredAnnotationRepositoryConfigurationSource.getBasePackages(AbstractRepositoryConfigurationSourceSupport.java:138)\nCaller+4\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:157)\n","class":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages","method":"get","file":"AutoConfigurationPackages.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.377822+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,377","level":"DEBUG","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for JPA repositories in packages com.ms.my_spring_boot_project.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:155)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"155","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.385621+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,385","level":"DEBUG","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryComponentProvider","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/repository/TodoRepository.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.data.repository.config.RepositoryComponentProvider.findCandidateComponents(RepositoryComponentProvider.java:121)\nCaller+3\t at org.springframework.data.repository.config.RepositoryConfigurationSourceSupport.lambda$getCandidates$1(RepositoryConfigurationSourceSupport.java:76)\nCaller+4\t at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.46909+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,469","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 89 ms. Found 1 JPA repository interface.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.482049+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,482","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:294)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.<init>(RepositoryConfigurationDelegate.java:110)\nCaller+2\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:61)\nCaller+3\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+4\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"multipleStoresDetected","file":"RepositoryConfigurationDelegate.java","line":"294","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.483323+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,483","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:145)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.490189+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,490","level":"DEBUG","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Scanning for Redis repositories in packages com.ms.my_spring_boot_project.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:155)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"155","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.493305+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.data.repository.config.RepositoryComponentProvider","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,493","level":"DEBUG","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryComponentProvider","message":"Identified candidate component class: file [/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/main/com/ms/my_spring_boot_project/repository/TodoRepository.class]","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:442)\nCaller+1\t at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:318)\nCaller+2\t at org.springframework.data.repository.config.RepositoryComponentProvider.findCandidateComponents(RepositoryComponentProvider.java:121)\nCaller+3\t at org.springframework.data.repository.config.RepositoryConfigurationSourceSupport.lambda$getCandidates$1(RepositoryConfigurationSourceSupport.java:76)\nCaller+4\t at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)\n","class":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider","method":"scanCandidateComponents","file":"ClassPathScanningCandidateComponentProvider.java","line":"442","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.494839+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,494","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ms.my_spring_boot_project.repository.TodoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:327)\nCaller+1\t at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:96)\nCaller+2\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:170)\nCaller+3\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","method":"isStrictRepositoryCandidate","file":"RepositoryConfigurationExtensionSupport.java","line":"327","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.495351+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,495","level":"INFO","thread":"Test worker","logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.","context":"","exception":"","caller":"Caller+0\t at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:213)\nCaller+1\t at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)\nCaller+2\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromImportBeanDefinitionRegistrars$0(ConfigurationClassBeanDefinitionReader.java:405)\nCaller+3\t at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:987)\nCaller+4\t at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromImportBeanDefinitionRegistrars(ConfigurationClassBeanDefinitionReader.java:404)\n","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","method":"registerRepositoriesIn","file":"RepositoryConfigurationDelegate.java","line":"213","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.595065+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,595","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.599923+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,599","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.600952+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,600","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'emBeanDefinitionRegistrarPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.601514+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,601","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:194)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.635614+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,635","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.637155+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,637","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'bootstrapExecutorAliasPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.638037+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,638","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:202)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:781)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.639676+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,639","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.context.event.EventListenerMethodProcessor.postProcessBeanFactory(EventListenerMethodProcessor.java:100)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.64022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,640","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:733)\nCaller+4\t at org.springframework.context.event.EventListenerMethodProcessor.postProcessBeanFactory(EventListenerMethodProcessor.java:100)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.643376+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,643","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.644484+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,644","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.645662+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,645","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.647742+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,647","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.648327+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,648","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.648795+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,648","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.get(ConfigurationPropertiesBinder.java:219)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.650557+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,650","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcConnectionDetailsHikariBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:244)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.652944+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,652","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.653371+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,653","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.659667+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,659","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.670837+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,670","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.672069+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,672","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.674037+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,674","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:265)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.680058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,680","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.680784+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,680","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.681221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,681","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'meterRegistryPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.682635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,682","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:90)\nCaller+4\t at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:118)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.683056+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,683","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.698867+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,698","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.700251+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,700","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'transactionInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.700689+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,700","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.703414+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,703","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.703736+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,703","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.706101+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,706","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'meterRegistryPostProcessor' via factory method to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@52f57666'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.709101+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,709","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'healthEndpointGroupsBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.709964+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,709","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'metricsRepositoryMethodInvocationListenerBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.711015+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,711","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'observationRegistryPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.712656+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,712","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:277)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:798)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.747538+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,747","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:933)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.748047+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,748","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.749285+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,749","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'threadPoolTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.749669+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,749","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.751147+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,751","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.752149+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,752","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1268)\nCaller+4\t at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:76)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.75783+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,757","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'threadPoolTaskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.761008+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,761","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'threadPoolTaskExecutorBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.765281+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,765","level":"DEBUG","thread":"Test worker","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","message":"Initializing ExecutorService 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:300)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.afterPropertiesSet(ExecutorConfigurationSupport.java:292)\nCaller+2\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"initialize","file":"ExecutorConfigurationSupport.java","line":"300","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.770603+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,770","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.test.context.support.internalDynamicPropertyRegistrarBeanInitializer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:953)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.771884+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,771","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:309)\nCaller+4\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.772231+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,772","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.773044+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,773","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.773423+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,773","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.774303+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,774","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.780654+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,780","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jdbcConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.781048+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,781","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.781916+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,781","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'jdbcConnectionDetails' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.782723+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,782","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.783081+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,783","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'jdbcConnectionDetails'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.783435+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,783","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSource' via factory method to bean named 'environment'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.786925+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,786","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"Class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.attemptFromContextLoader(HikariConfig.java:1026)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.setDriverClassName(HikariConfig.java:503)\nCaller+2\t at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperty.set(DataSourceBuilder.java:478)\nCaller+3\t at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.set(DataSourceBuilder.java:370)\nCaller+4\t at org.springframework.boot.jdbc.DataSourceBuilder.build(DataSourceBuilder.java:185)\n","class":"com.zaxxer.hikari.HikariConfig","method":"attemptFromContextLoader","file":"HikariConfig.java","line":"1026","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.798078+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,798","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.799557+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,799","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.799865+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,799","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.803058+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,803","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'entityManagerFactory'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\nCaller+3\t at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\nCaller+4\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.803466+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,803","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.804448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,804","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.8064+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,806","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.80736+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,807","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'dataSource'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.807665+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,807","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.80791+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,807","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@526b2f3e'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.808156+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,808","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' via constructor to bean named 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1383)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.811597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,811","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1962)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.811979+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,811","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:413)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.81547+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,815","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'entityManagerFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:226)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1717)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.816195+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,816","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'jpaVendorAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.830044+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.jboss.logging","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,830","level":"DEBUG","thread":"Test worker","logger":"org.jboss.logging","message":"Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property","context":"","exception":"","caller":"Caller+0\t at org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:164)\nCaller+1\t at org.jboss.logging.LoggerProviders.trySlf4j(LoggerProviders.java:113)\nCaller+2\t at org.jboss.logging.LoggerProviders.findProvider(LoggerProviders.java:53)\nCaller+3\t at org.jboss.logging.LoggerProviders.find(LoggerProviders.java:32)\nCaller+4\t at org.jboss.logging.LoggerProviders.<clinit>(LoggerProviders.java:29)\n","class":"org.jboss.logging.LoggerProviders","method":"logProvider","file":"LoggerProviders.java","line":"164","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.832817+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,832","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactoryBuilder' via factory method to bean named 'jpaVendorAdapter'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.8348+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,834","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Creating shared instance of singleton bean 'persistenceManagedTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:306)\nCaller+1\t at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\nCaller+2\t at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)\nCaller+3\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1659)\nCaller+4\t at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1606)\n","class":"org.springframework.beans.factory.support.DefaultSingletonBeanRegistry","method":"getSingleton","file":"DefaultSingletonBeanRegistry.java","line":"306","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.835597+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,835","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@526b2f3e'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.835905+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,835","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'persistenceManagedTypes' via factory method to bean named 'org.springframework.web.context.support.GenericWebApplicationContext@52f57666'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.840085+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,840","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'entityManagerFactoryBuilder'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.840402+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.beans.factory.support.DefaultListableBeanFactory","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,840","level":"DEBUG","thread":"Test worker","logger":"org.springframework.beans.factory.support.DefaultListableBeanFactory","message":"Autowiring by type from bean name 'entityManagerFactory' via factory method to bean named 'persistenceManagedTypes'","context":"","exception":"","caller":"Caller+0\t at org.springframework.beans.factory.support.ConstructorResolver.registerDependentBeans(ConstructorResolver.java:953)\nCaller+1\t at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:809)\nCaller+2\t at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1363)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)\n","class":"org.springframework.beans.factory.support.ConstructorResolver","method":"registerDependentBeans","file":"ConstructorResolver.java","line":"953","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.849004+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,849","level":"DEBUG","thread":"Test worker","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Building JPA container EntityManagerFactory for persistence unit 'default'","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:384)\nCaller+1\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\nCaller+2\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\nCaller+3\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n","class":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","method":"createNativeEntityManagerFactory","file":"LocalContainerEntityManagerFactoryBean.java","line":"384","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.854022+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,854","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.jpa.internal.util.LogHelper","message":"PersistenceUnitInfo [\n\tname: default\n\tpersistence provider classname: null\n\tclassloader: jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299\n\texcludeUnlistedClasses: true\n\tJTA datasource: null\n\tNon JTA datasource: HikariDataSource (null)\n\tTransaction type: RESOURCE_LOCAL\n\tPU root URL: file:/Users/mohit/Documents/Software-Development/my-spring-boot-project/build/classes/java/test/\n\tShared Cache Mode: UNSPECIFIED\n\tValidation Mode: AUTO\n\tJar files URLs []\n\tManaged classes names [\n\t\tcom.ms.my_spring_boot_project.model.Todo]\n\tMapping files names []\n\tProperties []","context":"","exception":"","caller":"Caller+0\t at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:101)\nCaller+1\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:211)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.jpa.internal.util.LogHelper","method":"logPersistenceUnitInformation","file":"LogHelper.java","line":"101","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.858087+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.integrator.internal.IntegratorServiceImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,858","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.integrator.internal.IntegratorServiceImpl","message":"Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].","context":"","exception":"","caller":"Caller+0\t at org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:49)\nCaller+1\t at org.hibernate.integrator.internal.IntegratorServiceImpl.create(IntegratorServiceImpl.java:33)\nCaller+2\t at org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build(BootstrapServiceRegistryBuilder.java:188)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.buildBootstrapServiceRegistry(EntityManagerFactoryBuilderImpl.java:502)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:217)\n","class":"org.hibernate.integrator.internal.IntegratorServiceImpl","method":"addIntegrator","file":"IntegratorServiceImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.859412+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.integrator.internal.IntegratorServiceImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,859","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.integrator.internal.IntegratorServiceImpl","message":"Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].","context":"","exception":"","caller":"Caller+0\t at org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:49)\nCaller+1\t at org.hibernate.integrator.internal.IntegratorServiceImpl.create(IntegratorServiceImpl.java:34)\nCaller+2\t at org.hibernate.boot.registry.BootstrapServiceRegistryBuilder.build(BootstrapServiceRegistryBuilder.java:188)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.buildBootstrapServiceRegistry(EntityManagerFactoryBuilderImpl.java:502)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:217)\n","class":"org.hibernate.integrator.internal.IntegratorServiceImpl","method":"addIntegrator","file":"IntegratorServiceImpl.java","line":"49","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.888524+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.hibernate.Version","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,888","level":"INFO","thread":"Test worker","logger":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 7.0.0.CR1","context":"","exception":"","caller":"Caller+0\t at org.hibernate.Version.logVersion(Version.java:45)\nCaller+1\t at org.hibernate.cfg.Environment.<clinit>(Environment.java:139)\nCaller+2\t at org.hibernate.jpa.boot.internal.MergedSettings.<init>(MergedSettings.java:32)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.mergeSettings(EntityManagerFactoryBuilderImpl.java:580)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:224)\n","class":"org.hibernate.Version","method":"logVersion","file":"Version.java","line":"45","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.8895+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cfg.Environment","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,889","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.cfg.Environment","message":"HHH000206: 'hibernate.properties' not found","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cfg.Environment.<clinit>(Environment.java:162)\nCaller+1\t at org.hibernate.jpa.boot.internal.MergedSettings.<init>(MergedSettings.java:32)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.mergeSettings(EntityManagerFactoryBuilderImpl.java:580)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:224)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.cfg.Environment","method":"<clinit>","file":"Environment.java","line":"162","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.904919+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.orm.hibernate5.SpringBeanContainer","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,904","level":"DEBUG","thread":"Test worker","logger":"org.springframework.orm.hibernate5.SpringBeanContainer","message":"Falling back to Hibernate's default producer after bean creation failure for interface org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider': Failed to instantiate [org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider]: Specified class is an interface","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.hibernate5.SpringBeanContainer.createBean(SpringBeanContainer.java:157)\nCaller+1\t at org.springframework.orm.hibernate5.SpringBeanContainer.getBean(SpringBeanContainer.java:106)\nCaller+2\t at org.hibernate.resource.beans.internal.Helper.containedBean(Helper.java:66)\nCaller+3\t at org.hibernate.resource.beans.internal.Helper.getBean(Helper.java:56)\nCaller+4\t at org.hibernate.engine.jdbc.connections.internal.MultiTenantConnectionProviderInitiator.initiateService(MultiTenantConnectionProviderInitiator.java:43)\n","class":"org.springframework.orm.hibernate5.SpringBeanContainer","method":"createBean","file":"SpringBeanContainer.java","line":"157","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.905743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,905","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:117)\nCaller+1\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:45)\nCaller+2\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:30)\nCaller+3\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n","class":"org.hibernate.cache.internal.RegionFactoryInitiator","method":"resolveRegionFactory","file":"RegionFactoryInitiator.java","line":"117","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.906304+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,906","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled","context":"","exception":"","caller":"Caller+0\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:47)\nCaller+1\t at org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:30)\nCaller+2\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\nCaller+3\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\nCaller+4\t at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n","class":"org.hibernate.cache.internal.RegionFactoryInitiator","method":"initiateService","file":"RegionFactoryInitiator.java","line":"47","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.953442+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,953","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration boolean -> org.hibernate.type.BasicTypeReference@400e741","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.953943+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,953","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration boolean -> org.hibernate.type.BasicTypeReference@400e741","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.954213+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,954","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@400e741","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:780)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.954462+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,954","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3be369fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:787)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.954671+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,954","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3be369fc","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:787)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.954879+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,954","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration true_false -> org.hibernate.type.BasicTypeReference@35744f8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:794)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.955079+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,955","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@35744f8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:794)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.955315+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,955","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6fbcc078","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:801)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.955534+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,955","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6fbcc078","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:801)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.955753+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,955","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c851821","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.955959+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,955","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte -> org.hibernate.type.BasicTypeReference@6c851821","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.956195+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,956","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6c851821","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:812)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.956431+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,956","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration binary -> org.hibernate.type.BasicTypeReference@4c0930c4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.956633+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,956","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4c0930c4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.956885+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,956","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration [B -> org.hibernate.type.BasicTypeReference@4c0930c4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:819)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.957116+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,957","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@75c0cd39","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:826)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.957369+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,957","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@75c0cd39","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:826)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.957562+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,957","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration image -> org.hibernate.type.BasicTypeReference@7cf66cf9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:833)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.957774+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,957","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration blob -> org.hibernate.type.BasicTypeReference@38f63756","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:840)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.958045+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,958","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@38f63756","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:840)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.958309+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,958","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3d7caf9c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:848)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.958523+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,958","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4e26040f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:855)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.958717+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,958","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration short -> org.hibernate.type.BasicTypeReference@1782896","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.958905+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,958","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration short -> org.hibernate.type.BasicTypeReference@1782896","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.959087+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,959","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1782896","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:866)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.959309+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,959","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration integer -> org.hibernate.type.BasicTypeReference@8bde368","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.959496+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,959","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration int -> org.hibernate.type.BasicTypeReference@8bde368","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.959678+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,959","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@8bde368","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:873)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.959894+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,959","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration long -> org.hibernate.type.BasicTypeReference@5065bdac","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.960075+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,960","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration long -> org.hibernate.type.BasicTypeReference@5065bdac","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.960287+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,960","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5065bdac","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:880)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.960471+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,960","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float -> org.hibernate.type.BasicTypeReference@2e9dcdd3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.960644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,960","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float -> org.hibernate.type.BasicTypeReference@2e9dcdd3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.960821+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,960","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2e9dcdd3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:887)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.96103+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,961","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double -> org.hibernate.type.BasicTypeReference@6e617c0e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.961356+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,961","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double -> org.hibernate.type.BasicTypeReference@6e617c0e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.961577+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,961","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6e617c0e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:894)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.961781+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,961","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9a07409","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:901)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.961989+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,961","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9a07409","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:901)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.962183+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,962","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7455204c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:908)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.962394+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,962","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7455204c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:908)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.962622+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,962","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration character -> org.hibernate.type.BasicTypeReference@34e68840","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.962797+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,962","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration char -> org.hibernate.type.BasicTypeReference@34e68840","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.96297+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,962","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@34e68840","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:919)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.963146+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,963","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@510203de","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:926)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.963352+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,963","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration string -> org.hibernate.type.BasicTypeReference@5b0835cb","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:933)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.963533+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,963","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5b0835cb","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:933)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.96371+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,963","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration nstring -> org.hibernate.type.BasicTypeReference@68229a6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:940)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.963913+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,963","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration characters -> org.hibernate.type.BasicTypeReference@62615be","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.96413+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,964","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration char[] -> org.hibernate.type.BasicTypeReference@62615be","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.964342+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,964","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration [C -> org.hibernate.type.BasicTypeReference@62615be","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:947)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.964519+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,964","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@477bea57","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:954)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.964696+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,964","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration text -> org.hibernate.type.BasicTypeReference@5dc7391e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:961)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.964896+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,964","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4a9ff419","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:968)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.965076+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,965","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration clob -> org.hibernate.type.BasicTypeReference@7ca29311","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:975)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.965321+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,965","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7ca29311","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:975)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.965512+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,965","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6493f780","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:982)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.965718+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,965","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6493f780","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:982)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.965892+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,965","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@782dc5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:989)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.96625+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,966","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@35f22eef","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:996)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.966482+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,966","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5d20195b","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1003)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.966656+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,966","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2674ca88","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1010)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.96684+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,966","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@67a3dd86","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1017)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.967014+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,967","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@430212cb","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1024)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.967221+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,967","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1eb52131","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1035)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.967387+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,967","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1eb52131","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1035)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.967554+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,967","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1e1598e5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1042)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.967727+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,967","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1e1598e5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1042)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.967916+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,967","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@67a3394c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1049)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.968081+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,968","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@67a3394c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1049)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.968288+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,968","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@34e4fb39","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1056)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.968469+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,968","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@34e4fb39","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1056)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.968636+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,968","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@36fe83d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1063)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.968799+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,968","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@36fe83d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1063)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.968965+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,968","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@310f8a05","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1070)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.969129+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,969","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f98ac31","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1077)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.969343+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,969","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5cb6abc8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1084)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.969516+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,969","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5cb6abc8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1084)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.969705+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,969","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@20e48e63","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1091)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.969871+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,969","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6d7677d8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1098)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.970038+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,970","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6705b763","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1105)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.970259+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,970","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@e04b8a0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1112)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.970424+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,970","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@e04b8a0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1112)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.970712+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,970","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@a97a895","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1119)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.970906+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,970","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5401c6a8","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1126)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.971086+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,971","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration date -> org.hibernate.type.BasicTypeReference@1ef5cde4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1133)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.971317+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,971","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1ef5cde4","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1133)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.971503+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,971","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration time -> org.hibernate.type.BasicTypeReference@359fa722","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1140)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.971663+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,971","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@359fa722","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1140)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.971847+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,971","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@27b7204","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.972201+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,972","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@27b7204","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.972566+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,972","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@27b7204","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1147)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.972847+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,972","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5895c065","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.973037+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,973","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5895c065","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.973232+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,973","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5895c065","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1154)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.973398+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,973","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@683fac7e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1161)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.973561+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,973","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2051a0ec","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1168)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.973721+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,973","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration instant -> org.hibernate.type.BasicTypeReference@79631db0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1175)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.973927+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,973","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@79631db0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1175)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.974095+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,974","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid -> org.hibernate.type.BasicTypeReference@f837c11","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.974306+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,974","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@f837c11","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.97448+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,974","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@f837c11","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1186)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.974673+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,974","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1aca6dc3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1193)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.974844+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,974","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3731e8b6","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1200)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.975019+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,975","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration class -> org.hibernate.type.BasicTypeReference@565efd7d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1211)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.975206+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,975","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@565efd7d","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1211)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.975394+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,975","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration currency -> org.hibernate.type.BasicTypeReference@42a97053","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.975557+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,975","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration Currency -> org.hibernate.type.BasicTypeReference@42a97053","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.97571+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,975","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@42a97053","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1218)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.975869+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,975","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration locale -> org.hibernate.type.BasicTypeReference@bc4a9b0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1225)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.976025+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,976","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bc4a9b0","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1225)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.976224+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,976","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration serializable -> org.hibernate.type.BasicTypeReference@33089426","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1233)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.976387+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,976","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@33089426","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1233)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.976555+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,976","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration timezone -> org.hibernate.type.BasicTypeReference@129c322f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1240)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.976829+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,976","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@129c322f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1240)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.977049+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,977","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1bbef3c7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1247)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.977268+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,977","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1bbef3c7","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1247)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.977444+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,977","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration url -> org.hibernate.type.BasicTypeReference@35995029","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1254)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.977624+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,977","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@35995029","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1254)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.978142+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,978","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration vector -> org.hibernate.type.BasicTypeReference@42474b18","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1261)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.978356+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,978","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@5d75f90e","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1268)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.978527+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,978","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@2212e291","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1275)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.978692+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,978","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@5af56240","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1282)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.978851+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,978","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2314cd97","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1292)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.98179+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,981","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration object -> org.hibernate.type.JavaObjectType@27048db3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1299)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.982037+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,982","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@27048db3","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1299)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.982743+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,982","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration null -> org.hibernate.type.NullType@471a9e8c","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:398)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:339)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1345)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1306)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"398","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.982978+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,982","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40277077","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1314)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.983146+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,983","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4cb773c5","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1317)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.983325+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,983","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2c4eae94","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1320)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.983489+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,983","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3f33bb6f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1323)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.983711+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,983","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@446cc036","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1326)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.983873+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,983","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@33b2ba25","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1329)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.984112+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,984","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ad198c9","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1332)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:13.984301+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.type.BasicTypeRegistry","thread_name":"Test worker","timestamp":"2025-06-12 18:06:13,984","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.type.BasicTypeRegistry","message":"Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@481bae3f","context":"","exception":"","caller":"Caller+0\t at org.hibernate.type.BasicTypeRegistry.applyRegistrationKeys(BasicTypeRegistry.java:423)\nCaller+1\t at org.hibernate.type.BasicTypeRegistry.addPrimeEntry(BasicTypeRegistry.java:362)\nCaller+2\t at org.hibernate.type.StandardBasicTypes.handle(StandardBasicTypes.java:1353)\nCaller+3\t at org.hibernate.type.StandardBasicTypes.prime(StandardBasicTypes.java:1335)\nCaller+4\t at org.hibernate.type.spi.TypeConfiguration.<init>(TypeConfiguration.java:138)\n","class":"org.hibernate.type.BasicTypeRegistry","method":"applyRegistrationKeys","file":"BasicTypeRegistry.java","line":"423","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.068242+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,068","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3809f65d] into BootstrapContext; was [null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:311)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1350)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectJpaTempClassLoader","file":"BootstrapContextImpl.java","line":"311","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.068716+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,068","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3809f65d) [was null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:43)\nCaller+1\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:312)\nCaller+2\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1350)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"injectTempClassLoader","file":"ClassLoaderAccessImpl.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.069044+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,069","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@138b9abe] into BootstrapContext; was [null]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:321)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyScanEnvironment(MetadataBuilderImpl.java:225)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1353)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectScanEnvironment","file":"BootstrapContextImpl.java","line":"321","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.069246+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,069","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@279e8bc0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@23ffc910]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:316)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyScanOptions(MetadataBuilderImpl.java:219)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.applyMetamodelBuilderSettings(EntityManagerFactoryBuilderImpl.java:1354)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:236)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectScanOptions","file":"BootstrapContextImpl.java","line":"316","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.079183+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,079","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","message":"Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@1369b299","context":"","exception":"","caller":"Caller+0\t at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:136)\nCaller+1\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider$1.pushClassTransformer(SpringHibernateJpaPersistenceProvider.java:63)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.setupEnhancement(EntityManagerFactoryBuilderImpl.java:333)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:242)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor","method":"pushClassTransformer","file":"PersistenceUnitInfoDescriptor.java","line":"136","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.188558+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,188","level":"INFO","thread":"Test worker","logger":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo.addTransformer(SpringPersistenceUnitInfo.java:84)\nCaller+1\t at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:141)\nCaller+2\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider$1.pushClassTransformer(SpringHibernateJpaPersistenceProvider.java:63)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.setupEnhancement(EntityManagerFactoryBuilderImpl.java:333)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:242)\n","class":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","method":"addTransformer","file":"SpringPersistenceUnitInfo.java","line":"84","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.189064+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.BootstrapContextImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,189","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.boot.internal.BootstrapContextImpl","message":"Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3809f65d]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:311)\nCaller+1\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:244)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\nCaller+4\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:54)\n","class":"org.hibernate.boot.internal.BootstrapContextImpl","method":"injectJpaTempClassLoader","file":"BootstrapContextImpl.java","line":"311","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.189457+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.boot.internal.ClassLoaderAccessImpl","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,189","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.boot.internal.ClassLoaderAccessImpl","message":"ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3809f65d]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:43)\nCaller+1\t at org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:312)\nCaller+2\t at org.hibernate.boot.internal.MetadataBuilderImpl.applyTempClassLoader(MetadataBuilderImpl.java:340)\nCaller+3\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:244)\nCaller+4\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.<init>(EntityManagerFactoryBuilderImpl.java:173)\n","class":"org.hibernate.boot.internal.ClassLoaderAccessImpl","method":"injectTempClassLoader","file":"ClassLoaderAccessImpl.java","line":"43","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.213055+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,213","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"HikariPool-1 - configuration:","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1154)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1154","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.214644+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,214","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"allowPoolSuspension.............false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.214929+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,214","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"autoCommit......................true","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.21513+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,215","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"catalog.........................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.215337+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,215","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionInitSql...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.21551+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,215","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionTestQuery.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.216353+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,216","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"connectionTimeout...............30000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.216578+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,216","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"credentials.....................com.zaxxer.hikari.util.Credentials@19b8f1bd","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.216761+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,216","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSource......................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.216933+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,216","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceClassName.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.217107+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,217","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceJNDI..................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.217444+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,217","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"dataSourceProperties............{password=<masked>}","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.21766+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,217","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"driverClassName.................\"com.mysql.cj.jdbc.Driver\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.217834+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,217","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"exceptionOverride...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.218001+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,218","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"exceptionOverrideClassName......none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.218197+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,218","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"healthCheckProperties...........{}","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.21837+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,218","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"healthCheckRegistry.............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.218549+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,218","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"idleTimeout.....................600000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.218748+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,218","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"initializationFailTimeout.......1","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.218931+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,218","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"isolateInternalQueries..........false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.219118+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,219","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"jdbcUrl.........................jdbc:mysql://localhost:3306/MySpringBootProject","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.219306+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,219","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"keepaliveTime...................120000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.219472+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,219","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"leakDetectionThreshold..........0","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.219635+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,219","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"maxLifetime.....................1800000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.219803+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,219","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"maximumPoolSize.................10","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.219962+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,219","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"metricRegistry..................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.22012+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,220","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"metricsTrackerFactory...........none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.220304+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,220","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"minimumIdle.....................10","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.220464+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,220","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"password........................<masked>","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.220626+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,220","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"poolName........................\"HikariPool-1\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.220799+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,220","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"readOnly........................false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.220981+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,220","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"registerMbeans..................false","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.221144+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,221","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"scheduledExecutor...............none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.22133+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,221","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"schema..........................none","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.221507+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,221","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"threadFactory...................internal","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.221661+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,221","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"transactionIsolation............default","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.221825+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,221","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"username........................\"${MYSQL_USER}\"","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.221993+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.HikariConfig","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,221","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.HikariConfig","message":"validationTimeout...............5000","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariConfig.logConfiguration(HikariConfig.java:1186)\nCaller+1\t at com.zaxxer.hikari.HikariConfig.validate(HikariConfig.java:1090)\nCaller+2\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:108)\nCaller+3\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n","class":"com.zaxxer.hikari.HikariConfig","method":"logConfiguration","file":"HikariConfig.java","line":"1186","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.222138+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,222","level":"INFO","thread":"Test worker","logger":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting...","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:109)\nCaller+1\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"com.zaxxer.hikari.HikariDataSource","method":"getConnection","file":"HikariDataSource.java","line":"109","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:14.236415+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"Test worker","timestamp":"2025-06-12 18:06:14,236","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Attempting to create/setup new connection (72445aee-4f39-4f85-b098-873232aac955)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:366)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:15.013618+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.PoolBase","thread_name":"Test worker","timestamp":"2025-06-12 18:06:15,013","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.pool.PoolBase","message":"HikariPool-1 - Failed to create/setup connection (72445aee-4f39-4f85-b098-873232aac955): Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)","context":"","exception":"","caller":"Caller+0\t at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:382)\nCaller+1\t at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\nCaller+3\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+4\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n","class":"com.zaxxer.hikari.pool.PoolBase","method":"newConnection","file":"PoolBase.java","line":"382","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:15.01431+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"Test worker","timestamp":"2025-06-12 18:06:15,014","level":"DEBUG","thread":"Test worker","logger":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Cannot acquire connection from data source","context":"","exception":"java.sql.SQLException: Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n","caller":"Caller+0\t at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:510)\nCaller+1\t at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\nCaller+2\t at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\nCaller+3\t at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\nCaller+4\t at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n","class":"com.zaxxer.hikari.pool.HikariPool","method":"createPoolEntry","file":"HikariPool.java","line":"510","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"java.sql.SQLException: Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n"}
{"timestamp":"2025-06-12T18:06:16.025147+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,025","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"unable to obtain isolated JDBC connection [n/a]","context":"","exception":"java.sql.SQLException: Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n","caller":"Caller+0\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:134)\nCaller+1\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:107)\nCaller+2\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","method":"logExceptions","file":"SqlExceptionHelper.java","line":"134","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"java.sql.SQLException: Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n"}
{"timestamp":"2025-06-12T18:06:16.028808+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,028","level":"WARN","thread":"Test worker","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"SQL Error: 1045, SQLState: 28000","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:145)\nCaller+1\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:107)\nCaller+2\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","method":"logExceptions","file":"SqlExceptionHelper.java","line":"145","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.029305+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,029","level":"ERROR","thread":"Test worker","logger":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","message":"Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)","context":"","exception":"","caller":"Caller+0\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:150)\nCaller+1\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:107)\nCaller+2\t at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\nCaller+3\t at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\nCaller+4\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n","class":"org.hibernate.engine.jdbc.spi.SqlExceptionHelper","method":"logExceptions","file":"SqlExceptionHelper.java","line":"150","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.030421+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,030","level":"WARN","thread":"Test worker","logger":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","message":"HHH000342: Could not obtain connection to query JDBC database metadata","context":"","exception":"org.hibernate.exception.AuthException: unable to obtain isolated JDBC connection [Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:87)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:34)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: java.sql.SQLException: Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\t... 133 common frames omitted\n","caller":"Caller+0\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:424)\nCaller+1\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\nCaller+2\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\nCaller+3\t at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\nCaller+4\t at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n","class":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator","method":"getJdbcEnvironmentUsingJdbcMetadata","file":"JdbcEnvironmentInitiator.java","line":"424","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"org.hibernate.exception.AuthException: unable to obtain isolated JDBC connection [Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)] [n/a]\n\tat org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:87)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:34)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:114)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:355)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: java.sql.SQLException: Access denied for user '${MYSQL_USER}'@'localhost' (using password: YES)\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)\n\tat com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:837)\n\tat com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:420)\n\tat com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:238)\n\tat com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:180)\n\tat com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:139)\n\tat com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:368)\n\tat com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:205)\n\tat com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:483)\n\tat com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:571)\n\tat com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:101)\n\tat com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)\n\tat org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:140)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:503)\n\tat org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:59)\n\t... 133 common frames omitted\n"}
{"timestamp":"2025-06-12T18:06:16.033159+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.hibernate.service.spi.ServiceBinding","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,033","level":"DEBUG","thread":"Test worker","logger":"org.hibernate.service.spi.ServiceBinding","message":"Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]","context":"","exception":"","caller":"Caller+0\t at org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)\nCaller+1\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.cleanup(EntityManagerFactoryBuilderImpl.java:1448)\nCaller+2\t at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1487)\nCaller+3\t at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\nCaller+4\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n","class":"org.hibernate.service.spi.ServiceBinding","method":"setService","file":"ServiceBinding.java","line":"68","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.033526+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,033","level":"ERROR","thread":"Test worker","logger":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","context":"","exception":"","caller":"Caller+0\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:417)\nCaller+1\t at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\nCaller+2\t at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\nCaller+3\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\nCaller+4\t at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n","class":"org.springframework.orm.jpa.AbstractEntityManagerFactoryBean","method":"buildNativeEntityManagerFactory","file":"AbstractEntityManagerFactoryBean.java","line":"417","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.034285+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,034","level":"WARN","thread":"Test worker","logger":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","context":"","exception":"","caller":"Caller+0\t at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)\nCaller+1\t at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\nCaller+2\t at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\nCaller+3\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\nCaller+4\t at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n","class":"org.springframework.context.support.AbstractApplicationContext","method":"refresh","file":"AbstractApplicationContext.java","line":"625","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.034778+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,034","level":"DEBUG","thread":"Test worker","logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","message":"Shutting down ExecutorService 'applicationTaskExecutor'","context":"","exception":"","caller":"Caller+0\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:366)\nCaller+1\t at org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.destroy(ExecutorConfigurationSupport.java:329)\nCaller+2\t at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:208)\nCaller+3\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:795)\nCaller+4\t at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:745)\n","class":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport","method":"shutdown","file":"ExecutorConfigurationSupport.java","line":"366","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.078866+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,078","level":"DEBUG","thread":"Test worker","logger":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\n\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:\n-----------------\n\n   AopAutoConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.auto=true) matched (OnPropertyCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:\n      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   ApplicationAvailabilityAutoConfiguration#applicationAvailability matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'brave.Tracer', 'io.micrometer.tracing.brave.bridge.BraveTracer' (OnClassCondition)\n\n   BraveAutoConfiguration#braveCurrentTraceContext matched:\n      - @ConditionalOnMissingBean (types: brave.propagation.CurrentTraceContext; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#bravePropagator matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.brave.bridge.BravePropagator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveSampler matched:\n      - @ConditionalOnMissingBean (types: brave.sampler.Sampler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveSpanCustomizer matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.SpanCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracer matched:\n      - @ConditionalOnMissingBean (types: brave.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracerBridge matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#braveTracing matched:\n      - @ConditionalOnMissingBean (types: brave.Tracing; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#compositeSpanHandler matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.brave.bridge.CompositeSpanHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BraveAutoConfiguration#currentSpanCustomizer matched:\n      - @ConditionalOnMissingBean (types: brave.SpanCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.NoPropagation#noopPropagationFactory matched:\n      - @ConditionalOnMissingBean (types: brave.propagation.Propagation$Factory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage matched:\n      - @ConditionalOnBooleanProperty (management.tracing.baggage.enabled=true) matched (OnPropertyCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#correlationFieldsCorrelationScopeCustomizer matched:\n      - @ConditionalOnBooleanProperty (management.tracing.baggage.correlation.enabled=true) matched (OnPropertyCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#correlationScopeDecorator matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.CorrelationScopeDecorator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#mdcCorrelationScopeDecoratorBuilder matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.CorrelationScopeDecorator$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#propagationFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: brave.baggage.BaggagePropagation$FactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   CacheMeterBinderProvidersConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)\n\n   CaffeineCacheConfiguration matched:\n      - @ConditionalOnClass found required classes 'com.github.benmanes.caffeine.cache.Caffeine', 'org.springframework.cache.caffeine.CaffeineCacheManager' (OnClassCondition)\n      - Cache org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration automatic cache type (CacheCondition)\n\n   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.client.reactive.ClientHttpConnector', 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnector matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnectorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientHttpConnectorSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration$ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n\n   org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration$ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n\n   CodecsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   CompositeMeterRegistryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)\n\n   DataSourceAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (DataSourceAutoConfiguration.PooledDataSourceCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceAutoConfiguration.PooledDataSourceConfiguration#jdbcConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceConfiguration.Hikari matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource' (OnBeanCondition)\n\n   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:\n      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourceInitializationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourcePoolMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'dataSource' (OnBeanCondition)\n\n   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider' (OnBeanCondition)\n\n   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:\n      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   DispatcherServletAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration' (OnClassCondition)\n      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:\n      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#endpointOperationParameterMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#propertiesEndpointAccessResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.EndpointAccessResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ErrorMvcAutoConfiguration#basicErrorController matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:\n      - @ConditionalOnBooleanProperty (server.error.whitelabel.enabled=true) matched (OnPropertyCondition)\n      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:\n      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GenericCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)\n\n   HealthContributorAutoConfiguration#pingHealthContributor matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   HealthEndpointAutoConfiguration matched:\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n\n   HealthEndpointConfiguration#healthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpoint matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroupMembershipValidator matched:\n      - @ConditionalOnBooleanProperty (management.endpoint.health.validate-group-membership=true) matched (OnPropertyCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroups matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthStatusAggregator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)\n\n   HibernateJpaAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'jakarta.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)\n\n   HibernateJpaConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   HttpClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.client.ClientHttpRequestFactory' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientAutoConfiguration#clientHttpRequestFactorySettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.http.client.ClientHttpRequestFactorySettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientObservationsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.observation.Observation' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   HttpClientObservationsAutoConfiguration.MeterFilterConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   HttpEncodingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.servlet.encoding.enabled=true) matched (OnPropertyCondition)\n\n   HttpEncodingAutoConfiguration#characterEncodingFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)\n\n   HttpMessageConvertersAutoConfiguration#messageConverters matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)\n\n   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonEndpointAutoConfiguration#endpointObjectMapper matched:\n      - @ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (management.endpoints.jackson.isolated-object-mapper=true) matched (OnPropertyCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n      - @ConditionalOnPreferredJsonMapper JACKSON no property was configured and Jackson is the default (OnPreferredJsonMapperCondition)\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: ?; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcClientAutoConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JdbcTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)\n      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource' (OnBeanCondition)\n\n   JdbcTemplateConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#entityManagerFactoryBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#jpaVendorAdapter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration#transactionManager matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.JpaWebConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,jakarta.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaBaseConfiguration.PersistenceManagedTypesConfiguration#persistenceManagedTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JpaRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JtaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.transaction.Transaction' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.jta.enabled=true) matched (OnPropertyCondition)\n\n   JvmMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#classLoaderMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmCompilationMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmGcMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmHeapPressureMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmInfoMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAnnotationDrivenConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory matched:\n      - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration matched:\n      - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)\n\n   KafkaAutoConfiguration#kafkaAdmin matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaConsumerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaProducerFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaProducerListener matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   KafkaMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)\n\n   LettuceConnectionConfiguration matched:\n      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.data.redis.client-type=lettuce) matched (OnPropertyCondition)\n\n   LettuceConnectionConfiguration#lettuceClientResources matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   LettuceMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.lettuce.core.RedisClient', 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LettuceMetricsAutoConfiguration#micrometerOptions matched:\n      - @ConditionalOnMissingBean (types: io.lettuce.core.metrics.MicrometerOptions; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:\n      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)\n      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration#logbackMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:\n      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)\n\n   MetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MetricsAutoConfiguration#micrometerClock matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found bean 'braveTracerBridge' (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#defaultTracingObservationHandler matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.DefaultTracingObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#propagatingReceiverTracingObservationHandler matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.propagation.Propagator; SearchStrategy: all) found bean 'bravePropagator'; @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.PropagatingReceiverTracingObservationHandler<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MicrometerTracingAutoConfiguration#propagatingSenderTracingObservationHandler matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.propagation.Propagator; SearchStrategy: all) found bean 'bravePropagator'; @ConditionalOnMissingBean (types: io.micrometer.tracing.handler.PropagatingSenderTracingObservationHandler<?>; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBooleanProperty (spring.servlet.multipart.enabled=true) matched (OnPropertyCondition)\n\n   MultipartAutoConfiguration#multipartConfigElement matched:\n      - @ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MultipartAutoConfiguration#multipartResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NamedParameterJdbcTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NettyAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)\n\n   NoOpCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)\n\n   ObservationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry' (OnClassCondition)\n\n   ObservationAutoConfiguration#observationRegistry matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration matched:\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration matched:\n      - @ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found bean 'braveTracerBridge' (OnBeanCondition)\n\n   ObservationAutoConfiguration.MetricsWithTracingConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:\n      - @ConditionalOnBooleanProperty (spring.dao.exceptiontranslation.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ReactorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Hooks' (OnClassCondition)\n\n   ReactorNettyConfigurations.ReactorResourceFactoryConfiguration#reactorResourceFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.ReactorResourceFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)\n\n   RedisAutoConfiguration#redisConnectionDetails matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#redisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisAutoConfiguration#stringRedisTemplate matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisCacheConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)\n\n   RedisHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisReactiveHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)\n\n   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:\n      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RedisRepositoriesAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)\n      - @ConditionalOnBooleanProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.VirtualThreadsExecutorEnabled found non-matching nested conditions @ConditionalOnThreading did not find VIRTUAL; NestedCondition on NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.NotReactiveWebApplication NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition)\n\n   RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientBuilderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientAutoConfiguration#restClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestClientObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestClient' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder' (OnBeanCondition)\n\n   RestTemplateAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   RestTemplateAutoConfiguration#restTemplateBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RestTemplateObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)\n\n   ScheduledTasksObservabilityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   ServletEndpointManagementContextConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n\n   ServletManagementContextAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.Servlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'jakarta.servlet.ServletRequest' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:\n      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   SimpleCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)\n\n   SimpleMetricsExportAutoConfiguration matched:\n      - @ConditionalOnEnabledMetricsExport management.simple.metrics.export.enabled is true (OnMetricsExportEnabledCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SimpleMetricsExportAutoConfiguration#simpleConfig matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#pageableCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#sortCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SpringDataWebAutoConfiguration#springDataWebSettings matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SpringDataWebSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SqlInitializationAutoConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.sql.init.enabled=true) matched (OnPropertyCondition)\n      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'spring.sql.init.mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)\n\n   SslAutoConfiguration#sslBundleRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   SslHealthContributorAutoConfiguration#sslHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: sslHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslHealthContributorAutoConfiguration#sslInfo matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SslObservabilityAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found beans 'sslBundleRegistry', 'simpleMeterRegistry' (OnBeanCondition)\n\n   StartupTimeMetricsListenerAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#diskSpaceMetrics matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#processorMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SystemMetricsAutoConfiguration#uptimeMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)\n\n   TaskExecutorConfigurations.AsyncConfigurerConfiguration matched:\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.AsyncConfigurerConfiguration#applicationTaskExecutorAsyncConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ModelCondition @ConditionalOnProperty (spring.task.execution.mode=force) did not find property 'spring.task.execution.mode'; NestedCondition on TaskExecutorConfigurations.OnExecutorCondition.ExecutorBeanCondition @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (TaskExecutorConfigurations.OnExecutorCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskExecutorMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics' (OnClassCondition)\n      - @ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'applicationTaskExecutor', 'simpleMeterRegistry', 'taskScheduler' (OnBeanCondition)\n\n   TaskSchedulingAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)\n\n   TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter matched:\n      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' (OnBeanCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration matched:\n      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskScheduler matched:\n      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TomcatMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:\n      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager' (OnBeanCondition)\n\n   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionManagerCustomizationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)\n\n   TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebClientAutoConfiguration#webClientBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration#webClientHttpConnectorCustomizer matched:\n      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'clientHttpConnector' (OnBeanCondition)\n\n   WebClientAutoConfiguration#webClientSsl matched:\n      - @ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientAutoConfiguration.WebClientCodecsConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.web.codec.CodecCustomizer; SearchStrategy: all) found beans 'jacksonCodecCustomizer', 'defaultCodecCustomizer' (OnBeanCondition)\n\n   WebClientAutoConfiguration.WebClientCodecsConfiguration#exchangeStrategiesCustomizer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebClientObservationConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   WebEndpointAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#endpointMediaTypes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#pathMappedEndpoints matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration#formContentFilter matched:\n      - @ConditionalOnBooleanProperty (spring.mvc.formcontent.filter.enabled=true) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:\n      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:\n      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.EnableWebMvcConfiguration#viewNameTranslator matched:\n      - @ConditionalOnMissingBean (names: viewNameTranslator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:\n      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer matched:\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper' (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry' (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration#webMvcObservationFilter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   WebMvcObservationAutoConfiguration.MeterFilterConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   WebSocketServletAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n      - found 'session' scope (OnWebApplicationCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:\n      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n\nNegative matches:\n-----------------\n\n   ActiveMQAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)\n\n   AopAutoConfiguration.ClassProxyingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AppOpticsMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)\n\n   ArtemisAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   AtlasMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)\n\n   AuditAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)\n      Matched:\n         - @ConditionalOnBooleanProperty (management.auditevents.enabled=true) matched (OnPropertyCondition)\n\n   AuditEventsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.health.livenessstate.enabled=true) did not find property 'management.health.livenessstate.enabled' (OnPropertyCondition)\n\n   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.health.readinessstate.enabled=true) did not find property 'management.health.readinessstate.enabled' (OnPropertyCondition)\n\n   AvailabilityProbesAutoConfiguration:\n      Did not match:\n         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)\n\n   BatchAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)\n\n   BatchObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor' (OnClassCondition)\n\n   BeansEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   BravePropagationConfigurations.PropagationWithBaggage#propagationFactory:\n      Did not match:\n         - @ConditionalOnEnabledTracing management.tracing.enabled is false (OnEnabledTracingCondition)\n      Matched:\n         - @ConditionalOnMissingBean (types: brave.propagation.Propagation$Factory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   BravePropagationConfigurations.PropagationWithoutBaggage:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.tracing.baggage.enabled=false) did not find property 'management.tracing.baggage.enabled' (OnPropertyCondition)\n\n   Cache2kCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder' (OnClassCondition)\n\n   CacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:\n      Did not match:\n         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)\n\n   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)\n\n   CacheMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) did not find any beans of type org.springframework.cache.CacheManager (OnBeanCondition)\n\n   CachesEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)\n\n   CassandraAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CassandraReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)\n\n   CassandraRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)\n\n   CloudFoundryActuatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)\n         - found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnBooleanProperty (management.cloudfoundry.enabled=true) matched (OnPropertyCondition)\n\n   CompositeMeterRegistryConfiguration:\n      Did not match:\n         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)\n\n   ConditionsReportEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ConfigurationPropertiesReportEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ConnectionFactoryHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   ConnectionPoolMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)\n\n   CouchbaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   CouchbaseHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)\n\n   CouchbaseRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)\n\n   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:\n      Did not match:\n         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)\n\n   DataSourceCheckpointRestoreConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.crac.Resource' (OnClassCondition)\n\n   DataSourceConfiguration.Dbcp2:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourceConfiguration.Generic:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)\n\n   DataSourceConfiguration.OracleUcp:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourceConfiguration.Tomcat:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceJmxConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) found different value in property 'spring.jmx.enabled' (OnPropertyCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)\n\n   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)\n\n   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)\n\n   DatadogMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)\n\n   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)\n\n   DynatraceMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)\n\n   ElasticMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)\n\n   ElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate' (OnClassCondition)\n\n   ElasticsearchReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository' (OnClassCondition)\n\n   ElasticsearchRestClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)\n\n   ElasticsearchRestHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient' (OnClassCondition)\n\n   EmbeddedLdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration:\n      Did not match:\n         - Application is deployed as a WAR file. (OnWarDeploymentCondition)\n      Matched:\n         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n\n   EnvironmentEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ErrorWebFluxAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   FlywayAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FlywayEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)\n\n   FreeMarkerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)\n\n   GangliaMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)\n\n   GraphQlAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlRSocketAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQueryByExampleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlReactiveQuerydslAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.querydsl.core.Query' (OnClassCondition)\n\n   GraphQlWebFluxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebFluxSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphQlWebMvcSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   GraphiteMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)\n\n   GroovyTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)\n\n   GsonAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   GsonHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)\n\n   H2ConsoleAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet' (OnClassCondition)\n\n   HazelcastAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HazelcastJpaDependencyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)\n\n   HealthEndpointReactiveWebExtensionConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n\n   HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   HeapDumpWebEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint the configured access for endpoint 'heapdump' is NONE (OnAvailableEndpointCondition)\n\n   HibernateMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.hibernate.stat.HibernateMetrics' (OnClassCondition)\n\n   HttpExchangesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository (OnBeanCondition)\n      Matched:\n         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)\n         - @ConditionalOnBooleanProperty (management.httpexchanges.recording.enabled=true) matched (OnPropertyCondition)\n\n   HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n\n   HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration:\n      Did not match:\n         - Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n\n   HttpExchangesEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   HttpHandlerAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n\n   HttpServiceClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.service.registry.HttpServiceProxyRegistry; SearchStrategy: all) did not find any beans of type org.springframework.web.service.registry.HttpServiceProxyRegistry (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.client.support.RestClientAdapter' (OnClassCondition)\n         - NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application (NotReactiveWebApplicationCondition)\n\n   HumioMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)\n\n   HypermediaAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)\n\n   InfinispanCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)\n\n   InfluxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)\n\n   InfoContributorAutoConfiguration#buildInfoContributor:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      Matched:\n         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#envInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.env.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#gitInfoContributor:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      Matched:\n         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#javaInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.java.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#osInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.os.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#processInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.process.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoContributorAutoConfiguration#sslInfo:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.ssl.enabled is not true (OnEnabledInfoContributorCondition)\n      Matched:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   InfoContributorAutoConfiguration#sslInfoContributor:\n      Did not match:\n         - @ConditionalOnEnabledInfoContributor management.info.ssl.enabled is not true (OnEnabledInfoContributorCondition)\n\n   InfoEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   IntegrationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)\n\n   IntegrationGraphEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)\n\n   JCacheCacheConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)\n\n   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)\n\n   JdbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)\n\n   JedisConnectionConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)\n\n   JerseyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)\n\n   JerseySameManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   JerseyServerMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener' (OnClassCondition)\n\n   JerseyWebEndpointManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   JettyMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)\n\n   JmsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.Message' (OnClassCondition)\n\n   JmsHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory' (OnClassCondition)\n\n   JmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) found different value in property 'spring.jmx.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)\n\n   JmxEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.jmx.enabled=true) found different value in property 'spring.jmx.enabled' (OnPropertyCondition)\n\n   JmxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)\n\n   JndiConnectionFactoryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)\n\n   JndiDataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'spring.datasource.jndi-name' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   JndiJtaConfiguration:\n      Did not match:\n         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)\n\n   JooqAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)\n\n   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:\n      Did not match:\n         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'spring.data.jpa.repositories.bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'spring.data.jpa.repositories.bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)\n\n   JsonbAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JsonbHttpMessageConvertersConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb' (OnClassCondition)\n\n   JvmMetricsAutoConfiguration#virtualThreadMetrics:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.java21.instrument.binder.jdk.VirtualThreadMetrics' (OnClassCondition)\n\n   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurerVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) found beans of type 'org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer' kafkaListenerContainerFactoryConfigurer (OnBeanCondition)\n\n   KafkaAutoConfiguration#kafkaJaasInitializer:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.kafka.jaas.enabled=true) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)\n\n   KafkaAutoConfiguration#kafkaRetryTopicConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.kafka.retry.topic.enabled=true) did not find property 'spring.kafka.retry.topic.enabled' (OnPropertyCondition)\n\n   KafkaAutoConfiguration#kafkaTransactionManager:\n      Did not match:\n         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)\n\n   KafkaStreamsAnnotationDrivenConfiguration:\n      Did not match:\n         - @ConditionalOnBean (names: defaultKafkaStreamsBuilder; SearchStrategy: all) did not find any beans named defaultKafkaStreamsBuilder (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)\n\n   KairosMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)\n\n   LdapAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)\n\n   LdapHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)\n\n   LdapRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)\n\n   LettuceConnectionConfiguration#redisConnectionFactoryVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' redisConnectionFactory (OnBeanCondition)\n\n   LiquibaseAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)\n\n   LiquibaseEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)\n\n   Log4J2MetricsAutoConfiguration:\n      Did not match:\n         - Logger context was not an instance of org.apache.logging.log4j.core.LoggerContext (Log4J2MetricsAutoConfiguration.Log4JCoreLoggerContextCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.logging.Log4j2Metrics', 'org.apache.logging.log4j.LogManager', 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)\n\n   LogFileWebEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   LoggersEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   MailHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)\n         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   MailSenderAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.mail.internet.MimeMessage' (OnClassCondition)\n\n   MailSenderValidatorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mail.test-connection=true) did not find property 'spring.mail.test-connection' (OnPropertyCondition)\n\n   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:\n      Did not match:\n         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)\n\n   ManagementWebSecurityAutoConfiguration:\n      Did not match:\n         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: ?; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)\n      Matched:\n         - found 'session' scope (OnWebApplicationCondition)\n\n   MappingsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   MessageSourceAutoConfiguration:\n      Did not match:\n         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)\n\n   MetricsAspectsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   MetricsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MicrometerTracingAutoConfiguration.SpanAspectConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   MongoAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MongoHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)\n\n   MongoMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)\n\n   MongoReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoReactiveHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)\n\n   MongoReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)\n\n   MongoRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)\n\n   MustacheAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)\n\n   Neo4jAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jReactiveRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   Neo4jRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)\n\n   NewRelicMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)\n\n   NoOpMeterRegistryConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)\n\n   NoopTracerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found beans of type 'io.micrometer.tracing.Tracer' braveTracerBridge (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   OAuth2AuthorizationServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization' (OnClassCondition)\n\n   OAuth2AuthorizationServerJwtAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.nimbusds.jose.jwk.source.JWKSource' (OnClassCondition)\n\n   OAuth2ClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   OAuth2ClientWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)\n\n   OAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken' (OnClassCondition)\n\n   ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration:\n      Did not match:\n         - @ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) found beans of type 'io.micrometer.tracing.Tracer' braveTracerBridge (OnBeanCondition)\n\n   ObservationAutoConfiguration.ObservedAspectConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.observations.annotations.enabled=true) did not find property 'management.observations.annotations.enabled' (OnPropertyCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   ObservationAutoConfiguration.OnlyMetricsConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'io.micrometer.tracing.Tracer' (OnClassCondition)\n\n   ObservationAutoConfiguration.OnlyTracingConfiguration:\n      Did not match:\n         - @ConditionalOnMissingClass found unwanted class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n\n   OpenTelemetryAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.sdk.OpenTelemetrySdk' (OnClassCondition)\n\n   OpenTelemetryLoggingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.api.OpenTelemetry' (OnClassCondition)\n\n   OpenTelemetryTracingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)\n\n   OtlpLoggingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.opentelemetry.api.OpenTelemetry' (OnClassCondition)\n\n   OtlpMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry' (OnClassCondition)\n\n   OtlpTracingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer' (OnClassCondition)\n\n   ProjectInfoAutoConfiguration#buildProperties:\n      Did not match:\n         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)\n\n   ProjectInfoAutoConfiguration#gitProperties:\n      Did not match:\n         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)\n\n   PrometheusExemplarsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.prometheus.metrics.tracer.common.SpanContext' (OnClassCondition)\n\n   PrometheusMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.prometheusmetrics.PrometheusMeterRegistry' (OnClassCondition)\n\n   PulsarAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   PulsarReactiveAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient' (OnClassCondition)\n\n   QuartzAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   QuartzEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)\n\n   R2dbcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcDataAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)\n\n   R2dbcInitializationConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)\n\n   R2dbcObservationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcProxyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory' (OnClassCondition)\n\n   R2dbcRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)\n\n   R2dbcTransactionManagerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)\n\n   RSocketGraphQlClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'graphql.GraphQL' (OnClassCondition)\n\n   RSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketRequesterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RSocketSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)\n\n   RSocketServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)\n\n   RSocketStrategiesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)\n\n   RabbitAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)\n\n   RabbitHealthContributorAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)\n\n   RabbitMetricsAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)\n\n   ReactiveCloudFoundryActuatorAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n\n   ReactiveElasticsearchClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport' (OnClassCondition)\n\n   ReactiveElasticsearchRepositoriesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient' (OnClassCondition)\n\n   ReactiveHttpServiceClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.web.service.registry.HttpServiceProxyRegistry; SearchStrategy: all) did not find any beans of type org.springframework.web.service.registry.HttpServiceProxyRegistry (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.support.WebClientAdapter' (OnClassCondition)\n\n   ReactiveManagementContextAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   ReactiveManagementWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveMultipartAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.http.codec.multipart.DefaultPartHttpMessageReader', 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   ReactiveOAuth2ClientAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration' (OnClassCondition)\n\n   ReactiveOAuth2ClientWebSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveOAuth2ResourceServerAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveSecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)\n\n   ReactiveUserDetailsServiceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)\n\n   ReactiveWebServerFactoryAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage' (OnClassCondition)\n\n   RedisHealthContributorAutoConfiguration#redisHealthContributor:\n      Did not match:\n         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)\n\n   RepositoryRestMvcAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)\n\n   Saml2RelyingPartyAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)\n\n   SbomEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ScheduledTasksEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   SecurityAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)\n\n   SecurityFilterAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)\n\n   SecurityRequestMatchersManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)\n\n   SendGridAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)\n\n   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)\n\n   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (management.server.add-application-context-header=true) did not find property 'management.server.add-application-context-header' (OnPropertyCondition)\n\n   ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration:\n      Did not match:\n         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedJetty:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext' (OnClassCondition)\n\n   ServletWebServerFactoryConfiguration.EmbeddedUndertow:\n      Did not match:\n         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)\n\n   SessionAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   SessionsEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)\n\n   ShutdownEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint the configured access for endpoint 'shutdown' is NONE (OnAvailableEndpointCondition)\n\n   SignalFxMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)\n\n   SpringApplicationAdminJmxAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.application.admin.enabled=true) did not find property 'spring.application.admin.enabled' (OnPropertyCondition)\n\n   SslObservabilityAutoConfiguration#sslInfoProvider:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.info.SslInfo; SearchStrategy: all) found beans of type 'org.springframework.boot.info.SslInfo' sslInfo (OnBeanCondition)\n\n   StackdriverMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)\n\n   StartupEndpointAutoConfiguration:\n      Did not match:\n         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)\n\n   StatsdMetricsExportAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)\n\n   TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder (OnBeanCondition)\n\n   TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder (OnBeanCondition)\n\n   TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskSchedulerVirtualThreads:\n      Did not match:\n         - @ConditionalOnThreading did not find VIRTUAL (OnThreadingCondition)\n\n   ThreadDumpEndpointAutoConfiguration:\n      Did not match:\n         - @ConditionalOnAvailableEndpoint not exposed (OnAvailableEndpointCondition)\n\n   ThymeleafAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring6.SpringTemplateEngine' (OnClassCondition)\n\n   TransactionAutoConfiguration#transactionalOperator:\n      Did not match:\n         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   TransactionAutoConfiguration.AspectJTransactionManagementConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect (OnBeanCondition)\n\n   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.aop.proxy-target-class=false) did not find property 'spring.aop.proxy-target-class' (OnPropertyCondition)\n\n   UserDetailsServiceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)\n\n   ValidationAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'jakarta.validation.executable.ExecutableValidator' (OnClassCondition)\n\n   WebFluxAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n\n   WebFluxEndpointManagementContextConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n\n   WebFluxObservationAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'io.micrometer.observation.Observation', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n\n   WebMvcAutoConfiguration#hiddenHttpMethodFilter:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mvc.hiddenmethod.filter.enabled=true) did not find property 'spring.mvc.hiddenmethod.filter.enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration:\n      Did not match:\n         - @ConditionalOnBooleanProperty (spring.mvc.problemdetails.enabled=true) did not find property 'spring.mvc.problemdetails.enabled' (OnPropertyCondition)\n\n   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:\n      Did not match:\n         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarVersionLocator (OnEnabledResourceChainCondition)\n\n   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:\n      Did not match:\n         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)\n\n   WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping:\n      Did not match:\n         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)\n\n   WebServiceTemplateAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)\n\n   WebServicesAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)\n\n   WebSessionIdResolverAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   WebSocketMessagingAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)\n\n   WebSocketReactiveAutoConfiguration:\n      Did not match:\n         - not a reactive web application (OnWebApplicationCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer' (OnClassCondition)\n\n   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)\n\n   XADataSourceAutoConfiguration:\n      Did not match:\n         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)\n      Matched:\n         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'jakarta.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)\n\n   ZipkinAutoConfiguration:\n      Did not match:\n         - @ConditionalOnClass did not find required class 'zipkin2.reporter.Encoding' (OnClassCondition)\n\n\nExclusions:\n-----------\n\n    None\n\n\nUnconditional classes:\n----------------------\n\n    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration\n\n    org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration\n\n    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration\n\n    org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration\n\n    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration\n\n    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration\n\n\n","context":"","exception":"","caller":"Caller+0\t at org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logReport(ConditionEvaluationReportLogger.java:72)\nCaller+1\t at org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener$ConditionEvaluationReportListener.onApplicationEvent(ConditionEvaluationReportLoggingListener.java:140)\nCaller+2\t at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:180)\nCaller+3\t at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:166)\nCaller+4\t at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:151)\n","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","method":"logReport","file":"ConditionEvaluationReportLogger.java","line":"72","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.096168+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"ERROR","logger_name":"org.springframework.boot.SpringApplication","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,096","level":"ERROR","thread":"Test worker","logger":"org.springframework.boot.SpringApplication","message":"Application run failed","context":"","exception":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1813)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\t... 111 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:190)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:86)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:205)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:427)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\t... 127 common frames omitted\n","caller":"Caller+0\t at org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:858)\nCaller+1\t at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:813)\nCaller+2\t at org.springframework.boot.SpringApplication.run(SpringApplication.java:328)\nCaller+3\t at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\nCaller+4\t at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n","class":"org.springframework.boot.SpringApplication","method":"reportFailure","file":"SpringApplication.java","line":"858","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1813)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\t... 111 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:190)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:86)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:205)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:427)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\t... 127 common frames omitted\n"}
{"timestamp":"2025-06-12T18:06:16.098828+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.test.context.cache","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,098","level":"DEBUG","thread":"Test worker","logger":"org.springframework.test.context.cache","message":"Spring test ApplicationContext cache statistics: [DefaultContextCache@54fbaa65 size = 0, maxSize = 32, parentContextCount = 0, hitCount = 0, missCount = 1, failureCount = 1]","context":"","exception":"","caller":"Caller+0\t at org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:275)\nCaller+1\t at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:192)\nCaller+2\t at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\nCaller+3\t at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\nCaller+4\t at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n","class":"org.springframework.test.context.cache.DefaultContextCache","method":"logStatistics","file":"DefaultContextCache.java","line":"275","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.099071+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"WARN","logger_name":"org.springframework.test.context.TestContextManager","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,099","level":"WARN","thread":"Test worker","logger":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests@48e3017a]","context":"","exception":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5d50e7f6 testClass = com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests, locations = [], classes = [com.ms.my_spring_boot_project.MySpringBootProjectApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@1951b871, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@2ccca26f, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@698122b2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@c1bd0be, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1021f6c9, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@6f0b0a5e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@3f792b9b, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@b39f4aaf], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1813)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\t... 91 common frames omitted\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\t... 111 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:190)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:86)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:205)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:427)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\t... 127 common frames omitted\n","caller":"Caller+0\t at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:272)\nCaller+1\t at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\nCaller+2\t at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\nCaller+3\t at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\nCaller+4\t at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n","class":"org.springframework.test.context.TestContextManager","method":"prepareTestInstance","file":"TestContextManager.java","line":"272","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":"","stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5d50e7f6 testClass = com.ms.my_spring_boot_project.MySpringBootProjectApplicationTests, locations = [], classes = [com.ms.my_spring_boot_project.MySpringBootProjectApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@1951b871, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@2ccca26f, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@698122b2, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@c1bd0be, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1021f6c9, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@6f0b0a5e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@3f792b9b, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@b39f4aaf], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:128)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:200)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:139)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:388)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:382)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:186)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1716)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:153)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:176)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:382)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:293)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:292)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:281)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:27)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:112)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:111)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$1(InterceptingLauncher.java:39)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:38)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)\n\tat jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:122)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:72)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1813)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:604)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:526)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:333)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:331)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:201)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:617)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$2(SpringBootContextLoader.java:144)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\t... 91 common frames omitted\nCaused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)\n\tat org.hibernate.boot.model.relational.Database.<init>(Database.java:43)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:254)\n\tat org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:210)\n\tat org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:184)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1412)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.populateSessionFactoryBuilder(EntityManagerFactoryBuilderImpl.java:1493)\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1475)\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:400)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:381)\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1860)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1809)\n\t... 111 common frames omitted\nCaused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:190)\n\tat org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:86)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:205)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:427)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironment(JdbcEnvironmentInitiator.java:147)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:125)\n\tat org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:80)\n\tat org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:133)\n\tat org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:262)\n\t... 127 common frames omitted\n"}
{"timestamp":"2025-06-12T18:06:16.11133+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"DEBUG","logger_name":"org.springframework.test.context.support.DirtiesContextTestExecutionListener","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,111","level":"DEBUG","thread":"Test worker","logger":"org.springframework.test.context.support.DirtiesContextTestExecutionListener","message":"After test class: class [MySpringBootProjectApplicationTests], class annotated with @DirtiesContext [false] with mode [null]","context":"","exception":"","caller":"Caller+0\t at org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:156)\nCaller+1\t at org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:105)\nCaller+2\t at org.springframework.test.context.TestContextManager.afterTestClass(TestContextManager.java:540)\nCaller+3\t at org.springframework.test.context.junit.jupiter.SpringExtension.afterAll(SpringExtension.java:141)\nCaller+4\t at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeAfterAllCallbacks$18(ClassBasedTestDescriptor.java:467)\n","class":"org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener","method":"beforeOrAfterTestClass","file":"AbstractDirtiesContextTestExecutionListener.java","line":"156","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
{"timestamp":"2025-06-12T18:06:16.113646+05:30","HOSTNAME":"Nishas-MacBook-Air.local","level":"INFO","logger_name":"org.springframework.kafka.test.junit.GlobalEmbeddedKafkaTestExecutionListener","thread_name":"Test worker","timestamp":"2025-06-12 18:06:16,113","level":"INFO","thread":"Test worker","logger":"org.springframework.kafka.test.junit.GlobalEmbeddedKafkaTestExecutionListener","message":"Stopped global Embedded Kafka.","context":"","exception":"","caller":"Caller+0\t at org.springframework.kafka.test.junit.GlobalEmbeddedKafkaTestExecutionListener.testPlanExecutionFinished(GlobalEmbeddedKafkaTestExecutionListener.java:164)\nCaller+1\t at org.junit.platform.launcher.core.CompositeTestExecutionListener.lambda$testPlanExecutionFinished$14(CompositeTestExecutionListener.java:88)\nCaller+2\t at org.junit.platform.launcher.core.CompositeTestExecutionListener.lambda$notifyEach$21(CompositeTestExecutionListener.java:110)\nCaller+3\t at org.junit.platform.commons.util.CollectionUtils.forEachInReverseOrder(CollectionUtils.java:243)\nCaller+4\t at org.junit.platform.launcher.core.IterationOrder$2.forEach(IterationOrder.java:30)\n","class":"org.springframework.kafka.test.junit.GlobalEmbeddedKafkaTestExecutionListener","method":"testPlanExecutionFinished","file":"GlobalEmbeddedKafkaTestExecutionListener.java","line":"164","application":"my-spring-boot-project","host":"Nishas-MacBook-Air.local","traceId":"","spanId":"","user":"","requestId":"","uri":"","remoteAddr":""}
